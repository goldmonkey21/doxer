rBFyddwHTaUNajMd4CZ3YigMYiKqrj5jsX Rolling back won't change anything, but oh well, we'll see. Long since I registered, never cared to post. I'd like to post this to the Mt.Gox hacking thread.Do you mind if I spam myself over the 5 posts limit?Edit: I see that won't work, you apparently need 5 hours of logged-in time. Considering the code under this, and that I'm member #1725, could you please allow me in?Code:class Account attr_accessor :email, :hash  def initialize(email, hash)  @email = email  @hash = hash endendcontents = File.open("accounts.txt", "r").readcount = 0accounts = {}contents.split("\n").each_with_index do |line, index| match = line.match(/.*,.*,(.*),(.*)/) next if match[1].empty?  # Screw lame 'n easy unsalted hashes next if !match[2].strip.match(/\$1\$.{8}\$.{22}$/)  # Get the email domain domain_match = match[1].strip.match(/@(.*)$/) next if !domain_match domain = domain_match[1]  # Drop some domains next if ["gmail.com", "googlemail.com"].include?(domain)  # List the accounts per domain accounts[domain] ||= [] accounts[domain] << Account.new(match[1], match[2])  count +=1endputs "Found #{count}"exit if !ARGV.include?("--write")# Get the top 10 of domainsif ARGV.include?("--limit") domains = accounts.keys.sort{|a,b| accounts[a].count <=> accounts[b].count}[-10..-1] wanted_accounts = domains.map{|domain| accounts[domain]}.flattenelse wanted_accounts = accounts.values.flattenend# Devide and conquerparts = 4current_part = nilresult_file = nilwanted_accounts.each_with_index do |account, index| should_be_on_part = index/(wanted_accounts.count / parts)  # Second condition is for dirty integer devision spilling over if current_part != should_be_on_part && (!current_part || current_part < (parts - 1))  puts "Changing. Now on: #{index}. Opening: hashes_#{should_be_on_part}.txt"    result_file.close if result_file  result_file = File.open("hashes_#{should_be_on_part}.txt", "w")  current_part = should_be_on_part end  result_file.puts(account.hash)end
