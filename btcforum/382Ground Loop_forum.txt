For those of us who bought at 1.45 for the same March delivery date -- should we expect a small refund?I'm under no delusion about ROI, or discounts after shipment, but this seems like the very same pre-order at a lower price. I'm looking to use a non-PC power supply, with regulated high current 12v DC.Does anyone know (from measurements, specs) what the DC Current draw of the Antminer S1 is?  (Standard or overclocked?)Is 12.0v the ideal input voltage, or would it prefer 13.5v DC?(Is there a DC-to-DC converter in the unit, or does it need 12.0v?)Do all S1 units need a total of six positive leads and six ground leads (for screw terminals)?  I want to have the wiring ready for arrival.Thanks! I suppose you can check to see if the same coins were 'spent' by bytemaster, and to whom. It's relentless..  "difficulty" : 917.83093744!   That's 6.57 gigahash/second running right now, or about 2,000 modern (3500 khash/sec) desktop PCs.The puzzling thing is that the dramatic rises in difficulty seems to have absolutely no effect on the dollar conversion rates.  This can only mean that the meeting between buyers and sellers is totally independent of any specific machine generation rates.It seems likely that the people buying coins have no perceived competition in generating their own btc, so the value is immune to difficulty.I'm just spouting off... Are your settings still showing an unlimited number of Cores for generation?Could it be you were faster when you enabled fewer cores?  (I know some of my HT machines behave this way.)What does your Resource Monitor show?  All CPU's 100% loaded?Any changes to system cooling? Thanks theymos!  That's exactly what I was wondering.  How did you do that?  Was it with the 'bitcointools' that gavinandresen mentioned?I'm also surprised that there's so... few!!I count a grand total of SIX auto-payments from the CUDA client.. that is, six payments to the mandatory address of 5.00 BTC.Each block that the CUDA client found should have sent 5 to that specific address, so this would imply that in the entire closed-source life of the CUDA client, on all the machines it ran on, it found six blocks.What am I missing?  Puddinpop? I think I was perhaps unclear.I want to know the total "incoming" bitcoin count for the address1HZNsUqQxKVLmfPfCAzLwrnVDzx8CxwxnMThat is, not the donations or payoff or whatever, but the auto-transfered coins that the previous CUDA client was sending out.  Unlike any other payment system, we (anyone interested) should be able to determine just how many blocks were generated and taxed to that address.It's just curiosity, but more an exercise in fund tracking.  I haven't figured out how. I don't get it..  Anything that has value is then "cash equivalent". So I've been trying to figure out.. just how many coins did 1HZNsUqQxKVLmfPfCAzLwrnVDzx8CxwxnMreceive?It seems like this should be a matter of public record, and objectively verifiable by anyone.It would be interesting to see how many blocks (before open source) the CUDA client generated.  If each block sent 5 BTC to the address above, that should be easy math, right?I just can't figure out how to get a total tally of coins to a specific address.  Is there a tool for that? It's still not cost effective.These are HP BL460c blades.. around $6k each.  That buys a lot of fresh CUDA!It's a fun way to do "burn in", but not a smart use of resources.12 hyperthreading Xeon cores, though..  each.22,500 khash/sec with -4way, and only 13,400 without, so yeah, it's not subtle. So has anyone tried this client on a HardOCP/Anandtech glory gaming machine?You know, something dual-SLI 480 cards or beastly pair of space heaters?I'm just curious to know what a few hundred CUDA threads looks like in khash/sec.Anyone here pause Crysis for long enough to run it? 4way pays off on one of the HP blade machines..It's a 12-core Intel(R) Xeon(R) CPU X5650  @ 2.67GHzRunning 24 threads with 4way, I get 22,569 khash/sec. Yow. Failure on HP EliteBook 6930p w/ ATI Mobility Radeon HD 3450.BitcoinMinerGPU startedthen the app fails with an error an exits.Win7-64bit I set up a new wallet for this client.  Starting balance is zero, so it can only be a net win regardless of what the code wants to do.That said, my passively-cooled Zotac GT240 is not up to the task.  After five minutes, the generation rate has dropped down to nearly nothing.  I suspect the card has throttled itself down as it bakes under the passive heatsink.  Hmm. Everything above is true here too.My GT240 is pumping 16,339 khash/sec.  Yow!And yes, the machine is damn near unuseable. By my math, I'm generating coins at 3x the previous rate, so if there's a 10% author tax, I can live with that. The article is all about the cost of the hardware, neglecting the more significant cost: electricity.Once you're above baseline power of 11 kWh/day (as any geek is), Southern California utilities get about $0.13/kwh marginal, with taxes, distribution, etc.The 24-core beast built in the article probably draws some serious current.  Hard to guess how much, but I'd guess about 500W?  Anyone know?This will add 360kW/h a month to your electric bill, which will easily drive you into the next pricing tier, or maybe two tiers higher.  Now your marginal power can be $0.18 kW/hr.Yikes.That bitcoin miner would be about $2/day to run, or $788 a year, which means you've never matched the hardware cost of the system in two or three years.If you have to actively cool the room with the computer, at least during daytime, double it again. Not to get all mathy, but if your machine is poking along at 150 khash/sec, you're effectively generating (contributing) about 0.01 BTC/hr for the pool. I dunno.. just my two cents: I thought the wiki info was great.Every field that goes into the hash, when it changes, and how the nonce iteration works.To get more technical than that, you have to bring up your code editor.  Your neighborhood sounds pretty fun.  Is it possible that 'testing' a bitcoin bill for double-spend could be done much faster than confirmation?After all, you just want to know if the coin has been previously spent.SO the cashier takes the bill with the 2D barcode, scans it, and the register confirms that the coin hasn't been previously spent (ie, the balance is real).  The confirmations can come later if the merchant wants to extend some trust.  Seems this wouldn't take any longer than a Visa authorization.In a nutshell, my goal is to pay for something1) Anonymously (thank you sir, you have no idea who I am.)2) Spontaneously (I wasn't planning to spend bills at lunch, but here I am)3) Off-line (I didn't bring my gadgets)4) Minimal trust required (Give me physical goods, and you have reasonable confidence my bill is good.)A completely separate discussion would be valid for discussing a quick way to share BTC addresses, IRL.  Cut & Paste works fine.  "Read your number to me" would not.  A standard 2D sticker on the back of a register would be the ticket here.  "BTC Accepted @" with a phone client that scans and pays. Seriously?  Got free electricity?At Difficulty 623, I've shut down anything under 3000 khash/sec.
You seem pretty certain about it, creighto.I'm not trying to change your mind, and if I and a merchant can find a system that works for "handing over" physical Bitcoins, I suppose it doesn't have to involve anyone else.As a thought experiment, imagine the "scratch off" lottery tickets.  You can't see the receiving key until you scratch it, which makes it visibly void.  A drawer full of these ought to alert the shift manager than an employee isn't following SOP.  I don't really get the difference betwen "checks" and printed coins, except that a check sounds like it involves an intermediate processor -- a cashing authority or bank.  No can do.  The whole point is anonymous payer, anonymous receiver.  I don't want to know who cashed the check, and I don't want them knowing who wrote it.If I'm willing to divulge everything, might as well have a Bank Of Bitcoin MasterCard and leave it at that. Maybe I'm dense, but I still don't get it.  The whole point in handling paper bitcoins is to do so without a central "issuing authority".  I want to print my own, and accept them from anyone's home printer.I totally understand that "showing your bills" to someone gives them a chance to photograph, and "receive them" (steal them, intercept, cash in, whatever).That's just part of the deal.  You're carrying machine-readable (2d barcode) bearer-coins.  Show them only to the party you are paying, who is expected to transfer them on-the-spot to another account.The receiver needs a network connection, the payer does not.  Perfect for customer/merchant scenarios. I'd love to see printed bitcoins.Basically, a bearer-bond note in a 2D barcode.The receiver would have no protection against double-spend, so it would behoove them to scan it on-the-spot and get it into the Bitcoin network.  They could wait for a confirmation, or not.It seems like this would be pretty simple -- get the client to generate a one-time receiving address, pay to it, and then print out the address public/private key pair onto the note.  Any scanner would then have the required keys to receive the transaction and re-spend the coin.Assuming the receiver has a method to scan & post the note, it's no less secure than any other means of bitcoin payment, right? Intel Atom 230 @ 1.60GHz.  Linux 32-bit.(Acer Aspire Revo)Stock: 438 khash/sec (1 proc gives 354)4way:  254 khash/secSo you can take this one off the powerhouse list.   It seems like this could be accomplished via UI change..Instead of presenting 50.00 on generated block, compute how long it took and "trickle" the coins into the wallet to feel better about them for longer.So once you generate a block, you would see pennies start appearing.  Hopefully they would trickle in for as long as it takes to generate your next block, more or less.(I kid, I kid..) Yow -- anyone look at the 24hr chart today?  Someone brought some serious hash power on-line.It's now almost double yesterday. You're on the right track.The I/O requirements are almost zero.  You just need the 80 initial bytes, target hash, and a starting nonce.  You really don't need to talk to the FPGA again until you receive more transactions you want to include, or another block.  For speed, you would test against the target hash in-circuit, and the only output is on 'success'.No need to randomize either -- any kind of value walk (increment, grey code, whatever) should suffice.So yes --- the BTC 64,000 question is how many unrolled hash rounds you can fit into your part(s). Any non-Mac i5 love?Windows i5 64-bit got slower here.[correction -- not true.  Windows doesn't have -4way, and the Linux machines are Xeons.] Best thread evar. What would you even do with VHDL code, anyway?  With your Ubuntu Pentium-III?  Yeah.My point was that if you are willing to spend a summer learning new tools & technologies and decomposing SHA256 to map around your hardware of choice, with a master/controller to mate with it, you're probably best off buying a moderate GPU (GeForce GT240 at $90, or GTX460 $200) and diving into CUDA.  At least two people here have already done it.An Intel i7 870 (3GHz, 4core*HT) is $265, so I'm not talking about exotic gear here.My whole point is that 5 million hash tries a second is nothing to shake a stick at. So is it accurate to say that, so far, only Intel Core i7 processors and certain (Phenom?) AMD processors enjoy a speed bump from -4way? Ah, I see!  Simpler than I thought.(difficulty * 2^32) is the odds of a hit on EACH try.That's the 2.20e12 value again.So total network power, in hash/sec, is then(difficulty * 2^32) / 600Where 600 is a smoothed approximation of last-block-interval-in-seconds. I'm puzzled.  Why would anyone do this?Effectively, we're already pooled today.  Over the long haul, every 10 minutes, someone gets 50 bones, and it's apportioned based on CPU speed.If a slow machine isn't worth running hot for months on end to search, then why would it be welcomed (at greater value) to a pool including faster machines?  Seems to me that if you found a group of like-minded honest individuals, you'd end up with a cluster of really slow machines, rarely finding a treat, and doling out pennies to each.  Further, anyone inclined to join the pool is already running their machine anyway.I guess I'm missing the point. Statistically, you're not very lucky.  In fact, out of a hundred people, you would be one of the two least lucky ones.I suspect something is Not Right with your setup.  Either you're running an old version, firewalled, or somehow not keeping up with the block chain.  Are you at block 75040 or greater?I'm especially concerned that your 'span' of attempts has also covered lower difficulty eras.  That makes you even less lucky.The last time I was that unlucky, I was running a broken 64-bit Linux build.   How does the Difficulty number (511) relate to the hash target?511.77353426 * 2^32 = 2.2e12 hash/day, or 25 Mhash/sec.  I'm not sure how to interpret that, but it doesn't seem to reflect the 3.7 Ghash/sec total.Also, the difficulty web page here:http://www.alloscomp.com/bitcoin/calculator.phpseems to think that 3,600,000 khash/sec is a 10minute average rate. The simplest way is to derive it from the hash target (difficulty).If you take the present target value0000000000800e00000000000000000000000000000000000000000000000000and divide it by the total search space (all 0xF), you get the odds.In decimal: 5.26786429665E+64 divided by the total search size (2^256) shows you have a one in 2.19e12 chance of finding a new block with every hash try.We know that the network, as a whole is guided toward 6/hr, and the difficulty reflects that.  If the average generation rate is one every 10 minutes (600 seconds) then we know that the network as a whole is trying3,663,473,554hash attempts per second.So the aggregate network power is around 3,663,473 khash/second.  Call it 3.7 gigahash/sec.    Further, if my machine is plugging along at 4,000 khash/sec, then I know I represent about 0.1% of the active network, and have a 1/1000 chance of finding "the next block".If you use the *actual* recent block find rates (instead of the 10 minute average), which you currently track and graph, then you can see the interesting graph over time of how many total attempts likely produced that result.I believe the 1/x characteristic would be more interesting to watch for trends than the seconds/block you currently graph, since the number of seconds is forced into a normalized 600 over time.  Total network strength should show an always-upward trend, with some notable spikes, dips, and steps. I'll offer a BTC 100.00 bounty for an addition to http://nullvoid.org/bitcoin/statistix.phpthat shows the inverse (1/x) data: Computing power.Specifically, total khash/sec for the entire network, based on either current difficulty or (preferably) observed block intervals / moving-average.How "strong" is the bitcoin community now, and how is it trending?  That's what I'm looking for.  I'm not picky.  I'm not an FPGA expert, but I dabble.I asked some folks (much smarter than I) to run some back-of-envelope calculations for my preferred Xilinx Spartan-3E.It has 1200k gates, runs at 50 Mhz, and so on.  You can get into it for $150 or so.  (Digilent Nexys2 is hard to beat)The upshot was that a modern desktop machine has such a huge clockspeed advantage (8 cores at 3 GHz?), so only a massively parallel implementation would have a chance of competing.  There really isn't much of an I/O constraint, so it's just grinding on the nonce and testing for success.  Most of the commercial SHA256 cores focus on I/O bandwidth, for the typical application of passing a lot of data into the hash.  This is something much different, with self-generated inputs and a test on the output of each cycle.So.. How many rounds can you fit in a million gates?A modern GPU and some crafty OpenCL/CUDA code seems like a better avenue for research, rapid turnaround, and scalable speeds.  You'd have both high clock speeds and parallelism at work. How much confirmation does it wait for?  The first 1.00 hit right away.. the second one seems to be taking longer? Nothing showing up yet.  0 confirmations. Whooo!  I'm in early on this one.   http://fxnet.co.cc/?ref=18Folks, get in at the TOP!  Reap the REWARDS!  These berries will lubricate your insides, whiten your teeth, and stop acne.You get a whole bucket of detergent for the same price you're paying for one department-store bottle!You'll go from being in BTC debt, to running a balance.  Maserati?  Lambo?  These are the tough decisions you will have to make over a fruity adult beverage.You can be your own boss, and your own best customer!Act now.http://fxnet.co.cc/?ref=18 More than just Accounts, I'd really like total visibility into what bills are in my wallet, the specific transactions in/out, some total register view that has all the details available.  I feel like the UI is a bit dumbed down, and most of the early adopters are curious about the machinery, not just their total balance.Just my BTC 0.02.
The recent upticks in difficulty have been remarkable.  At 511.77, I've even stopped off those machines where I don't pay for marginal power consumption.  My calculation is that the wear/tear from elevated temperatures and full-speed fans has more risk and cost than the BTC value.   (You can question my math.)But my question is this: Are we seeing the rise of mega-power machines, or just an exponential increase in the number of nodes?  That is, are the top-producing machines making leaps in power (over average), or are my machines still about average, just dwarfed by the number of participating machines?  Is there any way to tell? (node counts?)I totally understand that difficulty reflects the state-of-the-art in client khash improvements, but it's clear that my own computers also represent a rapidly diminishing part of the total network generation rate.  As the network gets larger, my chance of finding The Block every 10 minutes shrinks.  I'm thrilled, not bitter  , but I'm curious to understand what has transpired over the past three weeks to make it so dramatic.Cheers. The lower graphs would be much more interesting if they were "truncated" in the Y axis.It seems a few early long-long-time block generations are squashing all the interesting data down to the bottom two pixel rows.Maybe log scale?I'd be curious to see the steps and transitions in the generation rate over time, but it's impossible to see except on the very-short-scale graphs. The recent bug and workchain split has me back on the 32-bit Windows executable.I miss the 64-bit speedup.  Interesting.. fascinating to watch this work its way through the bowels of the system.It was block 73746 that I generated.    CTxOut(nValue=50.00000000, scriptPubKey=0x8DDD5C7DADB2D43AC5F186)08/12/10 02:35 generated 50.00And I sent 49.00 of it to 19Nzg21hQQDAY5GTdTTuUVPA4MaE7AusXz (using the broken chain)Now I'm waiting for that node to figure out it was received, and it's using the new chain. No winners for 4way in my other three Intel machines either:Intel(R) Core(TM)2 Duo CPU     E8500 @ 3.16GHz (64-bit Linux)4way: 1565  std: 3002Intel(R) Xeon(TM) CPU 3.00GHz (32-bit Linux)4way: 1243  std: 2048Intel(R) Core(TM)2 CPU          6300  @ 1.86GHz4way: 932   std: 1733(All running 0.3.10, -1 proclimit)Experiments with proclimit weren't any better. Of course, this happened right after the difficulty kicked up to 511.7, so all these new "good" blocks will have to contend with that.  And a good chunk of the network grind power is off on the wrong chain, so new blocks may take a lot longer than 10min to find.  At what point will the balancing figure this out and possibly kick the difficulty back down again? Question about fallout:  I had a transaction that I submitted after the bad block, using the bad block chain.What is the status of that transaction?From what I can tell, my (updated) sending client wallet shows the deducted amount.Will it get reincorporated into the fixed chain, and will the recipient be able to spend it? 5,911 khash with -4way11,260 without (Dual Xeon E5450, 64-bit, 8 threads) I too am unclear on the merit of "sped up confirmation".  The confirmations are intended to come at a steady and mostly-constant rate.What does either the buyer or seller have to gain by spending real money to rush it? My Linux 64-bit machine is provably healed, and all 11,000 khash/sec are being used For Good at last.ArtForz, lfm, You have incoming coin.  News to me is that *all* your coins are at risk.  I thought it was just clumps of coins (previously received transactions) involved in the transaction, not my aggregate balance.  Yikes.As a countermeasure, I've manually split my wallet up into five new wallets of distributed value.  Now only one is at risk at any given time. The reason the network must be large, and fairly competitive in hash speed, is that your fictitious Chinese-shopping hardware accelerator builder should not, at any given time, be able to dwarf the combined honest power of the network.If we just freeze some old bitcoin app version and say "500 khash/sec is good enough" and everyone stops developing, then over time this becomes easier and easier to defeat.You seem to be asserting that someone could, today, build a dedicated hash machine that can outpace the entire network.  To make this cost-prohibitive, the aggregate khash of the network needs to keep pace with the "value" of the bitcoins that could be subject to attack by a faster network.But the more direct answer to your question of "why everyone is so fixated on speed" is that I want *my* own selfish computers to have a larger search chunk of the total network.   If I contribute 1% of the generation power, I have a 1/100 chance of finding each block first.  That's a huge reach, but an incentive to keep trying new code versions and doing development on the hash code.   For anyone that expects bitcoin to "take off", there will never be a better time than the present to burn energy and search for blocks solutions. Seriously?  The From bc address is right there in the transaction?  That would be great.My clients show only the address the payment was *to*, not from.I'd love to set up a receive address that maintains (in the client?) the sources of all funds, and has a "return to payer" feature. For a wide-open internet server on a well-connected router with a static IP, what's a typical number of connections?My machines seem to settle into 34 or 35 connections and stay there.  Default limit, or some result of natural topography? In recognition of the sluthiness exhibited by lfm and ArtForz, I will send them the first coins that my healed 64-bit Linux machine discovers.Nice work guys.  (lfm, post up an address, eh)It would be great if some future version of bitcoin/bitcoind had an internal self-test, just to confirm that the hashing is working.  As more folks try different options for specialized hardware, it seems all we have today is the indeterminate "difficulty 1" point-to-point test.  A "known good" hardcoded hash seed could make this better. I don't think "indefinite" is the word you're looking for here.  Maybe "limitless", "unbounded", or "unlimited".  Probably not "infinite".But indefinite implies that the precise number of accounts is uncertain, vague, lacking precision.  Not so, right? Really, it's just the refunding that's difficult.If I post a btc address, and everyone agrees that I'm a trustworthy treasurer, I can receive the escrow/bounty just fine.  Further, with the right not-yet-extant tools, anyone could see the accumulated total (so no trust is required there).  That's very cool.  So that becomes the more general coin-tracking problem -- figuring out the total credits in any one address.The problem comes if I want to refund the bounty to the respective donors.  That seems impossible without adding something to identfy the payer (IP address).  Hmm. One calculation I do for fun (but frequently get wrong) is the total khash/sec rate of the entire bitcoin herd.If I'm thinking of it correctly, it seems like a long-term average is easily obtained from the current difficulty rating alone.That is, the difficulty number reflects, to a coarse degree, the gigahash/sec speed of the entire generating workforce, as it was computed at the last adjustment.From this, and my own aggregate khash/sec total, I can think about how much of the network is my own CPU, and what the odds are that I will generate the next block.   Stats for fun. Before solving the difficult "submission and satisfaction" part, I'd love to find a way to pay into a pool, even if that pool is controlled (received/arbitrated) by one person.For example, bounty for some public good (SSE4.2 optimization or somesuch).  I just want a way to send coins out to be 'held' in escrow until some agreed arbiter releases them.In the event the deadline arrives, there should be an easy way to "refund" all the coins back where they came from.The irreversible and anonymous nature of bitcoins makes this really attractive, since the "doer" knows precisely how many coins are pending, and the donors don't need to identify themselves. Just to confirm -- this fix is in SVN 125?
Hah!  This sure helps explain a long-standing mystery.. why my 10,000 khash/sec Linux 64-bit machine is the only one that has never, in two weeks, generated a block.  Nice work!I'd be very curious to know the system power consumption while mining.It's not hard to imagine that 10 VIA C7's would consume much less power than some of the 10,000 khash/s server-class machines generating heat.Someone looking to invest in a super-node might find a unique hardware building block in your work. To ask it another way -- if you *had* generated 50 BTC for your energy and efforts, what would you do with them? Sadly, I don't think there's a viable anti-abuse system when you have an automated system dispensing coins for free.  (anonymous, irrevocable coins)The only countermeasure that makes sense is to slow down the value and pace of the whole faucet to where someone has a chance to manually keep an eye on flow.But coming back to the roots of why it's neat, and what people reasonably get from it, the specific value is not really important.  I see it as more a "system test", where someone can watch coins come in, transfer them to another computer, and so on.  It's not supposed to be "what can I buy with these", but test coins.  Having 0.02 coins is much more fun than having zero.To that end, a system that dispenses BTC 0.02 and has a significant delay (30 mins?) is less likely to be attractive to even automated abuse plots. Man that would be cool -- a simple animated video showing how the bitcoin works, and an example of use.I really believe that most people could "get it" with a simple explanation of the core principles.I pledge BTC 100 to the first animated explanation that is accurate and, well, explanatory.(It sure would be nice if there was a tangible mechanism for pledging.  Even if bytemaster or anyone trusted/reputable would designate a receiving account for pledges, that would be good enough to send the coin out for holding.  This isn't exactly high stakes.) If I remember right, the "lock in" of checkpoints is a relatively new thing in the client. Interesting, knight.I thought nice=19 would allocate (at most) 5% of the CPU: (20 - n / 20)  That's how it used to work, but the scheduler has been through some changes.NewLibertyStandard: It's not hyper-threading, but I'll try running 4 and see what happens to the rate.  I wouldn't have thought...  I ran into a curious issue with the x64 version of bitcoind for Linux.I have it running on 8 cores, with the task re-niced to "19" (ie, most nice).However, it still seems to impact performance of the system for tasks such as compiling and executing, to the tune of 2x speed degradation.Reducing the number of active cores improves the speed of other tasks, but I have to stop it altogether to let other higher-priority tasks run at full speed.  The impact is not subtle -- things that used to take a minute now take two.I confirmed that the nice level is "19", and the other tasks are at standard "0", yet bitcoind still causes them to take twice as long.Memory consumption seems reasonable, and it's not swap-happy.Any ideas? With the patch above, I was unable to build the test program.  You? I got the patch knitted in, and I think I did it correctly.. wasn't complicated.Regrettably, the hash rate has decreased by almost half.  I'm down from 2071 (stock build, svn tip) to 1150 khash/sec with the patch.It's an Intel Xeon 3 GHz, Linux, with these proc flags:Code:flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe nx lm constant_tsc pni monitor ds_cpl cid cx16 xtprHas anyone seen gains?Did I botch it?  Missing CPU capabilities?  Wrong compiler options? I went from being unlucky to just highly improbable.I've got about 15,000 khash/sec running altogether, and generated absolutely nothing for over two weeks.Then, in the span of 12 hours, one of my slower (linux) machines found THREE blocks.  Go figure. No joy against SVN tip here.Code:patching file sha256.cpppatching file main.cppHunk #1 FAILED at 2555.Hunk #2 FAILED at 2703.2 out of 2 hunks FAILED -- saving rejects to file main.cpp.rejpatching file makefile.unixHunk #1 FAILED at 41.Hunk #2 FAILED at 52.Hunk #3 FAILED at 64.3 out of 3 hunks FAILED -- saving rejects to file makefile.unix.rejpatching file test.cppTrying manually now. Excellent improvement!  I pulled down the SVN tip and had no trouble building on my headless server.No X11, no Wx, and RPC password support.. sweet.Thanks! Runs fine on the i5 Macbook Pro.  Generates a lot of heat, but it's more stable than the speedy Windows x64 version by far. That's very fascinating insight,  knightmb.  Some incredible machines on-tap.    I have been doing a lot of btc-per-energy calculations, but outright renting cores for off-peak khash is taking it to the next level. At the current difficulty level, I've stopped all coin generation on machines where I pay for power or cooling.  Even the highest-end i7 machines had enough of a delta between idle/light-load and full steam that it was not worth the marginal cost.  Not by a longshot.Recovering bulk coins from the dusty wallets of early adopters is very clever.   I've thought about dialing BitCoin down to 7 active cores on my desktop machine, just to keep one free for general lightweight UI use. More interesting than I would have guessed.   I liked the Stonehenge article the best.14xRWRzqt3bk5LtSeSgeQeTa9spXum2tAA Um.. Wow.  That last one was a bit of a leap.Intel Core i7-870 (2.93 GHz) running 4950 khash/s here. (4 cores Turbo'd to 3.2 GHz)(Intel version)Anyone seeing a speed difference between VS and Intel? Interesting replies.I don't have such a client -- just to clear that up.What I'm getting at is this:  If BTC were highly valued, and a very clever-but-selfish developer had an exceedingly fast client (say, someone gets CUDU running on all cylinders, or hand-crafts SSSE3 for i7), would they be better off retaining the program for their exclusive use (during inflation), or offering it for 'sale' by effectively charging a fee for every find.I suspected it would be more profitable to distribute it with a small fee, but the reception sounds a bit... less favorable. If you could download a Bitcoin client that computed hashes at twice your current rate, but sent 5 of every 50 bitcoins awarded to the software developer, would you run it?
I'm either facing the losing side of the statistics, or doing it wrong.It's been four days since I've seen fresh coin, and I'm running 7200 khash/sec (aggregate).That puts me over 95% percentile.I'll stay away from Vegas this weekend. Runs about the same speed as the VC++ version here (Xeon, Win7 64-bit). I'm not getting the point.  Why would I add coins to your "investment" wallet?I didn't see anything there about what you intend to do with the windfall in the future.   That seems important.Otherwise, I'd just invest the coins in my own wallet, right? So --- Bitquux, that was Olipro's binary that found the coin? Very interesting.What khash/sec rates do you get on Beagleboard?Using the OMAP's DSP might be an interesting SHA256 approach. Here's a weird question.. has anyone actually generated a block with this faster version?I have a few machines that used to regularly generate, and since switching to this version -- zip.  I know these things are subject to random variation, and it could be a dry spell, and the difficulty is going up, but... could it be a bug? Win7 64-bitIntel Xeon 5130 (2.0GHz dual-proc)I'll send you the first 50.0 it finds.  Get visual C 2010 redist from Microsoft -- pointers here:http://www.mydigitallife.info/2010/04/17/visual-c-2010-runtime-redistributable-package-x86-x64-ia64-free-download/The new code is full of win.. hash rate (4 core) went from 1350 to 1880 khash/s.  Sweet! I've got libglib2.0-0 installed.    I believe Debian's libstdc++.so is older than the one bitcoind was compiled with.  Same error here. The problem is that much of the VPN/Crypto hardware is aimed at high bandwidth crypto, or high speed RSA calculations and the like.  "Heavy Lifting"Our needs are much simpler.. we just want to run a lot of hashes.  Even IO bandwidth isn't all that important, since we know the entire set of input data to hash, and we're only interested in characteristics of the output, and not even the hash values need to be output at all.You can run SHA-256 on a Xilinx Spartan 3A at about 7 Mbps per MHz, so 280MHz should crunch 2170 Gbps, and you should be able to run quite a few cores given our meager I/O requirements. I've been trying to build this on a headless (no X, no GUI, no windows, no gtk) system, and wx is having none of it.Even the baseconfig core functionality seems to require a bunch of gtk headers to be present, which then made me pull in 100+ packages just to compile wx base.  And Boost, of course.It seems a much more lightweight bitcoind build system should be possible. Bastard.  I had my own hunch, given how thin and incompetent his claims were.(Myself, I'm not about to run anyone else's binary as root, but that's just me.)Anyhow, it's now an interesting question.  bitcoin2paysafe should post his paid address.If I understand correctly (and I may not), anyone can now follow the progress of those "dirty" coins through the system.If CodexTheSloth spends his coins on physical product, we can send out the tire-iron goons.  It's effectively marked bills, so any future vendor he deals with should see this thread.  Or something like that.. OpenCL bitcoin crashes with a Bus Error on a 27" iMac (ATI Radeon).Anyone get it to work on a current-gen iMac? Normally, I would include the cost of hardware, but in this case the hardware is already necessary and sunk.  It's just a software addition, so the only incremental cost is the electric power.If I was building dedicated miner hardware, then I'd calculate that as well.Mostly I was trying to decide whether to leave generation on, or off, even in the event I had a real need for BTC.In this case, OFF was the obvious answer.  It's currently cheaper to buy BTC than generate them on this class of hardware.  I'm curious to see if the market values adjust with the difficulty, or even the arrival of the power bill.I suspect many of the big-number BTC miners are using someone else's compute farm (work, school, etc) and externalizing the cost of the power. It would be a useful learning exercise, especially when you figure out that you can't mint money like the real banks do.Without leverage (the ability to lend out BTC you don't actually have), your upside is limited to just the deposits you hold (lent out) and the gap between interest paid and owed.(Ignoring all the issues with anonymous lenders, of course.) I run my computers off solar-generated electricity, so I keep pretty tight tabs on how much power they consume.I have one headless Ubuntu server that is always-on, usually with the disk array spun down, as it has some central network management roles.  It's an Intel Core2Duo E6300 @ 1.86 GHz, and mines at about 950 khash/s.I was curious to see the impact bitcoind generation would have on it.  Here is what it looks like:The lowest level on the left is idle, and the noise after it is bitcoind inhaling the block history.  The step up is the bitminer threads.In short, hashing raised the idle floor from about 120W to 160W, or +40W.This draws 29 kilowatt-hours a month from my generation, which means I net some $3.80 less for power ($0.13/kwh marginal power rate)If I generate an average of 13 blocks a month at the current difficulty, BTC 650, that puts my cost at about US$0.005/BTC.In short, I'm better off buying BTC from the exchange than generating them on this particular machine.  Food for thought. I'm not certain that accounts for the very slow startup.I set up bitcoin on a new (relatively fast) computer, connected by gigabit ethernet to another running machine, and -connect= to send it directly to that node.It still took a really long time to bring the blocks over.  It would pause for a long time at 501, 1001, etc.  Every 500 blocks would have a long pause before starting again.I'm just questioning whether it's all disk and CPU bandwidth constraints, or if there's something in the system that injects pauses or timeouts. I'm trying to wrap my head around the coin log idea, and wonder what information is available in it.Could someone make a graph of all the coin values ever awarded, their path through the system, and their current holder?  Something like http://www.wheresgeorge.com/ but on the whole economy?Is it possible to tally up the holdings of every known bitminer/Bitcoin Address and produce something like the "Top 10 Richest Bitcoin holders"?What information is private?  I suppose aggregation of multiple Bitcoin Addresses (a person, for example) is inscrutable.  But could someone, conceivably, state with accuracy how much money has been donated to Bitfountain's posted address? That's an important point:  You don't need to generate bitcoins any more than you need to go mine your own gold.Turn off your computer, go do some "real work" that people value, and sell it for bitcoins.Anyone is free to leave the energy-burning computational expense to those that want to do it.I sleep just fine.  My computer and network are 100% solar-powered.  If I was building dedicated bitminer hardware, I'd start with something like this:http://www.xilinx.com/products/ipcenter/Fast_SHA-1-SHA-256_MD5_Hashing_cores.htm
