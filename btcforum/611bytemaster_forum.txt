The supply of EOS is 1B,  900M are circulating within the next 335 days.  The supply will not be changing so can be hard-coded. 204M are "liquid" now and an additional 2M are being made "liquid" every 23 hours.  Based on Steem Power president the full 900M should be the basis because 900M will be entering the market within a timeframe relevant to todays pricing. I got this private message...  The only SCAM here is the original poster who didn't bother to actually perform a DIFF on the codebase.  Even a cursory examination of the code will show you there is VERY LITTLE left of the original bitshares code. Yes the file names and directory structure is similar, that is because the design pattern is similar.   This is not me even though it appears they attempted to subtly imply it might be me to the extent that multiple people contacted me, if this message is deleted we have strong evidence this is a scam.I will post all EOS info on Steem (https://steemit.com/@dantheman) where edit history minimizes this kind of potential abuse.We will not be doing a secret steem-like launch of EOS. Do not look for future announcements by me from secret accounts.  I will not repeat the Steem launch strategy.Please report this thread to the moderators if this post is deleted. I just stumbled across this critique and wanted to add a response:1. Users attempted to flood the steem network with transactions, validating nodes included transactions at the specified limit.  2. There is a limited supply of computational power, thus people bid up the price they are willing to pay to transact and it results in increased profit margins due to the fixed (unchanged computational cost) of validating a script.  Just like BTC fees rise now that blocks are full, the cost to transact on ETH will rise once the single-threaded performance limit is hit.Your remaining points about POW on each script and Nash Equilb are completely missing the point by getting lost in the weeds. An attacker can submit a transaction for validation that fails after the allowed time (say 2ms).  The attacker generates the transaction but doesn't run it themselves, which gives them an advantage over the defender.If the defender sets an arbitrary POW requirement on a per-connection basis, then they can force the attacker to perform a 2ms POW that is validated in 1 us before attempting to process the script.  The attacker would have to redo their POW for each peer they want to broadcast to.Long-lasting connections can build up "trust" and reduce POW requirements for nodes that demonstrate they do not relay invalid transactions.  First violation of trust reverts back to POW. Anyway, preventing SPAM is a trivial problem compared to attempting to scale ETH.  It means you cannot create an account and then cashout.  You must create an account and then use it to earn 10x the account creation fee.  Account creation fee is 5 STEEM now and is constantly falling.  So you can either wait or earn.   You can still mine it and will be able to for ever. There is one POW block every 63 seconds on average for the life of the coin. Furthermore, the Steemit team has adopted a neutral position on witnesses and isn't voting.   The question of whether or not there were lies depends upon definitions. Understanding that people can and do have different definitions for the same word is the first step to resolving conflict. Here is my perspective and thinking at the time we posted:1. Steem is not a pre-mine because we did no mining before the code was public and anyone could participate2. Steem is not an insta-mine because mining occurred at a fixed rate for a full month before VESTING kicked in, also mining continues for ever 3. Steem is not an IPO / ICO because we didn't sell anything before we delivered the goodsAfter we launched a new term was introduced 'ninja-mine' which I presume means "sneeky"... but we admitted at launch that that was our intention. So all that people are left with is that "early miners" have the ability to "dump" and suppress the price. Guess what, miners have dumped much more than Steemit has sold. I myself have purchased a lot of steem. Lastly, we designed the system from the beginning to encourage commitment and discourage dumping. So it is relatively clear that the only people being deceptive and dishonest are the trolls who make accusations without knowing what they are talking about. The only people getting scammed are those who are scared away by the trolls.  We have asked for nothing and given much. The market will sort out whether or not Steem has value. The blockchain determine everything by voting.  The more consensus there is around your post the more you make.If you "reblog" posts from another blog then it depends on many factors to see how voters turn out. The only thing with respect to moving VESTS that has even been discussed is the ability to "merge" accounts, but not divide and transfer. There are complex edge cases that this exposes so it isn't a high priority at the moment. Welcome to Steemit, decentralized and incentivized social media.Steemit is a new social media platform built on the Steem blockchain where the community rewards individuals for their posts, comments and votes, co-founded by Ned Scott, CEO, and Daniel Larimer, CTO of Steemit and founder of Bitshares.Underneath the hood of Steemit.com there is a tradeable cryptocurrency token, called Steem, and it's performing well on the US-based exchange, bittrex.com, and blockchain-based exchange openledger.info. With Steemit.com, posts, comments and votes are immutable.  Attribution is a given. Accreditation is not taken for granted. And community appreciation is an actual reward.We were recently in the press. Here is an article from CoinReport: https://coinreport.net/conversation-ned-scott-ceo-steemit/.  And another from Coin Desk: http://www.coindesk.com/facebook-user-controlled-social-media-blockchain/There are large rewards being distributed for Steemit's first and largest distribution on July 4th.  See the leaderboard at https://steemit.com/trending.  There are Sub-Steems for talking about cryptocurrency and Bitcoin, as well as many other topics.Steem rewards long term holders .. By Purchasing Steem and "Powering Up" the Steem, the holder earns more Steem and voting power to use on Steemit.com  Voting power allows the user to earn more Steem.Sign up on steemit.com today to have your account funded with 10 Steem, and lets be part of the movement for a better online community.Best regards,Ned, "steem" CEO of Steemit, https://www.linkedin.com/in/nedscottDan, "Bytemaster", CTO of Steemit, founder of Bitshares, https://www.linkedin.com/in/daniel-larimer-0a367089Application: https://steemit.comCryptocurrency & Blockchain Info: https://steem.ioVideo: https://www.youtube.com/watch?v=xZmpCAqD7hsBitcointalk Steem announcement: https://bitcointalk.org/index.php?topic=1410943.220Trending Posts: https://steemit.com/trendingSlack auto-inviter: http://steem.herokuapp.comArticles http://www.coindesk.com/facebook-user-controlled-social-media-blockchain/https://coinreport.net/conversation-ned-scott-ceo-steemit/http://cointelegraph.com/news/steemit-new-social-media-platform-which-pays-you-to-posthttps://coinreport.net/steemit-rewards-social-media-content-creators-cryptocurrency/http://www.the-blockchain.com/2016/05/03/new-blockchain-social-media-platform-steemit-pays-post-vote-online/ Steem held by Steemit, Inc: 14,331,475.907   https://steemit.com/@steemit   -> this is the total STEEM and VESTING STEEM combined (57%).Steem paid to employees and contractors should not be counted as founders, they are free to sell like anyone else.Steem vesting can be viewed as a perfectly laddered / rotating 2 year CD.   The "average time until maturity" is 1 year.  Ie: 1% is available in 1 week and 1% takes 2 years... 50% available in 1 year. 99% NinjaMined is inaccurate. If you want to talk about founder mining then 60% NinjaMined is right.The question of "origin of tokens" is almost irrelevant, all that matters is "current ownership" and "present value".  The debate about whether Vesting STEEM or locked up HODL should be included in the market cap should be separated from the debate on whether "founders" coins should be counted. Conflating these two concepts can seriously misrepresent things.Suppose that the vesting period was just 1 week? Would that change the opinion on whether or not they should be counted?  Suppose it was 1 month?  At what point in time do vesting tokens get "taken out of supply"?1% of all STEEM could be on the market within 7 days.5% of all STEEM could be on the market within a month.50% of all STEEM could be on the market this year.100% of all STEEM is available for BULK trades today.Clearly vesting for 1 hour or even 20 hours counts in the supply of Bitcoin (time until new coins are transferrable).So now we are left with drawing some kind of arbitrary line in the sand. It comes down to a "net present value" calculation. One thing is certain, a $285K market cap and ranking at over 100 on CMC is grossly out of proportion with actual interest and capital investment in the Steem blockchain.I am all for having some kind of sanity check on whether or not a platform's "valuation" is fair and reasonable.  You will note that coins held by the Eth Foundation are included along with coins held by Satoshi.  Even the vesting stake from BitShares has been included for the past year and a half along with the "founders stake" in BitShares.I am mostly arguing for consistency and fairness of rankings.  https://steemit.com/@steemit         => 12,928,066.340 STEEMWith a total current supply of 22,214,424.000 STEEM means Steemit has 58% and the rest is held by community members.  So even if you wanted to factor out Steem held by Steemit, the current methodology of factoring out all vesting *users* is wrong.If you create 10 billion shares, and sell 1 of them for $1.00 back and forth with yourself to generate millions in daily volume, it obviously doesn't create a coin that should be listed above Bitcoin. Which is what the scammers would attempt to do. So the real question is whether or not there exists a legitimate market with actual trades with many independent individuals valuing the coin or whether it is a closed market with a bunch of sock puppets. In effect, are all trades in the token based upon arms-length fair valuation / speculation or are the trades simply moving money from one pocket to another. At a certain point it becomes obvious the market is pricing in the full supply rather than just part of it.  Does it really make sense that someone buying STEEM, then converting it to VESTS should REDUCE the market cap? Soon the ridiculousness of the current method will become apparent when Steem Backed Dollars will have a higher market-cap than the STEEM that is backing it. So I think there is a case to be made that a chain is either "public" or "private" with a value set by the "market" or by "decree".   It is easy enough to tell the difference. Having low-latency internet is just another kind of POW, like having a fast CPU, a GPU, or any other kind of work. This could be mostly mitigated by moving to 3 second block intervals.  Under this model you effectively turn the blockchain INTO a pool by allowing 200 times as many blocks to be produced, each with a reward of 0.5%.   This statement is false. Blocks will continue to be produced on average every 10 minutes with or without pools.With 100,000 people who have equal hashing power, they will produce a block on average once every 2 years.  With 144 mining conglomerates they would each produce a block once per day.... of course, if you increase mining frequency to once per minute, then you could have 1440 conglomerates each producing on average once per day.The end result is that hash power would end up held by a couple thousand conglomerates each of which would still have acceptable variance. Anyone with 0.05% or more of total hash power could produce daily.  Anyone with .001% of the hash power could produce monthly.How many total individual miners does Bitcoin have today?  There are only ~500,000 unspent outputs. If 1% of all bitcoiners have mining hardware, that would be 5000 people mining.  How many individuals miners actively mining less than 0.08 BTC per month?   Those are the only individuals who might get excluded by solo mining.
I am interested in what the Bitcoin community thinks about the impact of mining pools.  If it were possible to design a proof of work system that effectively eliminated the ability to pool mining would that be an improvement or not?Pros:  More Independent Producers / Decentralization   Harder to censor  Increase profits for large miners (less competition from small miners)  More profits mean lower costs and lower transaction feesCons:  Higher variance would exclude some small miners  Excluded miners will lead to slightly lower difficulty for the same mining reward Any other pro's and cons?  Sorry, bit BitShares has had this for 2 years! BitUSD, BitGOLD, BitBTC, etc. At the moment is is going for $1.11 because of the bear market.   We have recognized the problems with the current system and have a major update that will fix the liquidity issue.  I would say that right now BitUSD is extremely liquid at $1.00. it is just expensive to buy because it can only be created by people looking to short and no one wants to short in a bear market.  If I had $55K BitUSD I could sell them all at $1.00 right now which is 33% of the BitUSD supply.    If 90% of block producers attacked then block intervals would go from 10 seconds to 100 seconds which is still faster than Nxt and Bitcoin.No delegates have ever been successful campaigning on a platform of kickbacks.101 delegates only have VETO power on transactions, they can not perform arbitrary actions..As long as there are 51 honest delegates the 50 dishonest delegates can be voted out. And which pockets do you think deserve money? Depends upon which costs you are referring to.  If you own the hardware and have unlimited power and bandwidth then costs are effectively 0.If you own no hardware and must rent a VPS with 4 GB of ram then you are talking $50 per month + labor. What scale are you talking:  today's scale with less than 1 TPS or the future with 1000 TPS?  Too many variables to estimate the cost. Here is where I think it will ultimately end up for all crypto projects that grow to be the size of Twitter, Facebook, and Google.... bandwidth costs will dominate followed closely with storage costs.   I don't think the average home user will want to consume a large fraction of their bandwidth (at the expense of games, TV, and web browsing).    My home internet costs me $100 per month and would not be sufficient at 1000 TPS and it is really good internet.So if you ever want crypto to be more than a hobby then you need plans to scale.  You have no idea what you are talking about.  1. ProtoShares wasn't "premined" and was announced weeks prior and the first block wasn't even mined by a Dev.  It was mined by Super3 2. The plan was for ProtoShares to allow people to start mining BTS while BTS was under development.... BitShares were not created because it was "mined out".   No one likes a smart ass.   This is hilarious given my very public stance in favor of non-violence, voluntary association, Non Aggression, and the Silver Rule.   *If* there was any threat of violence or *mandatory* adoption then I would be 100% against it.  1) Everything is Opt-In, if you don't like it go get robbed by some miners. 2) Shareholder's can fire delegates without consequence, any delegate that pulled out a gun would get fired Everyone has to take some "stance" and as soon as you take a stance then you are subject to attack.   Those who are attacking BitShares and taking the time to produce this hilarious propaganda art need to adopt a stance.1) Pro Bitcoin?   2) Pro Nxt?3) Pro Ripple? From where I sit, all three get the job done and produce a trustworthy irreversible public record.   From where I sit, BitShares makes better use of its dilution than Bitcoin and both systems have the same long-term taper toward 0% inflation. From where I sit, BitShares is the most efficient (speed, cost) at producing an irreversible public record. Take a stance, then lets apply the logic of your arguments against your own position.  If you can do so without contradicting yourself I would be very impressed. By the time BitShares is big enough as a top 10 national currency you can believe that the dilution rate will be far less than the rate of economic growth which means it will be a price-deflationary currency.   Under communism all means of production are owned in common by "all" rather than by individuals.  This is a non-voluntary arrangement which denies property rights.    Under capitalism all means of production are owned privately.There is a limit to how much capital an individual can acquire which means some people voluntarily pool capital in the form of companies.Companies issue new shares all the time when new investor money comes it.  This isn't considered wealth redistribution, it is an equal trade of new shares for new capital.  All companies are ultimately managed by their shareholders who elect a board of directors who appoint management who hires employees.  All companies are vulnerable to a hostile takeover from someone who acquires a large enough stake.  They don't even have to gain 51% ownership because often times the small shareholders don't vote or they delegate their vote.   Businesses have been operating like this successfully for hundreds of years and hostile takeovers of large companies are difficult to pull off.What makes DAC companies even harder to attack is that the entire company can be "copied" and exclude the attacker if the masses of users, business partners, and merchants don't approve of the behavior of the new owners.   The network effect is not tied to the software per-se, but to the fair business operation as intended by the code and stakeholders.  So it is true that BTS is vulnerable to all the attacks that a normal publicly traded business is.  Does it matter if there is a single dictator, 10 directors, or 101 directors?   The business behaves the same and the current shareholders approve of how it is being run.   It is still serving its customers.    If you are going to propose "attacks" on BitShares then you need to show how the attack is "profitable" and "sustainable".  It would cost millions of dollars to gain control of all 100 delegate positions "instantaneously".    If it is not "instantaneously" then you must organize a "long-con" where you get "honest looking" people to behave as promised until they all go rogue at once.   Perhaps bribing all of the existing delegates to serve your purposes.   In any event all attacks not long lasting and can be resolved and the attacker is unlikely to make money.Attackers aiming to simply "disrupt" the network without profit can probably use cheaper alternatives that will also work on all other systems including Nxt and BTC. Looks like a false flag attack to me.  The academic vs engineer was in regards to the B. Generals problem.If there are more than 2 forks then the delegates cooperate to resolve it.  We could automate it for most cases by picking the chain with the highest total shareholder approval where you sum the approval of the delegates producing blocks on each chain.  This would resolve the tie in almost all cases.   In practice, delegates in the smallest group would pick one of two largest groups.  IE: the 33 group would want to pick a horse as soon as possible so they can start getting paid again.   Eventually you would get 50/51 and then the losers would have to join the majority.    There is no reason for a delegate to produce blocks on a minority fork unless he believes the majority fork is "bad" and is hoping the shareholders will vote new delegates to support his fork.   101 is just a point of comparison with BitShares.   As I have discussed on my blog:1) We assume that free market competition drives margins toward 02) We assume that to avoid subsidizing by stakeholders, transaction fees equal cost of block production 3) We assume that the market will drive transaction fees as low as possible via competition among chains4) We assume that for a given number of transactions, the fewer block producers that must share the fees, the lower the fees may be.5) We assume that no sustainable system should depend upon actors operating at a loss. 6) We assume marginal utility decreases for each additional block producer 7) We conclude there exists a number where fees / # producers == marginal utility of an additional producer.  We conclude that the lowest fees will be a system with one block producer 9) We conclude that no system will profitably operate significantly outside the same # producers10) When measured on a log2 scale we submit that all systems will converge on statistically the same amount of decentralization *OR* fail their users. 11) When all systems converge on the same number of nodes, we submit that delegated voting creates a more TRUSTED and FLEXIBLE set. 12) We project that 101 nodes is greater than the # the market will naturally converge upon as being a sufficient between robustness and cost. If you really want to increase the effective decentralization then you must double the fees for each additional level of decentralization when measured on log2 scale.  Given two chains with equal features, it would require a hell of a network effect to sustain 2x fees.     Here is why I don't use blog comments: http://www.stevepavlina.com/blog/2005/10/blog-comments/And no, I haven't been reading all along.  I get updates from Stan periodically and people post on BitSharestalk which I follow. This is absolutely the most amusing thing I have read in a while.    I am the most directly accessible lead developer out there.  If you want to have a real live debate, join our weekly mumble sessions.  It will be quite entertaining and educational for all involved.   It would be like kicking out a delegate for 1 round every time he misses a block.   Crytpolina Bitcoin 2.0 Debate was unanimous among a panel of 6 industry leaders, the #1 thing Bitcoin must do to remain remain relevant so to switch to some kind of Proof of Stake. In other words, those that are building next generation systems are not even considering proof of work.   The average Joe isn't going to be able to understand the system any more than they understand the current banking system or even bitcoin.  At the end of the day most people have to watch it work and then learn to trust it.   While there is some value in trying to explain it to the average Joe in simple terms, much is lost in translation and that is really beyond the point of this particular thread.I think that if someone wishes to "attack" the idea BitUSD but lacks the background to know the terms used, then they also lack the standing to publicly criticize and declare a scam, fraud, or broken system.   I do not like to hide behind fancy language and have taken great effort to explain it in simple terms in many places.   Unfortunately the simple explanations are never "complete, accurate, and authoritative".The primary difference between BitUSD and the FED is that it is market driven and all IOUs are collateralized 200%.   In the case of the Fed they can print up $2 trillion dollars without having any collateral.  BTSX would require collateral worth $4 trillion dollars to exist.   The next difference is transparency.   Another difference is the complete lack of "price fixing". That wasn't what was going on there.  That was us making an investment decision based upon expected growth.  I know enough that you don't make money by fighting the markets.
BitShares is also proof of stake and currently #3 Ethereum is hybrid last I heard, though Vitalik wants to go to DPOS. It is quite entertaining seeing what people are saying about me.  As someone who believes in finding free market solutions to secure our life, liberty, and property and whom is more anarcho-capitalist than anyone I have ever met it is absolutely hilarious that I am being accused of following Helicopter Ben.My core value system is centered around property rights and my economics are Austrian.   The problem this thread has is that everyone is talking past each other and that is understandable given how hard it is to internalize the market mechanics and then explain what you know to others.  The primary assumption is that there exists a crypto-asset with no counter party and a non-zero value.  IE: bitcoin, Nxt, and BTSX. The secondary assumption is that the volatility of this asset is within some reasonable range.  200% initial collateral seems to be reasonable, but it could easily be 400% if the volatility called for it.   Given these assumptions we then assume there are two individuals in the free market that want a "contract for difference".  Contracts for difference are well established and proven and even used in counter party.  One person is given price stability and the other is given leverage.   If you assume the contract for difference was settled by a 3rd party price feed then it is clear how it would work.   So given those initial fundamentals we can slowly build up to BitAssets.   The first step is to take the same contract and remove the 3rd party price feed and instead use Nash Equilibrium.  Both parties will want to exit at some point and thus have to agree on a price in the future.  Assuming they were both equally wanting to exit their position the price they would agree at would be the "fair price".   Now clearly if there are only two parties to the trade they may not want to exit at the same time.    So you allow the "long" side to sell his position to others and you allow the "short" side to cover with anyone.    If someone wants to be a stubborn jerk and not settle then that is fine.... eventually a margin call will be triggered.   The peg will fluctuate as the relative demand for longs vs shorts settling causes the peg to have a settlement premium sufficient to motivate settlement.   I think it is fairly clear that if there is a price feed from a trusted source that was used to enforce settlement then the system would work to the extent that you could trust the feed.   The hypothesis is that this price feed is irrelevant given a market full of speculators and market makers willing to hold until a short voluntarily covers at a fair market price. I hope that through this perspective I have shown what the economic incentives are and how the core principles are sound.  All that remains to be seen is whether "market consensus and speculation" is enough to enforce a peg via a "decentralized price feed" or "prediction market" mechanic.  My understanding of game theory and economic incentives tells me this will work, but even if I am wrong I know that price feeds can be used as a "trusted" judge on the "smart contracts for difference".   It is an entirely different game to trust someone to produce a fair feed (or 101 someones) than to trust someone to maintain a vault full of gold.    Barriers to entry for proof of work?  Can you design and manufacture ASICs using the latest manufacturing techniques?  Can you get economies of scale necessary to do the work profitably?   Proof of work is all about who ever is willing to do the most work for least gain and no one is more effective at that than government.If someone bought up 51% of the BitShares then you thank them for their money and start a new chain without them.  Without the barriers to entry represented by Proof of Work you can easily start a new chain.  With proof of work however, there is nothing you can do to start a new chain.   It doesn't matter what POW algorithm you use, economies of scale will always favor government.  Don't assume that POS means that an elite can issue and reverse transactions or get issued new currency.   Sure that may be the case with Peercoin, but it isn't the case with Nxt or BitShares.        In fact, I would argue that POW means an elite can issue and reverse transactions because they can control the POW with their access to the latest manufacturing and economies of scale.   Regular users get debased with all POW systems.   So sheeple will tolerate POW based upon the bogus cost-theory-of-value economics.   You see it isn't technology that rules, but the people using the technology the define what is "valid" or "legitimate".   So POS and POW are protected against inflation and arbitrary rule by the same social process.  POW just consumes 100's of millions in resources every year that make us all poorer while creating barriers to entry that protect the bitcoin elite.  I think the entire debate misses the point:  consensus is based upon users not code.   Code helps people reach a consensus faster, but in reality users would reject a fork that came out of nowhere based upon stake manipulation.With Delegated Proof of Stake, as used by BitShares X, if the broad user base can mostly agree on 101 delegates then an attacker would have to buy up 51% to gain the right to produce a single block... but they wouldn't be able to change history and of course everyone would know there was a new sharif in town and could choose to hard-fork the attacker out (all balances voting for the attacker as delegate) without anyone suffering any losses.Bottom line, these networks are social in nature and not based upon technology.  Technology just helps.Also DPOS allows anyone to earn block rewards regardless of their stake assuming they can convince the shareholders that they provide a valuable service.With DPOS you cannot even have a delegate producing blocks on two chains at once without it resulting in a provable automatic firing. BitShares X has built in derivatives (to be enabled in a month) so it should put centralized derivative markets out of business.  This in turn means that an attacker that attempts to leverage against BTSX on chain through buying BitUSD cannot profit from bringing down the network because BitUSD is backed by BTSX.   Now you have a system that is even resistant to derivatives.  BTSX is live now with DPOS implemented with 10 second confirmation times and approval voting for 101 delegates.  BitUSD is implemented and ready to go.  It will be put through one last round of testing on our next test net and then integrated with BTS X by September.   To speed & privacy I would like to add ease-of-use.... users will not have to see an address or public key unless they want to do advanced things.   I would welcome discussion on our forums:  bitsharestalk.org    Having only spent a couple minutes reading the OP it seems like there is more discussion on distribution than on what value the system will provide:1) What new POS algorithm?2) Why not DPOS?3) What language? Based upon our experience you can expect at least 6 months to develop a basic system with a large team and funding.  I would not recommend someone attempt that without really solid reasons.What goal are you trying to achieve that BitShares does not? To be fair messaging in BTSX is still TBD.Cross-Chain-Trading has blockchain support, but has not been demonstrated in any test network.Market Pegged assets are going to be tested live this week on the test network.Items missing from table:Pay transaction fees in any user-issued asset for which there is an open ask order.Market Matching Algorithm is a tad more complex than just saying "automatic"... can anyone point me to the algorithm used by Nxt?Nxt has leasing... DPOS has delegation... so lets compare and contrast:   a) leasing is for a fixed period of time   b) does leasing require executing a transaction on the blockchain (to lease) and does this charge a fee?   c) can your lease be revoked prior to the period of time.   d) what happens when your leased forging power are spent to someone new?It seems like Nxt leasing + Transparent Forging is very similar in principle to DPOS prior to upgrade to approval voting.  After talking with the Nxt developers it is fairly clear that Nxt and DPOS are very similar.  They both deterministically select the next block producer, operate on a fixed absolute block production schedule and support DELEGATING your stake to others.  The difference lies in how the delegated stake is managed.  In DPOS everyone is delegating at all times and all clients observe behavior.  In DPOS it is possible to vote AGAINST a bad actor and thus nullify their own votes.   This prevents someone from buying up 10% or more of the network and then abusing their 10% in some way.  Where Nxt has block production proportional to balance, DPOS is 1 block per delegate with a changing slate of delegates that are voted on proportional to stake.   There are limits that prevent concentration in one delegate and the wallets automatically rebalance votes from delegates that get too much.  Lastly the difference is that all shareholders are paid from dividends without having to do anything.  The delegates take a small cut of the transaction fees.  I think that Nxt / DPOS will be the future as Peercoin has too many issues.  Bitcoin uses vote by hashpower and thus everyone is trusting less than 10 super nodes (mining pools).  Try to look at the true nature of what these systems are doing rather than at the marketing spin the BTC community has put on things.With bitcoin you cannot vote a miner or pool out.  The coin holders have no say at all and only a super minority actually mine bitcoin these days.   The system is still governed by math, it just operates as 99 small mining pools where the users can redirect their hash power at will and where all mining pools have equal say and take turns.    I believe the network requires forgers to submit a hash(secret) in advance and reveal their secret when they produce a block.  This creates a chain of secrets that cannot be cheated. They cannot produce dubious transactions... if they double sign then that is incontrovertible proof the delegate should be fired and is easily detected by all nodes on the network.  In less than 50 minutes every delegate should have confirmed your transaction and a 51% attack / double spend becomes impossible.  So large financial institutions have nothing to fear if they wait just 1 hour... not even bitcoin has this level of security... it takes 6 blocks and even then a fork could result in a doubles spend.  All clients automatically recognize when a block has been missed and the 'confirmation window' is automatically lengthened and wallets are warned.   No one would lose money... everyone would immediately see that 49% of the blocks are being dropped despite being produced on time.    The client would view this as a network-split at least and automatically inform everyone to stop trading until the fork is resolved.  Under normal conditions the network would reconnect and all delegates would start producing blocks again and the fork will be considered resolved.   Under an attack the 'fork condition' will remain until the attacker can get enough votes to fire the other 49%.... this could take a while and may be impossible once people realize what was happening.    The minority (good) delegates and majority (good) clients would manually flag the attackers blocks to be ignored.  In a relatively short period of time the attacker's delegates would be voted out of the minority fork and it will quickly regain its title of being the longest chain.   So as you can see there is a simple algorithm in place that allows the good majority of shareholders to quickly recover control from an attack.  No funds can be stolen in this process unless people choose to ignore the automatic chain fork detection warnings.   First of all someone with 51% of the delegates only has one power:  to exclude transactions or to stop producing blocks.  If they gain 51% of the delegates and fail to include transactions that would vote them out then it will be very obvious to everyone on the network, the blockchain will be hard-forked by some developer and the network will continue to function.  You see what binds a network is not the software rules, but the social contract among the community.   It is almost inconceivable that in the event 51% of the delegates stop including transactions that the community would sit back and take it for long.   Competition among chains and no barriers to entry or forking keeps people honest because there is NOTHING to gain by a 51% attack.  Note that these 51 delegates would have to pretend not to see blocks from the other 49 delegates and thus the attack would be so obvious and disruptive that it wouldn't last more than 24 hours before community members took action.   Nice discussion going on here so let me chime in a bit:Before you can call something decentralized or centralized you must first define what these terms mean in a concrete and objective manner.  I will define them as follows:1) You are fully decentralized when you are fully in control of your own assets.  The free market and voluntary trade of physical goods is full decentralization.  2) When fractional ownership of a common good is in play, then you are decentralized when your control/influence is proportional to your own assets.Mining can never be decentralized because the miners are in control over the shareholders assets and control/ownership are completely decoupled.  Sure you can sign a transaction, but it must be 'approved' by the miners.   I like Nxt and their transparent forging approach is the closest thing out there to being truly decentralized.   Unfortunately, because only a subset of the users forge and there is no restriction in how concentrated forging power can be.   I think that this entire debate of mining vs POS is founded upon a lack of understanding on what Bitcoin really is.  It has not solved the Byzantine Generals Problem... it just defined a rule set for consensus that allows anyone with money to control the network and once controlled there are no alternatives.Likewise, CPU only POW merely means the government will certainly control it given the percentage of the population employed by the government and government-friendly corporations and that each of these employees has a computer.   Mere economic analysis is all that you need to understand that POW is the ultimate means to assure centralization because it erects barriers to entry that are insurmountable by everyone wanting fork as a result of the miners taking the chain in the wrong direction.Because of a false belief about the nature of consensus many seem to think that 'Zero-Trust' models are the only ones that are valid.   I contend you are always trusting something or someone.  Random selection of anonymous individuals to produce blocks is both slower and allows 'random' bad behavior on a temporary basis.  It is less reliable.   DPOS is all about creating a system that gives people financial incentive to do the right thing and maintains the ability to 'fire them' quickly if they don't with 100% certainty of getting caught.   The delegates have no power *BUT* to do the right thing.   Can they collude?  Assuming they did collude the only thing they could do is block transactions and it would be instantly detected by all peers.   A fork would be launched immediately with these delegates stripped and the two chains would compete against each other in the market.  Assuming the delegates were just random people that attempted to screw with the system then consensus would be maintained.     Thanks for the update... looks like Nxt has solved the major issues by using a variation on delegated proof of stake.   I have a lot of respect for what Nxt is doing and for getting there faster than everyone else.1 minute vs 15 or 30 second blocks... is slower, but I suspect Nxt could accelerate that too if they felt it would be helpful.  So from where I sit the primary difference between Nxt and DPOS is that with DPOS you can vote against block producers rather than just delegate to block producers.  Is there any place I can go to read in detail about Nxts current implementation?  Nxt is very close but has the following downsides:1) more missed blocks2) no dividends to share holders 3) slower block production4) random individuals can manipulate the transactions with ease... nothing on the line when their turn comes up.  5) more centralized, only those who choose to participate can exercise their shareholder influence       - you must risk your public keys by having your wallet unlocked        - gaining 51% of the active stake is much easier with Nxt because so much is inactive. I said decentralized companies (Bitcoin is a decentralized company).  If you want the cost to be dominated by silicon.... and the gains from special purpose manufacturing to be small enough that no one will try.  I can run with that.Suppose a device exists that people already have (DRAM) and an algorithm is developed that uses 0 electricity (so we take it out of the equation) and also has 0 computation cost (so we can take it out of the equation).  This would be the IDEAL device that you are trying to achieve.The cost of running a miner is now just the consumption of DRAM which is presumably sitting idle on peoples computers.To attack this network one would need to acquire 51% of the DRAM dedicated to the purpose of securing the network.   Total Federal employees in the US is 4.3 million and we will assume they each have a computer with DRAM that is unused 75% of the time.   A rapid software push to all government computers would instantly attack a network of 4.3 million honest individuals using their home PC.Now if you throw in the PCs of all government contractors, state employees (schools/universities), you could probably double that number.   Remember we are just counting unused government resources here.Now if you consider that it is nothing for the government to spend $100 per adult in the USA to buy the DRAM necessary to match their mining...  that the average individual no longer buys computers, they buy tablets or notebooks which are then left off... it wouldn't be hard at all to match the actual DRAM used by consumers for mining...Now if you consider that many people will voluntarily support the government's mining efforts to freeze accounts, especially if they get paid...But you can ignore ALL of that.... the total cost of a 51% attack on this network would simply be for the government to add 10% or perhaps double the mining reward for miners that point their computers at the governments mining pool.   In the case of bitcoin, this could be achieved for $400 million per year right now (perhaps less)... simply because it is more profitable to mine on the government's pool than on the good pools.    Now you have profit vs charity and guess which one will win?Those that point at honest pools don't get paid out at all if the honest pool includes a spend from a frozen account because the government pool will 'fork' the chain and ignore it.  So you either get 51% or go home.  The government would just keep upping the mining reward until their pool won.  Game over.  POW = Control by Money, Period.  The scarcity of BTC and POW systems has nothing to do with the POW algorithm and everything to do with the social contract of the nodes.   Having studied POW systems for a very long time to build a memory-hard easy to verify algorithm... I believe I had a lot of success and with small tweaks could achieve it.This thread, being about POW innovations is really aimed at network security in the most decentralized manner possible.   DRAM may be a much larger industry and it is unlikely an ASIC could be developed that is more effecient, but no ASIC needs to be developed for EOS to apply.   You don't think someone could build a special-purpose motherboard / CPU designed to minimize overhead costs around the DRAM?   You think large warehouses of case-less, power supply-less, liquid cooled, over-clocked, modules would not make mining at home unprofitable?   You think bulk buys cannot make it significantly cheaper for these large factories?   The reality of POW is that security is proportional to economic cost and whether the attacker is spending $500 M on SHA256 ASIC or $500M on dedicated hardware the result is the same, $500 million being transferred from shareholders to miners while the network centralizes in the mining pools and barriers to entry are erected.  If you increase the cost-per-hash with memory-hard POW, you will get fewer hashes but the same level of security and only the most efficient operations will be able to mine profitably.   Once mining profitability for the average home PC is negative the network is depending upon charity to remain decentralized.   Sure anyone can mine, but not everyone can mine profitably.  With POW the network is not sustainable. 
The future of currency is not shares in decentralized companies such as Bitcoin, but instead in assets issued by these companies that have the price stability of the dollar, gold, or silver.   The purpose of POW is to make it difficult to fake transactions at great expense.   With DPOS it becomes impossible to fake transactions in less than 15 minutes compared to bitcoin where it never becomes impossible without manual intervention of checkpoints.   POW destroys value in a very real sense.  The goal is irreversible consensus.  POW cannot give you that and is very costly.   If you follow the work I have been doing you will see that I have gone so far beyond 'questionable real-world advantages' and instead have identified the core of what Bitcoin is.  For starters  if you use the analogy of a company Bitcoin has a meager revenue from transaction fees and large expenses by issuing new shares to pay for security.  Thus, the company is in the red to the tune of $500M per year.   It has 2 classes of stock (voting (hashpower) and capital (coins)) and thus separates the interest of these two parties, and it is slow.I fix these problems by actually making crypto-companies that are profitable (they produce more value than they consume) and thus can pay dividends to the shareholders.  I return power to the shareholders and the result is that the we have transactions that are as fast as Ripple, irreversibly secured by 51% shareholder vote before Bitcoin can produce 2 blocks.   You see the analogy is critical to understand the benefits.   These are tangible, real-world, advantages.    Nothing says Bitcoin cannot upgrade to Delegated Proof of Stake (DPOS) http://bitshares.org/security/delegated-proof-of-stake.php and become profitable however.   It seems to me that this should be a higher priority than side-chains. Economies of scale (EOS) is a barrier to entry... proof of work always benefits from EOSOnce EOS results in centralization (pools + asic) no one else can safely create POW chains without approval of the industry POW giants. POW is like having someone producing sliced meat for sandwiches...EOS + POW means the producer of the cheapest sliced meat owns the production of sandwiches because they can undercut all competitors prices... If you assume that market participants only buy sandwiches with the most slices then no competitor can produce sandwiches with unapproved vegies or meat.  It implies that only one 'coin' can be supported by the market and perpetuates the myth that bitcoin is money instead of realizing the bitcoins are shares in a company called Bitcoin and that these shares are being used as money.   Gold does not stop being a metal just because it was used as money, and bitcoins don't stop being digital bearer shares just because they are being used as money.   There can be many companies in the market and new startups will almost always demand fresh equity distribution based upon actual investment.  Somehow I don't see Bitcoin shareholders investing in revolutionary ideas, instead I see them attempting to assert ownership over all ideas in this space forever with the same kind of threat that Microsoft makes which is to copy innovation and steal the rewards from the innovators. The only thing I can understand the term 'scarcity race' to mean is the 'race to be most highly in demand'.... but the fallacy with the term is the assumption that it is a 'race' and 'winner take all' and this assumption is more revealing about the mindset and intent of the creators to monopolize the industry rather than support free market competition.If I had to describe the BLockchain 2.0 proposal in terms of the DAC metaphor, then it represents the Core Developers & Miners intent to become the Microsoft of DACs promoting an inferior product built on top of an existing "monopoly" and threatening to copy the innovation of competitors and bundle it with Bitcoin.    Perhaps they should focus on cross-chain-trading and interoperability with others in the industry rather than attempting to build vendor lock-in and introduce barriers to entry.  Blockchain 2.0 is based upon an economic fallacy of a 'scarcity race', the security fallacy of hash power, and has a giant security hole that would compromise entire side chains.  It has embraced a concept of centralization in a one-world currency, one block chain, etc.  It has embraced barriers to entry by not enabling support for cross-chain-trading.Based on this description it works just like a system I designed last fall in my effort to create parallel chains with shared supply.  The problem is that when using pow the side chain funds can be completely robbed because the main chain cannot validate anything but the existence of the trx on the side chain.  So to do this the btc miners still have to do full validation on all side chains.  This major security risk has not been mitigated. In other words 51% attack on side chain allows attacker to steal full balance of side chain by transferring 100 % of it back to btc chain under their control.   Btc miners would see the transaction exists on the side chain but have no way of knowing it was invalid because they blindly trust the hash power.  This makes new side chains very vulnerable unless all btc miners merge mine it. If you eliminate the contrived idea of a scarcity race and the false security of hash power there is nothing to this Blockchain 2.0.   Integrating a technology like BTS X into a side chain would require significant R&D... the ideas behind BTS X are easy, implementing them is much harder.  Assuming BitBTC works then we have achieved a peg with BTC already without needing their system.  Cross-chain-trading is all that Bitcoin needs to support, could be implemented today without any modifications.  You do not see Bitcoin developers / mining pool operators working to enable this support which would literally be a few lines of code to add it to the standard transaction type.The bitcoin elite (pool operators and miners) *own* the sha256 space and thus want to expand their monopoly.  Bitcoin has a network effect, but with cross-chain-trading that network effect can quickly and easily benefit all alt-chains... but their behavior demonstrates that they have been corrupted by the ring of power.  Like the elite before them they are inventing economic concepts (scarcity race) just like the fed invents terms (QE, disinflation, paradox of thrift, etc) to justify their moves.  They are working with regulators already which means they will likely support moves to freeze accounts so that they can continue the gravy train.These factors demonstrate to me that regardless of how large the BTC network effect is, they will not be able to out compete everyone because there will always be a market for a more decentralized system than bitcoin offers. I am trying to understand how transparent forging can get a secure random number to select the forger deterministically.If the forger is selected and punished if they don't produce the block, then this means that they cannot be 'mining' and that their selection must be derived from data in the block chain.  If the forger can control the data they put in the block chain when they 'forge', then it seems like they would have control over who got picked next.   This is a good discussion and I do not want to derail the work presented in the OP as it is good work.   Here are some general concepts to consider:1) A prediction market does not need to have a 0 to 1 range, though this is one form for a binary event.  2) All trades are voluntary with the exception of a margin call on the short position when collateral runs low.3) Once the market reaches a consensus that BitUSD should track USD players on both sides are placing a bet on the future consensus relative to the current consensus.   When the future comes, they will continue to place the same bet.  This process requires a bootstrap phase where an order book can be published without executing trades as well as a min market depth before trading can begin.  This establishes the initial consensus. 4) Given the fact that the BitAssets are created only by pairing short/longs both sides must agree to the price.  So if there existed a trusted data feed, then it is possible to operate in thiner markets.   I do not believe BitShares functions well in thin markets.What I would do if I were to build a more general purpose prediction market chain is the following:1) Select a hand full of trusted data feeds2) Create a BitAsset on the trustworthiness of the producer of the feeds... keep number of producers small so market depth is meaningful.3) The BitAsset would be market pegged to below 1 for untrustworthy and above 100 for trustworthy.  4) All prediction market bets based upon the data feeds would be settled only if the BitAsset of the producer of the feed retained a high degree of trust.Now someone can simultaneously make a bet and hedge on the trustworthiness of the feed.  This would eliminate voting from the mix. It is times like this where a decentralized exchange such as BitShares X will come in very handy.    We are releasing our test network in just a few weeks...    of all the altcoins, ProtoShares is down the least   bitsharestalk.org  I just wanted everyone to know that we will be taking a snapshot for the initialization of the BitShares genesis block of Feb 28th and that if you do not control your PTS with your own private keys you will miss out.If you have any questions or want my attention, please visit bitsharestalk.org This bounty was moved to bitsharestalk.org a while back and paid out.  Thanks. Visit bitshares.org and bitsharestalk.org to learn more.  Hitler attempts to use Mining to control all of the worlds crypto currencies through massive CPU, GPU, and ASIC mining farms.http://www.youtube.com/watch?v=OaOVFoZkI_0 Aside from attacking a straw man interpretation of my explanation this critique sounds very familiar to ones which I have debunked many times before.Lets assume for a second that the prediction market was for an event 5 days in the future most people agree the price would track.  Make it 5 months and the price during that 5 month period would track clear up until the day it closes.   Make it 5 years and the price will track until the day it closes.  Make it 50 years?   Forever?    At what point does the LENGTH of maturity of a prediction market affect present day pricing?  The fact remains that you can only enter or exit positions through voluntary trades and all voluntary trades are based upon a prediction on what future trades are likely to be possible.  In effect, you buy or sell based upon your future prediction of what the market for a particular BitAsset will be.   If his theory that BitUSD will go to 0 is in fact correct then he should short BitUSD.   Unfortunately for him he will have to unwind his position in the future which means buying BitUSD which means a non-0 price.  In fact, the holders of BitUSD would demand as much as they can get away with because they are earning 5% for holding the note.  This reality means BitUSD cannot head toward 0.  The asymmetric information argument is entirely bogus in this case.  How does someone who holds BTS or BitUSD have more information about what the exchange rate will be in the future than anyone else?    BitAssets cannot move toward 0 because they are all collateralized by 2x their initial value and the short position is paying 5% to avoid covering.   This means that the long position can hold out until the short position agrees to a reasonable valuation.  At the risk of making an appeal to authority I will point out that BitShares X has been reviewed by Dr. Charles Evans  (http://www.pecuniology.com/who.php) who maintains that my economic model is solid.  I only make this appeal to authority to counter the claims that I have no 'authority' because I am "self-taught".   So lets ignore the appeal to authority or lack of.  Lets assume we were to create a prediction market for an event that is 100% certain.   Would the price ever deviate?  Any attempts of pushing the price away would be seen as a profit opportunity by all participants.  This is the case with prediction markets based upon HISTORICAL outcomes.   You don't need a judge to make the payout, players will voluntarily settle even when the lose because they have 2x collateral that is tied up.   So they will accept their losses (50%) to avoid 100% loss of their collateral. Lastly his straw man argument that I see a difference between "users" and "arbitrageurs" is entirely off base.  All individuals are motivated by profit opportunities and thus perform the arbitrage function when profitable to do so.  So based upon the number of factual errors and misrepresentations I cannot take his economic analysis seriously. IF you are interested in this bounty please sign up at bitsharestalk as I don't check this forum as often.   Follow the link in the OP This bounty has been increased to 1500 PTS   we own the generators   We need new code developed that the generators don't do.  This is a complete SCAM and is copying our fund raising scheme for BitShares.   Do not send money to these addresses. It wasn't solely my decision and integrity and honor is something you could learn from Mr. Li.  I am well aware of the lies you have been spreading since you left and would warn everyone that Charles is a salesman that tells everyone what they want to hear and has no compulsion with stretching the truth to absurd lengths or telling outright lies.   Fortunately for Charles, I will abide by the NDA when it comes to discussing what actually happened.  To the extent that he says anything other than that he resigned for personal reasons Charles is violating the NDA or spreading lies.  The reality distortion field is strong with this one.Beware of this shark, he will be your friend one day and plan your destruction in secret the next.  He treats people as objects to be manipulated and used for his ends. While we were working together I always wondered why so many people disliked him and were against him.  Now I know.Fortunately we survived the loss and have moved on.   What will it take to get ProtoShares to show up reliably?  No one else seems to have any problems keeping charts active.
To be fair, Bitcoin and MemoryCoin are both DACs, MemoryCoin is just as flawed as BTC when it comes to being a PROFITABLE DAC. MemoryCoin was not released by US nor was it based on scrypt...  given you don't have your facts straight I just have one thing to say.. 'wtf'?  Because if the DAC is open source and obviously useful, then PTS and AGS holders will fork it and compete.  Having a larger initial network effect may give PTS and AGS holders the advantage against the upstart.  We are working on a Software License that will help enforce the consensus. https://bitsharestalk.org/index.php?topic=1708.0 http://invictus-innovations.com/social-concensusWe did not launch MemoryCoin so we did not break any promises.  One last post and I will leave you to your coin, but I wanted to let you all know that we are also doing a bounty campaign to build things out with an estimated $2 million worth of bounties to be started over the next 2 months.  Many bounties already in place.   You can visit our forums for information.   We have a 10 PTS ($200) bounty for referring a C++ developer who wins one of our C++ bounties.  https://bitsharestalk.org/index.php?topic=1832.0 FYI: we have an entire sub-forum at bitsharestalk.org dedicated for discussing Mastercoin and related projects.  You all may like to stick with Bitcointalk, but may have more in common with our user community.    If you have any questions I am very responsive over there, but I only check this forum occasionally. There is certainly room for us to work together. This only applies to DACs that use code developed by Invictus or would like to be promoted by us.  Obviously we cannot enforce any particular behavior (See MemoryCoin 2.0 which did 1%).However, if you build off of BitShares and related code, then paying 20% for using the codebase as a starting point for your DAC is very reasonable.   Mastercoin solves a different problem.  Wish you all well and good luck in 2014!  Why is ProtoShares having trouble when all of the others are working just fine???  No takers?   What would it take to get some interest? https://bitsharestalk.org/index.php?topic=1815.msg20497#msg20497Bounty is in pending state until potential developers ask questions and a meeting of the minds is reached on what is required.  I am starting a $2 million (in PTS) bounty campaign over on bitsharestalk.org with the plan on making all bounties at prices 2x or more the expected cost of development.  Bounties will be available for all skill sets so follow it closely.  Many more to come.   No mention of ProtoShares?  The only 'coin' that is not attempting to be a currency?   Please fill me in on the gaps?   Missing from the white paper but what I have figured out since is the following:1) Eliminate all mining at all because any mining leads to control in a proof-of-stake system.2) To select the node that gets to broadcast the block, pick the input with the greatest coin-days-destroyed to sign the block and broadcast3) Pay a percentage of transaction fees proportional to the percent of coin-days-destroyed represented by that input4) Adjust minimum transaction fees per block to control block production rate.The cost to attack bitcoin today with a double-spend-attack:  6 * 25,000 in electricity consumed in 1 hour + cost of capital. The cost to attack bitcoin under proof-of-stake:  6 * 12 Billion / 50,000  $1,440,000 held for 1 year.Resources waisted by Bitcoin: 1.3 billion in electric costs once difficulty catches up with the recent price rise.   How is demurrage different from inflation?   In the case of bitcoin, there is 12% inflation per year that is masked by appreciation.   Demurrage would just make the inflation more obvious, but if Bitcoin were to switch to using 'PERCENT OF MONEY SUPPLY' as the basic unit of account then Bitcoin would technically be implementing demurrage.   All you are achieving with your coin is to make it more obvious.   Actually, I eliminate coin rewards by design to eliminate inflation (aka) demurrage.   Your economics against hoarding are unfounded and we will have to agree to disagree here.    Mining is waisting electricity and always concentrates power in those with economies of scale.   After some consideration I have decided to replace proof-of-work all together and use transaction fees to regulate block production.  A new block is produced once enough transaction fees have been accumulated.  The node that generates the transaction with sufficient fees broadcasts it.   Ultimately all that matters is that the network reaches consensus and orphans are no issue.  Nodes in the network can even stop propagating new blocks for a couple of minutes after the previous block.  If transactions are coming to quickly I simply up the transaction fee like you would adjust the difficulty in BTC.  These fees are then destroyed to pay dividends rather than paid to a miner.  As a result it doesn't matter how much hash power you have because you must *pay* to submit a block and the best-fit block is the one with the most coin-days destroyed so even if you pay to submit a block with no transactions, it will be rejected.3. Does not centralize the network, it is a local calculation performed by all nodes relative to their peers. Yes, coin value * days. I have compared it to Peercoin and the methods described on the bitcoin wiki as well as Nxt.      I am looking for people who know about this to point out any other prior art or problems that are not obvious to me. In main.cpp the following line within ConnectBlock has side effects which would be skipped if -DNDEBUG were to be defined.  Code:assert(view.SetBestBlock(pindex->GetBlockHash())); Seems to me the code should be Code:bool success = view.SetBestBlock(pindex->GetBlockHash());assert(success);  I have designed a new Proof-of-Stake system that requires no mining at all and therefore entirely prevents centralization of mining leaving only 51% ownership of the money supply as a means of attack.http://bitsharestalk.org/index.php?topic=1138.msg11955#msg11955
Where can I find documentation on the Proof of Stake system used? Transactions as Proof-of-Stake & The End of Mining http://the-iland.net/static/downloads/TransactionsAsProofOfStake.pdfPlease read my paper for further details, but I believe that I have a Proof-of-Stake system that requires no explicit mining and for which mining is never 'profitable'.   If the security model holds review then this could dramatically change the future of all DACs and crypto-currencies, eliminate mining pools, lucky mining, vesting, ASICs, the 51% attack, selfish-mining, merged-mining, denial of service, etc.   Please review and give me your feedback. The only way you can prove a pool isn't cheating is by estimating the hash rate of the pool and comparing it to the number of blocks found.  Unfortunately, you could probably still skim a couple of a percent this way. I don't care about same share for everyone, I care about decentralizing control of transaction selection and increasing hash power relative to price paid (inflation/etc). Small players can BUY PTS today just like they could buy Mastercoin.   Furthermore, there are 1000's of small players who have received PTS and anyone mining within the first 48 hours generated at least one block.    How many people currently own Mastercoin? To be fair, it was only about 50 minutes prior to the scheduled genesis time.  But I believe Super3 generated the 2nd block and he downloaded it the same as everyone else so no pre-mine at all  This works well for people running 'full nodes' but it seems most 'miners' are using specialized light-weight clients.   I am sure such a derivatives market would form.  And it does not defeat the intent.   A coin today is more valuable than a coin in 6 months, so the cost of mining in the pool with immediate payout would still be higher than mining solo.   The coins mined would still be delivered to those taking a LONG TERM approach AND the pool operator would have to be trusted or individual selling the future contract would only provide payment upon a block being found with their private key and thus shift the trust from the pool to the long-term investor.  There is clearly money to be made by facilitating pools, but those mining on the pools would face a much higher cost of doing business and if you push the time horizon out to a two or more years initially then the risks would be much higher and finding people willing to finance over that period of time would be much harder.   I believe my network will converge much faster because it will never diverge in the first place because network latency is practically removed from the equation.   In the instances where there is an orphan block today it occurs because two people broadcast at about the same time.  Miners accept the first block found therefore half of the miners use one block and another half use the other.   This process is not resolved until one side of the network finds the next block.   Under my system, two miners broadcast at the same time and everyone will immediately converge on the best chain without ambiguity.  The only potential for 'orphans' resulting in divergence is if two back-to-back blocks are found in a space less than the propagation delay AND the first block had a higher hash.    To clarify, miners do not switch chains to a fork that is split based upon an easier hash unless it has more than 2 block advantage.  I am aware of the selfish miner attack and that is solved by allowing new blocks to replace the current head block provided it is 'more difficult'.  Someone attempting to be a 'selfish miner' who starts working on a 2nd block without taking credit for the first block has a significant chance that when the rest of the network finds the first block, his second block will have been built on an invalid chain.    He would then have to find 3 blocks before the primary network found 2 blocks because miners do not switch 'chains' until their chain is more than 2 blocks behind the other chain. Anyone who has been following crypto-currencies for long has realized that any popular (and thus hard to mine) crypto-currency ends up resorting to mining pools.  These pools become new points of centralization.    In the case of ProtoShares, a CPU coin, profiteers flooded the market with hash power and forced out the little guy who wants to mine on his home computer.  These profiteers didn't care about the coin, they just saw the price difference between the coin and the cost of mining and took advantage of the profit opportunity.   Then we have pools that came out and captured more than 80% of the hash power due to a slight optimization advantage.  These pools had a single bug in their miner that prevented more than one transaction from being included in a block and thus caused delays for the entire network like a legitimate 51% attack.In Bitcoin land, large ASIC firms and mining pools are a potential threat.   Even having a couple large pools is a problem and represents a kind of 'special node' in the network that if taken out or compromised could enforce white lists, black lists, or transaction delays.   A new solution is required that make the use of large pools, whether ASIC, GPU, or CPU less profitable than solo-mining for individual users.    I have a new proposal that aims to eliminate botnets and profiteers from being a threat to GPU or CPU based coins and could be useful toward encouraging solo-mining with bitcoin by increasing the costs associated with large centralized ASIC miners.  The basic idea is this:  blocks have a random vesting time between 1 day and 1 year with an average of 6 months.   Any pool operator would have to maintain 6 months of inventory and operating expenses on their books while exposed to price fluctuations in the underlying currency.   Mining pools would have to charge much higher fees to cover the cost of capital and a 51% attack on Bitcoin would not be able to finance itself from the immediate sale of the BTC mined.   Meanwhile, solo-miners with ASICs are back to a lottery system.   New crypto-currencies wouldn't have to worry about fly-by-night pools or profiteers that mine and dump.   The average rate of currency introduction would be the same, just delayed 6 months on average and this would also prevent a lot of short-run PUMP and DUMP scams.   http://bitsharestalk.org/index.php?topic=905.0 New Approach for Decentralized Mining: http://bitsharestalk.org/index.php?topic=905.0 Did you read the top post? It seems like you should include ProtoShares which have a 8.7 Million dollar Market Cap.  http://www.btc38.com/trade.html?btc38_trade_coin_name=pts 30% faster compared to? This bounty has been award to gigawatt for his excellent work.   Great progress all!   Because BTC is rising so quickly   FYI, I have been so busy over at bitsharestalk.org that I haven't followed up on this thread in a while.  Great work guys!   For the record, due to the unexpected time sink that ProtoShares has caused I will not be evaluating submissions until after Thanksgiving (USA).    I really like what you are doing.  Be sure to post over at bitsharestalk.org if you want more timely responses. Current price is $7 per PTSCurrent supply is 752,000  http://btsblock.com/chain/ProtoSharesCurrent market cap: $5.2 million.  My new solo miner is probably faster, open source, no fee.    Sorry FreeTrade.
Some people introduced new miners that are 5x faster... so I expect a 8x+ difficulty increase within the next 20 hours. Actually, they are incredibly cheap considering their value proposition relative to feather coin. Regarding fairness of the mining I can tell you all this:1) There are at least 3 or 4 'supper clusters' mining this thing, none of which belong to Invictus 2) Our mining hardware was delayed in shipping, we just received the first batch of machines so we were left to mine with about a dozen machines we had around.3) To supplement our mining we had 100 instances in digital ocean, but because of the high-frequency of finding blocks the machines were too slow to "get up momentum" before being reset by the next block.4) The client was not built by Invictus, but for Invictus by FreeTrade.   FreeTrade forgot to change the difficulty adjustment period like we requested and it resulted in the need for a hard fork.5) Our seed nodes had 1000's of connections in the very first hour.  Connectivity issues in the network were a result of the linux client crashing after the fork, this took out the seed nodes as well until we got it fixed.Overall I would consider it a lottery where the people who benefited the most were those who could spin up 1000 node clusters.In my own mining pool I had over 3000 connections.   Now my pool has less than 50% of the hash power thanks to ypool and their faster proof of work.Anyway, this is not a situation where Invictus was running away with the money supply and *everyone* had equal opportunity to mine.   I know that one user of my pool has walked away with ~30,000 PTS with 1800 nodes connected at the high.So, PTS is available to anyone who is willing to invest in the time and effort to mine it or buy it.     Am I upset that we didn't rake in a large part of the supply?  No.  Because the goal was to decentralize it and that is exactly what happened.    Considering the rapid increase in money supply plus the rise in BTC it has already been rising steadily!  AnonyMint,   I am glad to see that you put together a very sound argument and I can confirm that hyper threading does double performance.  GPUs are basically massively hyper-threaded.   So we have a situation where a GPU is the most effective way to hit the memory bandwidth limitation and to get the highest memory bandwidth.  I am OK with that because most integrated graphics these days can support Open CL as well which means that a CPU with integrated graphics can apply the same type of optimization and thus hit the memory bandwidth.    So now you are telling me that a GPU has 2x the memory bandwidth.  A factor of 2x on the GPU is insignificant.Call me crazy, but I think you just confirmed that memory bandwidth is the bottleneck (the goal) and that a GPU can most effectively reach that... fine.   The proof of work is still very memory intensive and adding additional computational power once you hit your memory bandwidth does not help.    It will be fun to see where this all goes.digitalindustry,  you are right that this DAC will cause the community to develop these algorithms and either break or prove the proof of work.  This is a large part of why I released ProtoShares because it is a proto-type for the proof-of-work and we have all learned a great deal by this experience.  Future DACs will be stronger for it. All further discussion in this thread should be moved here: http://bitsharestalk.org/index.php?topic=22.0I do not have time to follow two threads or repeat myself... :-) gigawatt:  join us over at bitsharestalk, I will pay you a 0.5 BTC tip for your contribution.  I wonder what would happen if we used NESTED momentum proof of work?  Change the nonce-space of the outer proof of work to a pair of 16 bit numbers that result in a X-bit collision?Now you have a more memory intensive inner hash that is still quick to validate, but would significantly complicate GPU miners.  I suppose the performance of your algorithm would also suffer if instead of SHA512(X),  SCRYPT(X) was used because the cost of doing this step twice would be much higher and less GPU friendly.  gigawatt,     Thank you for providing the first innovative algorithm for reducing the memory requirements.  Let me attempt to post mitigating factors to your algorithm.     From a CPU miner perspective, your reduction in memory comes at the expense of performance so does break the algorithmic complexity of the algorithm.     From a GPU perspective you have to populate a bloom filter with 2^26 results... based upon my understanding of how bloom filters operate this would require updating a common data-structure from every thread and the resulting memory race conditions could create false negatives.   If you have to do this step sequentially, then you might as well use a CPU with memory.        So do you have any solid algorithms that can populate a bloom filter with 2^26 results in parallel?    ProtoShares is also over 50 cents...  ALmost every GPU released in the past several years is able to handle OpenCL and you can develop for it for free.  I called you a troll because you claim to read my mind.$5000 is the minimum you could make... if you are really able to do as you say, then implement it... mine a bunch of ProtoShares... dump them on the market and then collect $5000 too.  I have a history of paying bounties when I am proven wrong having previously paid out over $1300 in May.    You on the other hand want paid for doing something you haven't.  You are arrogant and unable to be reasoned with.  I call you a troll because of past history of you posting off topic RANTS about world events in my threads.    Claiming and doing are two different things... Anonymint is a troll please ignore him.    Looks like a bunch of 3-sided Swastika...    Growth curve calls for 5% per week... but so many people are mining that 1 weeks worth of blocks were mined in the first day.... and of course murphy struck and we failed to update the difficulty adjustment from Bitcoins default of 2 weeks... so another 20 hours of  30 second blocks..... going to the massive feeding frenzy of miners each of which is working for 8+ hours to find a single block.  We set the initial difficulty to require about 8 hours of solid CPU time to find a block.   Initial mining indicates that we are finding blocks on average every 30 seconds until the difficulty adjusts in a couple of hours which suggests that there are over 1000 computers mining on day one.... and I can tell you they are not mine     Initial prices are around 0.01 BTC per PTS so that means mining will increase dramatically because it is very profitable at the moment. Because this coin is not being launched by FreeTrade, he is work-for-hire of Invictus Innovations bounty to create this coin.   There are trolls out there, and I will not name names, but as far as I know it is just insurance to moderate your own topics.   Well, everyone knows who I am, any one else want to reveal their real identity? Looks like ProtoShares have established an initial price point of $2.50 recognized by multiple traders.http://bitsharestalk.org/index.php?topic=43.0 More trades occurring at this price: http://bitsharestalk.org/index.php?topic=43.0 Where is BitShares on your list?   
I am buying as well at a reasonable price  The only reason miners would jump off is if the value of the coin were less than the cost of electricity to mine it.   I have confidence based upon the current bids/asks that difficulty will continue to climb for a while.  Memory bandwidth is ultimately the bottleneck.  There is so much demand that we will hit block 2016 (1 week) after only 1 day.   So your window to mine cheaply ends in about 6 hours. Right now people are buying with electricity which will push the difficulty up until a market price is found.    People are paying Digital Ocean prices which are about 3-4x the cost of buying hardware.  So I would venture a guess that the price will continue to rise.  Not that I am biased or anything  Block production rate is running way outside of spec right now due to faster than anticipated growth.   There will be many orphans until the difficulty adjustment. Also Digital Ocean is a waste of time right now because it takes 1 minute just to search the nonce space and find a result. The pricing works like a prediction market and the 'price' used for margin calls is when the highest unaccepted bid.  This means that the whole market agrees the price is above the bid and below the ask.  Attempts to manipulate this price by posting higher bids will be immediately accepted.   As a result I do not depend upon price feeds, but voluntary transactions every step of the way with the exception of margin calls that is. I think that is a debug message that is printed when it attempts to fetch the block history.  How many nodes on Digital Ocean are you running?  This coin has a useful life of about 1 year... after which other coins will be derived from it.   I suspect BitShares will be out in 6 months and that will have a linear decay over 12 years.    Besides, this is a good trial run for the proof of work and I can also see how botnets handle it. For whom... it is 3AM for me   Well, the money supply increases rapidly, so I would suspect that present shares factor in the creation of future shares.  So suppose they sell for $1 per ProtoShare today... that would imply about a 750K market cap... we shall see what people are willing to pay for them  FreeTrade will not kill of this coin because he is only the guy contracted to build it and its life is in my hands and the foundation of my VC funded company depends upon this coin... it is not meant to be a altcoin, but a way of mining BitSHares pre-release. It will run on 64 bit on OS X and Linux if you compile it yourself (that is what I am doing)I am attempting to get an OS X app out the door soon, but am fighting a few deployment issues.FreeTrade has done his best to optimize the proof-of-work, but the code is open source and I am sure others will find ways to enhance it. I love it!   I am thinking the background image would be nice to have separate from the Logo + KEYHOTEE as a watermark for various UI elements.   You don't have access to a computer lab or two do you?   LOL Yes, mining algorithm is memory bus limited which prevents ASIC and GPU (in theory).   The Long and Short process are the SAME the person who borrows BitGold into existence is LONG BitGold until he sells the BitGold at which point he becomes SHORT.  Example:  If I borrow $100 from you and keep it then I have $100 in my bank and a $100 debt to you on my books.  I am long and short and thus neutral.  If I then spend that $100 I am now short because I no longer have $100 in my bank, but I still owe you $100.  The person who holds the $100 with no debt is LONG USD.  The Long position is always paired with a short position.   To Short BitGold you borrow it like the prior example, and then sell the BitGold you receive to the individual who goes long.   Now to cover your short position you must repurchase it from the Long.
Owning ProtoShares is a way to acquire future BitShares and speculate on their value today!More Information Here:http://bitsharestalk.org/index.php?board=1.0What is the value of ProtoShares?  http://bitsharestalk.org/index.php?topic=30.0 Transaction fee is only as high as required to buy space in the blockchain.  No higher than Bitcoin.  Suppose a BitShare has value worth $100 1oz of Gold is $1000 You can borrow 1 BitGold from the blockchain provided you post 20 BitShares (worth $2000) as collateral on your loan.  This will create new BitGold and you will be unable to spend your 20 BitShares or receive dividends on them until you pay off your loan.  If the value of 1 BitGold rises relative to BitShares then your collateral will be used to repurchase 1 BitGold and pay off your loan and give you back what ever BitShares are left over... likely 5 BitShares.   When the loan is repaid the 1 BitGold is destroyed.So, the only way for X value worth of BitGold to exist is if 2x value worth of BitShares already exist.    The only way to increase the supply of BitGold is for the value of BitShares to rise enough to provide the proper backing. This is exactly how 99% of real USD is created.  First there must exist 1.2x value worth of House.  Then X USD is lent into existence.  When the loan is paid off, X USD is destroyed.     They are market pegged each BitAsset class floats against BitShares based upon supply and demand factors alone.  Of course BitUSD can only be borrowed into existence and is destroyed when the loan is repaid to the blockchain.  Transaction fees will pay the miners and dividends.  No the value of BitUSD will decrease without any change in the supply.  Value is not based upon supply alone.  Prediction Market dynamics long and short have to agree on the price and have opposing incentives which force an accurate price.   After all the short has to repurchase in the future from someone to free his collateral and the long has to agree to the new price or he will sell to someone else.If you buy 1 BitUSD then you will accrue additional BitShares as dividends like earning interest at a bank.  You can sell your dividends for more BitUSD and end up with 1.1 BitUSD or you can sell your 1 BitUSD for BTS and end up with 1.1 dollars worth of BitShares.Why do people go short rather than long?   People disagree about which way the price of BitUSD vs BitShares will move in the future.  If there is high demand for BitUSD then it will cause the value of BitShares to rise in order to meet the demand for BitUSD.  Anyone who expects there to be high demand for BitUSD due to price stability and ROI will want to short BitUSD relative to BitShares.   Demand for BitUSD causes the price to rise above parity with USD until someone decides to create more by shorting it.  At nearly all times there is 1.5 to 2.5x the value in BitShares relative to BitUSD.   Me personally, I would short BitUSD and go long BitShares to maximize my return.  You keep thinking that.   But this is not how BitShares works.  BitShares create USD the same way banks do, by lending it into existence against a collateralized loan.   BitUSD is just an IOU for one dollar worth of BitShares.  The block chain is able to honor that request.BitBTC is an IOU one BTC in BitShares.   The IOU is collateralized with 2 BTC worth of BitShares and is automatically enforced when the collateral falls to 1.5 BTC worth of BitSharesIf you set up a straw man, then of course it would never work, but what you describe is NOT how this works.  I am not maintaing a peg by controlling supply of the currency.  Thanks for the reference.... but Jan is right, I prefer to pay people in BTC because this movement is all about getting out of the USD paradigm.  I have updated the terms of the bounty... http://bitsharestalk.org/index.php?topic=22.0 Further discussion on the Momentum Proof-of-Work should be moved here: http://bitsharestalk.org/index.php?topic=21.msg24#msg24 I really like where this is going!   I am moving discussion of this bounty to http://bitsharestalk.org/index.php?topic=3.0   The only remaining bounty from this thread is for the mining pool.  Discussion should be moved to: http://bitsharestalk.org/index.php?topic=16  and I am closing down this thread. I have declared Jan the winner, will you please provide me with the ICON + Splash Screen graphics for ProtoShares along with all source files.From what I can tell ProtoShares should be ready to go live within the week!  Good work FreeTrade, Jan, td services, and other contributors!   B Wins.... Congratulations Jan.   Not a big fan of this version.  I also like the theme of lord of the rings and the eye of Sauron as the 'bad guy' and Keyhotee is on a mission to destroy the ring of power (ability to spy and control money).   Do you think we could get something along these lines with a little bit more energy... charging after the dragons? Ok, well the winner was an i7   The body was more clear, but you are right the subject was suggestive of a more restrictive spec.   No one likes to be called a 'cheater' for 'breaking the rules' so I am glad you were not too serious about that accusation.  It was not my intent to break any rules.  What rule do you feel was broken?
Anyone following BitShares and DACs will want to follow my most recent article on letstalkbitcoin: http://letstalkbitcoin.com/dac-revisited Anyone following BitShares and DACs will want to follow my most recent article on letstalkbitcoin: http://letstalkbitcoin.com/dac-revisited I am contributing 2 votes from family, one for B and one for C.    I am about to call it for B...  I really like where these are going!  Bounty Paid: 94174efbde2566bed8886928e50cbc44c5cd357bf8bd6384fec1800d912f96ae For my application, mining,  there is no data.  I can replace failed parts.  It will be trial and error. I have been burned by crap parts in the past.    Assuming the two machines have about equal performance and power consumption and only a benchmark for our particular application could really be definitive.  http://pcpartpicker.com/p/1Wf21Your machine costs $375 + $50 Labor + $20 Drive => $445My machine costs: $389So unless your machine is 15% faster which the benchmarks do not bear out... then the benefits of your system are..Memory Bandwidth... though I am not sure we are pegging it anyway.Perhaps more reliable parts... The tie breaker comes down to convenience.  That said, I will credit you with 0.5 BTC toward the keyhotee ID of your choice as runner up.  It really is very tough to call here.  3.4 GHz vs 3.1 Ghz...  I did not realize the 3.9 was Turbo, but 3.4 is base frequency.    IPC? Your discounts and mail in rebates do not count because of extra labor, time/value of money and I suspect there is a limit on the number of rebates per customer thus not 'in volume'.I am trying to find your exact machine for comparison, the best I have found is: http://pcpartpicker.com/p/1W43u for $328.92 with promo discounts of $50.   Promo Discounts do not count, so $378.92.When I replace the drive with a USB stick I end up with about $350 then I add labor I get to $400.   Then I factor in 3.1 vs 3.9 Ghz and that is not a viable option.  Even with the promo codes this machine does not compete.Unless I missed your link to the $312.94 machine.  Not going with AMD the power consumption is too high.The Dual Channel memory is an issue, ideally there would be 2 DIMS rather than 1.  So the machine I would go with is:Core i7 3.9 Ghz 2GB$369.78 + $20 USB Stick with Linux on it for HD total  $389From protatech.comBy getting rid of the HD I end up with SSD and I have no need to assemble parts.   So when critiquing the best machine please refer to this machine.   Note: technically I was the one to spec it, but azwccc pointed me to the source. Does anyone have a solid justification for why azwccc should not win?  If not I plan on awarding him the bounty. This is an awesome website... looking over the various machines this is what I found:Core i7 3.9 Ghz 2GB$369.78 + $20 USB Stick with Linux on it for HD total  $389Based upon their performance numbers, the Core i7 is 25% faster and yet only costs 8% More.  I suspect any system running full tilt will need to spend another $50 in cooling, but that is a constant offset that also favors the i7 over the i5.Overall, PortaTech seems to be the best source for these systems.  AMD FX8320 @ 8 x 4.0GHz$242.93 + $20 USB Stick with Linux Adjusted for 10% less performance... $270Adjusted for extra power used over 1 year... $370 (100 Watt difference, 24x7, $.1 KWH) I am inclined to say that azwccc is in the lead so far. You left off the memory in your latest build.  Note: 25.6 GB/s Max Memory Bandwidth   Thus my calculations show we are using about 25% of the MAX theoretical memory bandwidth.   Close to 50% of the practical memory bandwidth.  An ASIC would be limited to perhaps 4x gains if all they did was replace the CPU and perhaps 10x gains if they used very special purpose state of the art memory.   Of course, I doubt they could do these things in a machine costing less than $4000 so there is little cost/benefit to creating an ASIC for this   Turbo doesn't mean much for 100% mining load unless I liquid cool the unit  This would be great and I will probably order one if I can get it all in one place because that will also save time and money.   Mail-in Rebates are labor and delay.   You also didn't factor in labor.  So That puts your price at $412.     The improved reliability is a plus in your camp, though the CPU is 3.1 Ghz vs 3.4+ so you currently have the edge for the best system. I was able to build the following:AMD FX-6300 BULLDOZER SIX CORE 3.5GHz Biostar A960D+ 2GB DDR3 500GB HDD for $367 shipped.http://www.ebay.com/itm/291007635830    Based upon benchmarks the i7 system is 1.34x faster overall so I would have to handicap my AMD system by a similar factor which would put the price at $491 vs $470 for your i7 based system.  I suspect that I could spec an AMD system that was slightly cheaper once I remove the DVD drive and use the same 32 GB SSD drive and case that you mentioned.     The there is the long-term electric cost to factor in which would give the i7 a clear edge.    My conclusion is that you are very much in the lead in the price/performance metric.  I will give it another day before I declare a winner and pay the bounty. The mining proof is well defined.  The best algorithm for performing the proof is yet to be developed.Proof: Code:         #define MAX_MOMENTUM_NONCE  (1<<26) #define SEARCH_SPACE_BITS 50 #define BIRTHDAYS_PER_HASH 8        bool momentum_verify( uint256 midHash, uint32_t a, uint32_t b )        {  if( a == b ) return false;                if( a == 0 ) return false;                if( b == 0 ) return false;  if( a > MAX_MOMENTUM_NONCE ) return false;  if( b > MAX_MOMENTUM_NONCE ) return false;  return (getBirthdayHash(midHash,a)==getBirthdayHash(midHash,b)); } uint64_t getBirthdayHash(uint256 midHash, uint32_t a)        {           char  hash_tmp[sizeof(midHash)+4];           memcpy(hash_tmp+4, (char*)&midHash, sizeof(midHash) );           uint32_t* index = (uint32_t*)hash_tmp;           *index = a-a%BIRTHDAYS_PER_HASH;           uint64_t  result_hash[8];    SHA512((unsigned char*)hash_tmp, sizeof(hash_tmp), (unsigned char*)&result_hash);           return result_hash[a%BIRTHDAYS_PER_HASH]>>(64-SEARCH_SPACE_BITS); }Factors in Performance:How many SHA512 hashes per second can a CPU achieve. For each SHA512 hash performed, a hashmap must be populated with eight 64 bit keys and 32 bit values.The minimum memory bandwidth requirement is therefore:  12*8*Sha512PerSec  bytes per second.The memory is accessed randomly and is transferred in blocks of 64 bytes based upon the cache line size of the CPU.The effective memory bandwidth requirement is therefore: 64*8*Sha512PerSec  bytes per second.A 3.4 Ghz Core i7 can generate 2 million Sha512/sec per core.   I will be generous and assume 12 million Sha512/sec when all cores + hyper-threading are saturated. 12 million * 512 bytes per second is 6 Gigabytes per second on the memory bus assuming no other overhead.Transfer rate on RAM is 6.4 GB/s per channel theoretical.   So when you factor in all of the other random overhead, the fact memory access isn't perfectly pipelined or sequential then it becomes very clear that memory bandwidth and CPU power must be paired.   The fastest possible machine may be a 12 core Mac Pro with DDR4... but this wouldn't be the lowest price/hash.     You are forgetting power supply which adds $40 to each of your quotes.Opps... I just noticed the case included a 400 watt power supply... Good work!
The current Score is:A) 1B) 6C) 5Keep the votes coming. I have started a new logo graphics design bounty for Keyhotee with benefits for all who submit not just the winner: https://bitcointalk.org/index.php?topic=322668.0Keep up the good work everyone! I am looking for a graphics designer who can help us brand Keyhotee which is our ID, Wallet and Communication client.   It is named after Don Quixote because of our idealistic goals of decentralizing everything and slaying the dragon of tyranny.   We are thinking a theme of Honor, Nobel, Virtue, Knights, Security, Windmills, Dragons, Medieval, Horses, etc.This bounty will accept submissions of draft ideas over the next 2 weeks after which I will select the top contenders for a poll and then award the bounty to the winner who will have 1 week to tweak the designs and send me the source images.In addition to paying the bounty to the winner, I will award every individual who provides a meaningful submission with 0.25 BTC toward a Genesis Block Keyhotee ID of their choosing:  http://invictus-innovations.com/genesis-block-founderThe bounty will be paid in BTC using the BitStamp price for conversion. The splash screen should be high resolution, detailed, and pretty at resolutions up to 640x640.   The icon should be simple and elegant but fit in the theme.   For inspiration on the current Icon I am using a Shield because it denotes protection and security.   An address that can be sold can be stolen or squatted.  These are 'identities' and if you would like to transfer an identity you will have to share the private key.   If you do not desire to use a name any longer you can give it up by not renewing.  Though Founder IDs are 'forever'.  It is November 1st, I have selected my top 3 icons and put them up for a vote here: https://bitcointalk.org/index.php?topic=322664.0  Please keep discussion about the icons in this thread and leave the other thread for simple votes.  Icon A by  td services:Icon B by  jantenner81:Icon C by  eXclusiveORThese are my top 3 themes, though none of them is quite finished.   Recognizing that finishing the icon takes the most time I am going to start voting on these three icons and they pay the bounty once the icon has been fully tweaked for all resolutions and with accordance with the tweaks already discussed such as adjusting the gear teeth.   If you are unable to make the necessary tweaks in a timely fashion I reserve the right to take the second place icon. The rules for voting are simple:  You may only post one time and simply specify A, B, or C.    You may also post if you believe someone is cheating with sock puppet accounts.   You may only vote if your account is over 1 month old.   1 GB is enough ram to do the proof of work and adding additional RAM will not accelerate the process by more than .05% with almost no gains beyond 2 GB... make sure there is room for OS and wallet app.The proof of work is structured so that by the time you use 768 MB of ram (entire nonce search space) there is a 99% chance of finding 1-2 potential hashes.Once you exhaust the nonce search space you clear the RAM and start over.Increasing CPU speed helps until the bottleneck is the memory bus and is worthless beyond that point.If you have less than 768 MB of ram your performance falls exponentially such that 512MB of RAM cuts your performance down to 10% (SWAG) of what it would be with the full amount of RAM. Ohhhh... Ahhhhh....  I like where this is going! Some suggestions for improvement:1) More margin around the P2) Larger teeth on the gears that will stand out even at 32x32I like having the high res detailed version for the launch splash screen!  Well, it is all about throughput per dollar.   I know that a 3.4 Ghz Core i7 with 8 threads going has a hard time hitting the theoretical memory bus limits because speed increases linearly as I add cores to the problem.  My estimates show that an i7 can saturate about 50% of the memory bus running 1600 Mhz DDR3 RAM (using SHA512 to fill RAM).   So the processor matters a lot.  There are a lot of memory delays so hyper threading helps a lot.  That said, memory is accessed in a random manner and so the bus is unable to operate at max efficiency.  All of that said, a CPU that was 100x faster would clearly hit the memory bus limit and thus hinder use of custom ASIC to replace CPU alone.  These are user names and are non-transferrable and these are not domain names.   It would be like trying to sell your email address. I was able to build the following:AMD FX-6300 BULLDOZER SIX CORE 3.5GHz Biostar A960D+ 2GB DDR3 500GB HDD for $367 shipped.http://www.ebay.com/itm/291007635830    Unfortunately it comes with an unnecessary DVD drive which I suspect could save another $10 if someone can source it elsewhere.And the best response I have gotten thus far is:Or Build it Ourself Intel system:Power Supply:              $30Case:           $29Mother Board:              $653.2 Ghz Quad Core i5:   $1902 GB DDR3 RAM:          $20250 GB 7200 Disk         $50Assembly:                   $50-------------------------------------------Total: $434 So the question is, for momentum what is the difference in performance for a Quad Core i5 at 3.2 vs a Six Core AMD at 3.5 Ghz?  Benchmarks show memory throughput is about even.    As anyone who has been following Keyhotee and BitShares knows we are building a decentralized block chain based ID system.  With Keyhotee ID you mine your own identity and the more you invest into mining your own name the more others will trust that it is not a sock puppet and the more you have to lose if it builds a bad reputation.   Keyhotee ID assigns names on a first mined first served basis after the genesis block and the registration date and renewal count follow that unique name everywhere.   These numbers can be used for all kinds of things as the Keyhotee ecosystem grows including:  automatic filtering and ranking of posts on forums,  spam filtering,  threshold for account creation, and as a weighting component in a growing web of trust.   http://invictus-innovations.com/your-good-nameHow long has your Brand been in business and what's it worth to you?Every Keyhotee ID has a Born-On Date.  The date it was mined into existence in the Keyhotee ID block chain. The closer to the original Genesis Block, the greater the reputation value.  The more you have to lose if you ever have to start over.  The more likely you joined before the Bad Guys learned what an impeccable, incorruptible reputation would be worth in Keyhotee Free Space.Every Keyhotee ID also has a Recognition of Contribution.  This is what your reputation is worth to you based on what you've invested into it.  Proof that your ID is not a sock-puppet of convenience. Think of it as your personal proof-of-work.  What support have you given back to make the Keyhotee ID ecosystem successful?  So far, there are only two ways to build your ID's lifetime Recognition of Contribution.And one will be lost forever before Keyhotee goes live on New Year's Eve.1) Be a Keyhotee Founder. Contribute something toward building Keyhotee Free Space for everyone else.2) Be a Keyhotee Governor.  Contribute mining resources toward securing  Free Space for everyone else. So here is how it works:  If you contribute money toward the development of Keyhotee you will receive many benefits that are not available to others.  Among these benefits are:1) First Pick of Names prior to Genesis Block2) Your names never expire3) You earn Investment points equal to 1 normal name renewal for every .0005 BTC you contribute.  Normally it would take 1 year of constant mining to acquire about 8768 investment points, but founders start out with at least 500 investment points when the contribute 0.25 BTC or more. 4) When ever your name appears in Keyhotee as a source or destination email address or contact it will be given special honored status.5) Any future ways we can think of to honor the Keyhotee Founders, if you can think of cool benefits let us know and we will add them to the list.Keyhotee has the potential to change the way we do secure communication and will allow us to send Bitcoin to a name.   What name do you want?Referral BonusThere is one additional way to acquire contribution points.  Refer others to the idea.  When you refer someone you get one additional contribution point for every contribution point paid for by the individual you referred.   Help us build the Keyhotee Development team so we can hire a full time developer to continually improve our decentralized email, chat, VOIP, and web of trust system. I love them, definitely in the top 3 right now.  I like the angled sheets with texture more than the straight on sheets  and it would be nice to see both sides of an angled sheet 'roll up like a scroll'.   I really like where they are going. I honestly do not care for P1 through P4 and the PS and Circ images are not high on my list of favorites at this point in time.I do like all the effort everyone has put in and am looking forward to updates to some of the early submissions.  Hyper threading counts as 50% of a core.  I will attempt to normalize CPU performance when comparing prices.   Quantity: 4  Refurbished...  sorry that is second hand as far as I am concerned.  You can provide specs via PM if you don't want to reveal your best sources.  This ends on November 5th. ProtoShares Miner: https://bitcointalk.org/index.php?topic=315973.0 https://bitcointalk.org/index.php?topic=313479.0
This is for the Momentum proof of work which is bottlenecked at memory bandwidth.   I am offering a 0.5 BTC bounty to the individual who can spec out the cheapest possible Quad Core x86 system for mining momentum proof of work. 1) Must have 2+ GB of RAM 2) Must have 4+ cores 3) Must run Linux and have at least 32 GB of storage.4) Must have a case.5) Must have ethernet. Everything else is optional, smaller is better.If the system is put together from parts, add $50 to the price for labor.  The spec must include links where such a system can be sourced in quantity.   IE: ebay and other second-hand sources do not count.  https://bitcointalk.org/index.php?topic=321187.msg3439533#msg3439533I am looking for developers who can help me quickly implement a dividend system on top of the latest bitcoin code base.  There is a $5000+ budget for such an effort so if you have skills and are interested please check it out. I have just announced a new request for proposals to add Dividends on top of Bitcoin:  https://bitcointalk.org/index.php?topic=321187.msg3439533#msg3439533  There is a $5000 budget to help integrate BitShares ideas into the Bitcoin codebase.  Please tell anyone with skills or interest in BitShares to check it out. As many of you know BitShares is based upon the concept of paying dividends from 50% of the transaction fees.  I would like to take the concept of BitShares Dividends and see what it would take to implement them on top of Bitcoin's code base.   This post is intended to request proposals for adding this feature on top of ProtoShares.FreeTrade has made great progress integrating the Momentum proof-of-work into ProtoShares and now I am ready for the next step.  So I will define how BitShares pays dividends below:1) The total money supply is tracked as MONEY_SUPPLY2) 50% of mining rewards + transaction fees from each block are paid as DIVIDENDS3) A dividend accumulation table is maintained that includes the total dividends per Satoshi paid for every block for the past year.  Each block adds DIVIDENDS/MONEY_SUPPLY to every entry in the accumulation table.   This table will require 128 bit 64.64 fixed-point precision so that dust can accumulate properly.4) The dividends due a particular output can be calculated by looking up the coin-age in this dividend accumulation table and these dividends are part of the input value of the transaction when the output is spent.  All dividends except the past 100 blocks are included.   Dividends for the past 100 blocks are paid as part of the transaction fee because these dividends could be lost if there is a chain reorganization.In addition to updating the block chain, the bitcoin wallet would have to be updated to reflect the current balance along with all dividends.  I have already implemented a proof-of-concept block chain based upon this dividend system, but am looking for a developer who can integrate such a system on top of the Bitcoin code base.  If you would like to take this on please share your skills, estimated time to develop, and cost.   I will pick the best value proposal as a combination of skills and price and schedule.   If you think it will require more than $5000 that is ok, but I will have to consider it more carefully.  If you have any questions please let me know and I will try to answer here.  My own estimates are that this could take less than 1 man month to develop and thus I am budgeting $5000 for this effort.   This will be paid out as BTC using the BitStamp Price upon delivery of completed code.  Great work on all of the icons guys.    On November 1, I will start a poll to vote for the best icon. The memory access pattern is 'random' so CPU cache does not help improve the locality of memory access.  note I added to my last reply..  I certainly don't want you wishing you didn't reply. Yep... there are many checks I left out of the verify method   1) I need to check that nonce < MAX2) check that a != b Your feedback is useful from an open source development point of view and of course I cannot ever prove that these checks were on my TODO list.  And I am glad you brought it up because we should never assume others didn't miss something.  Look at what recently happened to Namecoin!   Anyway my plan is to offer smaller bounties for implementation bugs once I have completed my implementation.   I will send you a tip for pointing it out because after thinking about it your feedback did provide non-zero value.   Thanks for looking at things. Webr3, thank you for the feedback.  It would certainly add clarity that such a thing must be checked.   Other things that we are checking that are not referenced in the white paper is that A and B are both below some MAX NONCE value.   I will update the white paper with additional clarity and enhancements regarding the ideal parameters for various goals.   This looks like a good technical approach except for the user experience which is terrible.    Here the user unlocks their 'wallet' once locally outside of a web browser and does not send a password over the wire.   Given that a public / private key pair have already been established... the user simply logs in as "jack" and then signs a one-time challenge (with appropriate hashing) which can then be verified. So the only question that remains is how do you secure your LOCAL login which is like how do you secure your BITCOIN wallet.   Do you secure it with this QR system?   It seems foolish to put your master private keys on a cell phone that could be lost or stolen and certainly has backdoors.   I think a cell phone makes a good 2-factor authentication device, but not a good primary authentication device.  Yes, Users have human readable user names. Under development. Well, it will turn into shares of equity in a decentralized exchange... it is like a stem cell for a future crypto-equity. It would be great to work together but we both have obligations to our respective investors.  Perhapse we can join forces once a winner is found.   For the record, ProtoShares will be cross-platform, but I am paying the bounty for the windows platform while doing the Mac/Linux port myself. I fixed it, address was missing the -8....  http://www.youtube.com/watch?v=3pZaTdEtK-8 Everyone does start on equal footing...Nothing stops people from forking Bitcoin, the network effect is all about who is already using it.   When BitShares launches the people mining ProtoShares will be the ones 'already using it' and of course they will not accept a fork from 0.   When BitShares does launch it will likely be within the next 6 months and thus the total number of proto-shares mined will be under 5% of the eventual BitShare supply.   Even if it were a straight-up pre-mine most people would not consider 5% to be an unfair or unreasonable enough to justify a fork. All of that said, the risk of the market accepting a fork rather than honoring the social contract is baked into the price of the ProtoShares.   As a result we will find out whether people agree with me or you very quickly  Of the 3 the blue one is the one I like the most.    Once all submissions are in I will put up a poll of my top 3 favorites and let everyone vote on the winner    Keep up the great work everyone! More information about Project Quixote... youtube video and discussion here: https://bitcointalk.org/index.php?topic=317462.0
If you missed the C3 conference and our presentation about Keyhotee, you may want to checkout this video where I explain how Keyhotee will change the way we do business on the internet and put an end to NSA spying and identity theft.  http://www.youtube.com/watch?v=3pZaTdEtK-8Topics Covered:Keyhotee ID       -  Email and Website LoginDomainShares    - Domain Names and Certificate AuthoritiesKeyhotee Mail     - secure email, chat, VOIP, etcKeyhotee Wallet  - Secure, multi-currency wallet without need for using Bitcoin addresses.  Feedback appreciated.  I like the elegance and simplicity, but most icons do not have fine print under them.  It needs to look good scaled down to 16x16 or up to 512x512 Well to put things in perspective, an i7 will probably only generate one hash per second.   I estimate that there will be about 100 people mining at launch so lets assume  1/30,000 hashes will result in finding a block once every 5 minutes.   We will probably set the initial difficulty based upon mining performance of the default client to target 500 minutes on an individual computer.  I like where this is going.... you are right about needing better contrast.  Google Image Search: Xcode Icon for some inspiration.  Great... perhaps instead of the sharp square edges, you could put the blueprint on a sheet of paper with curled up edges?  Something that gives it a nicer 'edge'? FreeTrade has contracted to build the BitcoinQt ProtoShares network so the 18 BTC bounty is off the table.   Terms of the agreement are posted here for reference. Try just a P... I am about to strike a deal with FreeTrade to build the BitcoinQt fork.   If anyone else is interested, speak now or forever hold your peace.   Did you mean to roll your eyes?   I like the way the second one looks as well, though it seems to lack the square aspect ratio of most icons.   I am looking for multiple submissions and will ask the community to give feedback on what makes the most sense for the icon.   I am using all of my creative energy elsewhere so my real aim is to see something I love when I look at it.   If I like to look at it, then so will many others and that is good enough for me.Some ideas:Imagine a Bitcoin under construction like the Death Star or a Sky Scrapper... Imagine a blue print or schematic feel.  Imagine a mold or cast.Imagine a draft stock certificate... Imagine a IPO stock graph Imagine an Under Construction theme... Something that captures some aspect of the idea and purpose of the coin more than just the letters P S or Shares. Logo contest ends once I have a logo I like and pay out.    20 million bts. Up to 10% max allocated by proto shares.  Bts will have 12 year mine.    The network effect is powerful and the only thing keeping Bitcoin on top.   Sure someone could fork it and 'start from scratch'.... but everyone who has been following the project from early on including 100% of developers, partners, and speculators would have been mining.   I will take my chances with the market.I don't assume people will honor them as 'equal'.... in fact, they will not be equal because ProtoShares will be the foundation of many future AltShares where as BitShares will just be the currency exchange.  If ProtoShares have any value at all it will be because people understand the network effect.  When BitShares do come out they would have to bet that the social contract was too weak and everyone would adopt a new chain starting from 0 rather than honor the contract....  very dubious.  Memory Bandwidth is designed to be the bottleneck ultimately.   I estimate you will want about 2 GB of RAM per core and a fast memory bus and a CPU able to saturate it.  Whether or not there can be any tangible performance gains by performing SHA512 on the GPU and copying all of the results back across the PCI-E bus to perform check for birthday collisions is something that I am sure enterprising developers will find out for us.   I have started a bounty to create ProtoShares which will allow the mining and speculation on the potential value of BitShares while they are still under development.See this thread:https://bitcointalk.org/index.php?topic=315973.0 No.  Finding the collision depends upon the block header and everything is based on sha512 for finding collisions.  If you have one proto share then you will be given 1 bitshares in genesis block automatically Proto shares will live on as the basis of comodityShares and then techShares and every bitshares based chain released in the future.  See this thread:https://bitcointalk.org/index.php?topic=315973.0 THe 5 BTC bounty from this thread has been supplanted by: https://bitcointalk.org/index.php?topic=315973
Introducing ProtoShares - Coming November 2013 ProtoShares is our way to enable BitShares to be mined while they are still under development.   If you are not familiar with BitShares watch this video: http://www.youtube.com/watch?v=5BV55IrZi7g and read our white paper (in my sig)Here is how it works:1) We launch a Bitcoin-based altcoin that allows you to mine and trade ProtoShares2) When BitShares is released the genesis block will contain all of the unspent output balances from ProtoShares chain.3) You will be able to import your ProtoShares wallet into BitShares and start trading right from the genesis block.ProtoShares is a social contract that can be enforced by anyone who can modify the open source BitShares code on release.  You do not have to trust us to ensure we will honor these positions because the user base will migrate to the BitShares network that honors the social contract.  Note that it doesn't even matter who implements BitShares because any open source implementation can be made to honor the social contract set forth in ProtoShares.What this means is that we are creating a financial incentive to ensure that BitShares does get implemented and everyone who acquires ProtoShares can profit by contributing to the open source effort to build and deploy BitShares as quickly as possible.  Something to consider about BitShares: BitShares is not just one chain, but a whole family of chains trading in different sets of BitAssets.  The ProtoShares social contract will be good for any and all AltShares networks and therefore represents an opportunity to get a cut in not just one block chain, but all of them.30 BTC ProtoShares Development BountyTo kick-off the development of ProtoShares I am starting a bounty to get ProtoShares built as quickly as possible without distracting our internal development team from building the Real BitShares.I am looking for an AltCoin developer who can implement the new Momentum proof-of-work and help us Launch the ProtoShares chain.  Here are the requirements on the chain:1) Momentum Proof-of-Work based upon    https://github.com/InvictusInnovations/BitShares/blob/master/src/momentum.cpp2) 2 million coin maximum (in 4 years)3) 5 minute block intervals4) 512 KB max block size.5) halve the block reward every 3 months 6) Derived from very recent version of Bitcoin Qt7) Mining Supported via GUI menu Out of the 30 BTC bounty, I am reserving 2 BTC for the creator of the ProtoShares logo which I like the best.    - The Logo Must be well suited to serve as the Icon  - ProtoShares are 'place holders' or like gold/silver 'blanks' that eventually take their final form.  - They are like ProtoTypes...   - Post other analogies / ideas below... Out of the 30 BTC bounty, I am reserving 10 BTC for the creation of a ProtoShares mining pool deployed to one of my servers.  The remaining 18 BTC I am reserving for the creation of ProtoShares Qt Client  UPDATE 10/23/2013:  FreeTrade has contracted to deliver this product. 18 BTC Bounty is off the table.Deadline for Code Completion: November 5th, 2013The bounty will be paid 1 month after the chain has launched with no fatal bugs.  Note: The terms of this Bounty are open for discussion until someone contacts me and commits to get this done and we have had a meeting of the minds.  This bounty replaces the 5 BTC bounty for the Momentum Proof of Work alt-coin. Code:   #define MAX_NONCE  (1<<26)   std::vector< std::pair<uint32_t,uint32_t> > momentum_search( pow_seed_type head )   {      std::unordered_map<uint64_t,uint32_t>  found;      found.reserve( MAX_NONCE );      std::vector< std::pair<uint32_t,uint32_t> > results;      for( uint32_t i = 0; i < MAX_NONCE;  )      {          fc::sha512::encoder enc;          enc.write( (char*)&i, sizeof(i) );          enc.write( (char*)&head, sizeof(head) );          auto result = enc.result();                  for( uint32_t x = 0; x < 8; ++x )          {              uint64_t birthday = result._hash[x] >> 14;              uint32_t nonce = i+x;              auto itr = found.find( birthday );              if( itr != found.end() )              {                  results.push_back( std::make_pair( itr->second, nonce ) );              }              else              {                  found[birthday] = nonce;              }          }          i += 8;      }      return results;   }   bool momentum_verify( pow_seed_type head, uint32_t a, uint32_t b )   {          uint32_t ia = (a / 8) * 8;           fc::sha512::encoder enca;          enca.write( (char*)&ia, sizeof(ia) );          enca.write( (char*)&head, sizeof(head) );          auto ar = enca.result();          uint32_t ib = (b / 8) * 8;           fc::sha512::encoder encb;          encb.write( (char*)&ib, sizeof(ib) );          encb.write( (char*)&head, sizeof(head) );          auto br = encb.result();          return (ar._hash[a%8]>>14) == (br._hash[b%8]>>14);   }I have put together this code which is not optimized in the least, but I estimate once fully optimized will require 2^26 * 12 = 768 MB of RAM minimum and will run in one or two seconds on a Core i7.    The nonce space is limited to 2^26 items and the collision difficulty is 50 bits which on average finds 2-3 pairs per run.    This would require memory bandwidth of 512 MB/sec sustained.    Assuming you built an ASIC for SHA512 it would be at most 100x faster given the highest memory bus speeds available.    To integrate this with a new blockchain you simply add 2 nonces to the block header, call momentum_verify and then use the existing sha256 difficulty from bitcoin to adjust the difficulty.   Sorry, I just noticed your post. BitShares are NOT shares in a company backed by real people.  BitShares grows the money supply through a combination of paying miners and stock-splits which appear like dividends.BitShares pay real dividends via half of transaction fees.BitAPPL is NOT issued by Apple Computer but is a speculative derivative based upon the relative value of BitShares and APPL stock.  Dividends paid on BitAPPL are not sourced from Apple Computer but from the BitShares held as collateral at the creation of the BitAPPL.   The dividend payments show up as BitShares and not USD or any other currency.   This is where you lose all credibility.  I have been entirely open and transparent about my goals and from before the very first (and broken) concept for BitShares was conceived in May.   I have paid people to find flaws with my system.    But apparently you are able to read minds and draw unfounded conclusions regarding my intentions.   Your knowledge of economics is about as well founded as your ability to read the minds and intentions of those you have never met.   Anyway... your hypothetical panic is not well founded.1) You claim a lack of confidence in BitBTC as the 'trigger event' which implies that for some reason 'market consensus' changes regarding what BitBTC should be priced at.    Your handwaving didn't give any potential causes.   So could you clarify whether it is a crisis in the valuation of BitShares or BTC that triggers the distrust.  Because from what I can see BitBTC is a derivative that will remain sounds as long as the other to remain relatively sound.    Of course, a huge 'unexplained' loss of faith in the soundness of BitShares due to a break in encryption could be one event that would devalue BitShares suddenly.   2) The 'sell off' of BitBTC would give opportunity for those who were short BitBTC to cover and thus take BitBTC off of the market without putting any BitShares on the market.  After all those Short BitBTC were already LONG BitShares and their act of covering would not change the demand for BitShares.  So given you don't even understand the full economic picture, you wrongly conclude it will not work, and then you use that erroneous conclusion to call me a scammer.   The lets not call BitBTC a 'peg' but an insurance policy with a maximum payout.   BitBTC insures the value BitShares against a fall in price against BTC by paying you enough BitShares to make up for lost purchasing power.   However, there is a worst-case payout of 2x as many BitShares during a rapid change in value that is too quick for the insurance provider to recapitallize.  It is also likely short-term vs permanent.  The price of BitBTC will reflect the value of such an insurance policy and will float on the market.   Sure the policy cannot fully protect against black swans, but it is better than no insurance policy.    It is impossible to over-leverage the system because to issue BitBTC 2x the value in BitShares are held in escrow.  Thus demand for BitBTC will drive up the price of BitShares.   However, anyone concerned about BitShares being overpriced will switch to holding BitBTC or BitGold and thus bid them up relative to BitShares.    All risks are known to all parties and the rules of the network are defined.  Your argument is like claiming Bitcoin is a ponzi backed by nothing and the sophisticated investors will get out early before the whole thing collapses.   Show me how BitBTC will be over issued relative to BitShares... the leverage is 'fixed' in the system so how can there be 'overleveraging'?     I suppose you are considering a BitShare bubble where the value of BitShares rises quickly to $275 and then falls rapidly to $90 like bitcoin did.    Well, in this case those who hold BitBTC doubled the number of BitShares they started with while those who were short BitBTC lost everything.    Ultimately demand for BitBTC factors in the backing (BitShares).  BitBTC is a hedge against 99% of risks.    The owner of BitBTC knows that they are not protected from a 50% rapid fall (hours) in the value of BitShares and they assume all extra risk.   In exchange for assuming the extra risk they receive twice the dividends as BitShares.Now the Short is only going to issue new BitBTC if they expect the value of BitShares to rise by more than 2x the dividend rate discounted for risk.  As a result, no one in their right mind would short BitBTC after a 100% run up in the value of BitShares within a short period of time.   Hence, market forces already factor in all of the risks you mention and more than you can possibly think of.   If you don't like BitShares then sit this one out.  There is no scam, the market will price things and the rules of the system are clear.  Every trade is voluntary.  Everyone trades based upon their own understanding of market dynamics and if you are so smart to see how this will crash then put your money where your mouth is and play the markets. The question becomes what is the fastest possible cryptographically secure hash that can be performed by a CPU?   It doesn't have to be the most secure of cryptographic hash functions...  I am thinking that there could probably be some combination of cryptographic hash function extended by a non cryptographically secure hashing algorithm such as city.    For example:  You could generate a large number of birthdays per nonce like so:P = sha512( H + nonce ) CITY256( P + 1 ) + CITY256(P+2) + ... If you generated 16KB of nonces per sha512()... you would get a massive speed up and I suspect suffer little if any from the potential of attacks on CITY.  THe BitSHares network is designed to change hashing algorithms to maintain mining fairness on commodity hardware.   Any delay that reduces the frequency of switching hashing algorithms is beneficial.  BitAssets are like interest rate swaps, one person takes the volatility risk and another gets the stability.  The value of BitUSD includes the value of the revenue stream from its rate of return.  So it is non-sensical to claim that the market wouldn't be able to factor in the revenue stream when doing pricing.Your understanding of the market dynamics is so far off base.  You ignore some very large counter-forces that prove that all value will not end up in the BitAssets.   Namely, as more people wish to acquire BitAssets the value of BitShares has to grow to always be at least 2x the value of all bitassets based upon the requirement for 2-1 reserves at the creation of the BitAsset.  This means that if people expect more and more demand for BitAssets then there is HUGE opportunity to buy and hold BitShares which will rise in value against all other BitAssets.   Many of these actors will not want to go short BitUSD so they will just stay long BitShares.   Your conceptual understanding of the market forces at play is lacking so much information and perspective that your conclusions are worthless.    Alice doesn't need to hold collateral, because if BitUSD goes down in value Sam can buy it cheaper.   BitUSD could go to 0 (if the dollar hyper-inflated) and Sam would receive a 2x return on his investment.The dividends paid to Sam's BitShares held as collateral are redistributed to all BitUSD holders equally.   The dividend rate on BitUSD is therefore always 1.5 to 2.5x the dividend rate on BitShares.Sam occurs opportunity cost by maintaining his short position.Alice can sell her BitUSD to anyone, not just Sam.   If she is willing to sell it cheap, then Sam can profit by covering.  Something to consider, if Sam never covers then the max return he can get is 2x.  However, if he covers, takes some profit, and then re-shorts he can get a fully compounded return with no limits.  You want hash-speed to be linear once the target memory has been consumed.   As the number of items in memory grows the performance of the algorithm approaches the linear speed of the birthday hash alone; however, it does not eliminate the need for the memory to be present.   Putting the momentum property-aside, having a linear hash function that requires multiple GB of RAM to perform at peak performance means that the cost of going parallel with the hash function is an order of magnitude higher.But lets see if we can keep things non-linear.    Suppose your BirthdayHash has 32 bits, but your nonce search space only has 16 bits.    You will run out of nonces long before you are able to generate enough birthdays to get very high on the q(n) curve.    I would guess you could tune the parameters in the following way:Limit the nonce search space such that the expected number of birthday matches is 1.   If this were the actual birthday problem, we would set the nonce nonce search space to ~50 and number of days to 365.  99% of the time you would find 1 match, though sometimes you might find 2 or 0.  Once all nonces of been searched, you have to start over again.   Using these parameters you would require 50x as much memory to find the target as to verify the target.   If you were to grow both the nonce search space and the bits of the BirthdayHash you would maintain the same principle while requiring any amount of RAM.The performance of the hash function would now be a matter of how quickly one could fill the RAM.  This is of course linear with respect to processing power.   The goal is to require as much RAM as possible per unit of processing power.   All we are really achieving with this hash function is to increase the number and type of transistors necessary.Some goals:1) get the fastest possible BirthdayHash algorithm because this will generate data via a CPU at a rate that nears the memory throughput.   Any ASIC that could perform the HASH faster would be stuck waiting on the memory bus.   Once the memory bus becomes the bottleneck in performance we have won. I have posted a new video explaining how BitShares works.  http://www.youtube.com/watch?v=5BV55IrZi7g We have solved this problem by limiting the nonce search space so that the maximum amount of useful memory for gaining non-linear performance increases is around 4 GB.     Assuming you have exhausted all possible nonces you would have to clear the memory and start over.   Now it is a race to see how fast you can fill 4 GB of memory.   While an ASIC could certainly do it quickly, memory bus speeds would still be the limiting factor.    Thanks for the reference, I will gladly give credit where it is due. I have posted a new video regarding how BitShares works:  http://www.youtube.com/watch?v=5BV55IrZi7g    You can give us your email address at http://invictus-innovations.com/contact/  and we will add you to our mailing list and send you our first news letter.  I think we are in basic agreement... I didn't say unlimited search, I said 32 bit limited search... though I suppose you could tie the bit limit to the memory limit so would recommend 29 bits minimum.   This would allow you to fill 4 GB of memory worth of unique nonces.   Within a year or two every cell phone will have 4 GB of memory and 64 bit quad-core processors with graphics units able to fill it. Have you heard of Bitcoin Magazine?  See this thread: https://bitcointalk.org/index.php?topic=313479.msg3363346#msg3363346  for details on the Momentum Proof of Work that I am working on. By targeting the memory and CPU abilities of the common computer as the means of reaching maximum performance you have eliminated ASIC and super computers.   Due to moores law, the memory requirements should be targeted 1-2 years in the future and then have some means to adjust over time.
This is relatively good, except that I want the momentum property to prevent gaming of the BitShares market.  By limiting the nonce search space you eliminate super computers from dominating (good) while still making the cost of an ASIC dominated by RAM (good).   I think specifying time to exhaust all nonces is pointless because it depends upon implementation and hardware.  I would suggest using 32 bit nonces and letting the time be what it will.I would make sure that the BirthdayHash(X) method used AES instructions which are hardware optimized on x86 and ARM and thus leave as little room as possible for ASIC enhancement.  December with Keyhotee with ID/Mail yes.   BitShares beta will be out Q1 if all goes well.   I have had to spend more time managing the company, legal, marketing, etc since Charles left.   Fortunately, we have people in the wings and things are picking up steam.You will be able to start mining BitShares (but not trading BitUSD) within a month.     Supply of BitUSD increases anytime the market value of BitUSD rises above the USD/BitShare ratio enough to motivate new shorts to enter the market.   Supply of BitUSD decreases any time the market value of BitUSD falls below the USD/BitShare ratio as shorts cover for a profit.As a result there is a self-regulating supply of BitUSD and the ratio used during its creation meanManipulating the supply of a currency is a VERY sloppy way to control the price because adjustments in supply take time to percolate through the market and reflect in prices.  In this case, the market can function with just a few players because of the tension between shorts and longs results in heavy liquidity and constant demand for BitUSD. I am actually going to back off on this a bit, it would still be much better than bitcoin because checking the RAM is a point of centralization that would significantly complicate the degree to which the algorithm could be made parallel.   This is a very insightful comment.  I would like to address that these curves show the efficiency of the algorithm as memory increases.  As the number of stored birthdays approach the number of days per year the efficiency approaches that of the Birthday Hash alone which if it were SHA256 would be little different than Bitcoin.  What this also implies is that if you use 32 bit birthday hash with SHA256() it would be nearly identical to Bitcoin except that it would require a constant 4 GB of memory to be filled before reaching full speed and you would have extra overhead associated with accessing that memory.   Because 4 GB of memory is cheap, this would not be enough to stop ASICs or effect any real change aside from some slight momentum required to get up to speed after changing the block.If you use a 36 bit birthday hash then it would require 256GB constant memory to get up to speed.  If you use a 256 bit birthday hash then you may never find a solution.Conclusion:  ASIC or not, the momentum POW does make it more difficult to game markets based on block chains.   The number of bits in the birthday hash may want to be one factor in adjusting difficulty.  Yes, that is true.  All it means is that the ideal mining rig is now outfitted with MAX ram and the highest end GPU that is able to fill it.  It would significantly increase the memory requirements for ASIC designs, that is certainly true.    Ok, I think you might be on to something here.  The limit on performance will now be based upon how much RAM you can put on a given machine.    I would like to point out that once you run out of RAM you still gain performance by adding more processing power, it just grows linearly instead of non-linerally.   I suppose if your goal was to accelerate birthday generation then this would be a very GPU friendly POW. The Birthday Hash will never find a 256 bit collision, so you would truncate it to 64 bit of which perhaps 34-38 bits will be used.   Saturating the PCI bus is not best approach here. Assumption: BitShares has non-0 value.   Therefore there exists a ratio between USD and BitShares, lets assume the initial condition is $1 per BitShareMr. S Owns  1000 BitShares and believes they will go up in value relative to USDMr. L Owns  1000 BitShares and believes they will go down in value relative to USDThey enter a transaction on the block chain that takes 2000 BitShares as input and creates 2 outputs.Mr. S receives a BitUSD short Position that allows him to Recover 2000 BitShares provided he buys 1000 BitUSD.  Mr. L receives a BitUSD long Position that he owns until he chooses to sell.Time passes and the price of BitShares vs USD goes to $2 per BitShare.  This means that Mr. S was right to short USD.  Mr. S now believes the price is too high so decides to exit his short position.  To do so he must buy 1000 BitUSD on the market which now costs 500 BitShares.    He places a bid in the market, when it is accepted 1000 BitUSD is destroyed, Mr. S walks away with 1500 BitShares and the seller of BitUSD walks away with 500 BitShares.   In an alternate reality, time passes and the price of BitShares vs USD goes to $0.66 per BitShare and Mr. S's collateral will only cover 1500 BitUSD so a miner performs a margin call by using the 2000 BitShares held as collateral to accept the lowest ask $0.65 per BitShare and as a result Mr. S is given (say) 462 BitShares while the seller of the 1000 BitUSD is given 1538 BitShares.  What we can conclude here is that even though no USD changed hands, Mr. L retains the purchasing power of $1000 USD regardless of which way the market moved.  Mr. S assumed the risk of BitShares going down in value, while Mr. L assumed the risk of BitShares going up in value.   By exchange risk exposure the result is the creation of an asset (BitUSD) that is market-pegged to USD.So how do we know BitUSD will be market pegged to USD?   Because it can only be created when a long and short agree on the ratio and they have opposite incentives.  The Long wants as low a price as possible while the Short wants as high a price as possible.    How do they know that what they are trading is really a bet on USD other than the Name?   Because the market depth will establish market consensus as the bid/ask spread starts wide and gets narrower until there is enough depth that someone is willing to make the first trade.   How do we know that the price will track?  This comes down to making a prediction about how future market participants will judge BitUSD vs BitShares and the only rational way to make this prediction is to assume future actors will bid according to the future USD vs BitShares.  The price tracks for the same reason that centralized prediction markets can price the probability of an event.   This is why I hobble the GPU with AES and unpredictable run time.  It destroys the massive parallelism by forcing most of the threads to idle. See the threads on the Momentum Proof of Work for my CPU mining algorithm.The blockchain works like Bitcoin, a bad actor with many CPUs can only attempt a double-spend of their own funds or attempt a denial of service.  Neither of these options is profitable compared to using the same hardware for mining.   There are no 'accounts or users' in the system and nothing depends upon reputation or trust. Not anyone can issue BitUSD... the only time BitUSD can be issued is when a long and a short agree on a price.   Each posts an equal number of BitShares resulting in a short position with 200% collateral and a long position.    If the price moves against the short, the collateral will be used to repurchase the long position on the open market (all BitUSD is fungible) and the short position loses money.  If the price moves against the long position then when they sell their position they end up with less BitShares than when they started.   It would be like selling BTC for USD and then watching the price of BTC jump $30 in one week when you repurchase BTC you end up with less than you started.  The long position maintains purchasing power equal to 1 USD, but no USD ever needs to enter the system or be held by a trusted 3rd party. Unpredictable run length foils GPU threads by having many of the data-parallel threads idle waiting on the longer-running threads.Fortunately I defined the white paper in generic terms so we can use what ever hash method you like.   I will point out though that there are means of avoiding synchronization on the hash table through pipelining.  The GPU can produce blocks of 100K nonce/hash pairs which a CPU will then push into the hash table at 100K / sec and the result would be significant GPU advantage.   If you have a bunch of bids and asks being broadcast on a blockchain and the miners get to pick the transactions that go into a block, then you do not want them to tweak their blocks frequently, but rather you want them to commit to the next block as soon as the previous block is found.   Hence having some momentum to the proof of work is helpful in preventing manipulation. Lets see here... you can never force invalid blocks on to a network, the worst case is a double spend attack and that requires an anonymous purchase.   Worst case is a DOS attack.Please define how a botnet will tear it apart aside from winning all of the mining rewards. Efficiency and decentralization... are generally at odds with each other until we can come up with an alternative to proof of work.  Ripple and their consensus approach seems like a promising alternative.   Your preferences are irrelevant when Colored Coins are nothing but illegal bearer bonds subject to default and regulation and Master Coin has yet (to my knowledge) to propose a solution to fix his 'price pegging' system since he paid me 3 BTC for pointing out the fundamental economic flaws.Lastly, for scalability purposes you NEED parallel and independent block chains.   The bitcoin transaction volume would increase by several orders of magnitude if an exchange were integrated into the current block chain with either colored coins or master coin.   Bitcoin is not prepared to handle that transaction volume.  It is really very simple.  BitShares is a continuous block-chain-based prediction market where what is being predicted is the value of USD relative to BitShares.  BitUSD is the long side, BitShares is the short side.  BitShares are transferred from the winner to the loser based upon which way the market moves.  All positions are voluntary and we are not a party to any position.   No USD needs to change hands.  In fact, you could create BitMars and estimate the value of owning Mars relative to BitShares.    I have throughly debunked the ponzi allocations, but Cunicula has his own solutions that violate economic laws to sell.   I would be more than happy to talk with anyone on Skype about how BitShares works, where money moves, and how it is entirely balanced.   We are working with people from wall street, and credible economists such as http://www.pecuniology.com/who.php Dr. Charles W. Evans who are far more qualified than Cunicula to analyze the system.  By Cunicula's own standards, Bitcoin is a Ponzi scheme. 
Charles is not the creator, I am.  He helped bring in funding and bootstrap the business.    We are working with various parties to explain the concepts better. That is not useless because it means the network has to change hashing algorithms less frequently.  Changing of the algorithm is where I maintain decentralization ultimately, but having some delay is helpful.I also want an algorithm that prevents manipulation of blockchain based markets by making it 'costly' to restart mining after accepting a set of transactions. Hosted ASIC mining contracts is centralized because they could be seized or destroyed by a single national government.   I think the real goal is that the ideal miner should be general purpose and thus advance technology for all.  GPU mining is not 'centralized' because the GPU has many uses that justify producing consumer grade parts.   Ask yourself this... how many people must the government control to steal 51% of the hashing power?    Economies of scale apply to everything and thus tend to result in centralization.   If you have a proof of work that limits the ability to gain improvements by 'scale' that significantly exceed the benefits of individual nodes then you have a win.   My belief is that the two factors are capital cost and electricity costs.   For home PCs the capital costs are 0.  For many people the electric costs are paid by someone else and thus 0. However, with Bitcoin miners the capital costs are always non-0 and the electric costs highly favor centralized ASICs. As a result I contend that I have a better decentralization model. Prior to BitShares I was designing this...  exactly what you are looking for.https://github.com/bytemaster/tornet LOL, what was the author who wrote that thinking.   My aim was to create the fastest hash function I could that met one key criteria... unpredictable run length.   The unpredictable run length means an unpredictable number of iterations of some fast algorithm.   The other criteria was to use just enough memory to foil GPU parallelization by consuming a lot of GPU cache.   The point of Scrypt was to make parallel operation difficult and its primary weakness is that validation time suffers as you scale it. Good luck filling 1 GB with cryptographically secure data in 1 second.  In debug mode I cannot even memset 1 GB in 1 second. In my test benchmark, running on a single CPU core I utilize about 2 GB in 5 minutes... though I am not using the most efficient storage possible.   For starters, I am using a hash table with 64bit (birthday) 64 bit value (nonce) so that is already about 4x as much memory as you calculated.  Now I suspect that some of that 2 GB is from the hash table not being 'full'.  There is obviously a Memory/CPU/synchronization  tradeoff that can be made with the hash table.Going to 8 cores on an i7 will probably use at least 8GB of RAM which is consumer grade right now. Economics of the situation is that specialized ASIC hardware can never be profitable to purchase as a consumer because the added cost of shipping, marketing, and packaging the ASIC vs a centralized mining farm means that hash power will tend to concentrate in large mining farms tightly connected to the latest manufacturing process.  Improvements in technology mean the lifespan of an ASIC is only about 1 year during which the entire cost of development must be recouped.   In effect mining will centralize where the cost of power and overhead is minimal.   I added some more instrumentation, the speed is closer to 50 k/hash per second for the Birthday Hash algorithm.  It all comes down to a tradeoff with validation time.   DHT like KAD would require much more bandwidth than the 'raw data' being published.   FYI... I do not consider the algorithm broken if software enhancements can improve performance.  I fully expect that with all of the smart minds out there that the algorithmic performance on commodity hardware will improve by several orders of magnitude.   My Scrypt-like hashing function runs on a single core at about 1 k/hash with relatively few optimizations.  There is a trade off between latency and rate of finding a collision.  I am actually using something closer to 36 bits.  Beyond 36 bits and the time it takes for a Core i7 to find a single collision would be too long.  Remember the collision rate is only the rate at which lottery tickets are found.  Difficulty is the rate at which blocks could be found.   So this algorithm could be tuned to require no more than 4 GB of RAM after which it produces a collision for every single BirthdayHash...  however, there are still benefits for storing and comparing all matches and not just single collisions because every potential match is a lottery ticket.   Therefore the number of bits in the collision is almost irrelevant beyond a certain point. Is there a way that we can quantify the cost vs gain associated with developing specialized solutions to SHA, Scrypt, and Momentum?  SHA is merely a game of transistors per chip and has no limits associated with a memory bus.  The speed of light is not a significant factor as the chips only have to 'communicate' matching results to the outside world.Scrypt is effectively the same as SHA with the exception that your density per ASIC is reduced.  Once again there are no speed-of-light limitations because only matching results need to be communicated outside the chip itself.  The proof of the nature of these algorithms is the existence of a mining pool which effortlessly aggregates any number of computational units at a global scale to produce what is effectively one giant computer.Attempt to build a mining pool super computer for Momentum and you will quickly discover that bandwidth and the speed-of-light make it so expensive as to be infeasible.    So while there may be a theoretical quadratic return in algorithm performance for increasing the amount of RAM you have, the speed of light and density limitations kick in and limit performance beyond a certain point. Any time you throw away hashes because they fall outside of your memory range you move the computational complexity from the p(n) curve to the q(n) curve in my white paper.  You save on memory but the cost is far greater.   Memory and CPU power must always be paired proportionally or you will have idle memory or waisted CPU cycles.  I agree that if there were a way to efficiently merge the memory of all computers on the internet this would be great.  Unfortunately, the memory bandwidth would be limited by the internet and thus not pratical at all.  However, I suspect that every office environment could achieve this at a slightly smaller scale.   What is the cost per unit of computational power / memory as the amount of memory / power approaches infinity?    I suspect that it goes non-linear for larger and larger sizes and thus the limits on Super Computers today.  Eventually speed-of-light becomes your problem. BirthdayHash(x) where X = 256 bit (or 512 bit) number and produces a 32 bit number would be hard to build a rainbow table for.  Such a rainbow table would probably use far more memory.The "+" operator is concatenation rather than addition so the math you are doing is not valid.BirthdayHash is only memory intensive enough to limit the cache available to the GPU.  Scrypt-like hash functions have some benefit at fighting ASIC designs as long as their validation time does not exceed 1ms.  By combining Scrypt-like functions with Momentum you get the best of all currently known techniques. I will make it less subjective for you.  If I choose to release BitShares with a different proof of work then you have clearly convinced me.  I have far more on the line than $5000 for choosing the wrong proof of work.   I had considered the potential for such a design.  DHT will not perform well enough, you would need 100BT ethernet or perhaps gigabit before the hash table could be filled quickly enough.  From what I can tell a SUPER COMPUTER with a ton of RAM and high-speed interconnects would give you the best performance.   Here is the difference, such a super computer could be built from commodity parts.     So the question becomes how would such a super computer compete with say a corporate office that works together via the high-speed local network to mine at night?    The other question becomes, if you are going to build a SUPER COMPUTER to perform this mining computation then you probably have a dual-use machine that could be used for all kinds of research.  This is far better than Scrypt or SHA256. The reason it is GPU resistant has to do with bus speeds and the unpredictable runtime of my scrypt-like hash function.   I did not discuss this in the white paper which was meant to be more generic.  I also use hardware accelerated AES to give the CPU an edge over GPU.
Now that I am at my keyboard vs phone, I will respond in some greater detail:BitUSD is the long position balancing out a short position of BitUSD vs BitShares.   The market forces between longs and shorts control the supply.  BitUSD can track the value of USD without any real USD ever trading hand or being held in escrow.    No one has done this before. I have considered the potential of using hardware optimizations and believe that they could be built and with some of the advanced content addressable memory could be very quick.  There are TWO things that are necessary to be optimized via an ASIC.1) An ASIC that is able to handle Scrypt-like hash functions.2) A large amount of transistors dedicated to memory.Optimizing one without the other is pointless.Both of these things are possible to build and the result would be a mining beast.    However, memory uses electricity and the scrypt-like hash functions are much harder to create ASICs for.So I contend that the economic costs would make the threshold at which investing in an ASIC makes sense to be much higher than what would occur with either Bitcoin or Scrypt. So the real question becomes what is the computational advantage per additional transistor in Sha256 vs Scrypt vs Momentum and what is the cost of deploying it.One thing is clear, this thing is likely GPU proof and a much harder ASIC to develop than Scrypt.   Birthday hash can be any number of bits so long as a collision can be found in a reasonable amount of time. Say 10 seconds for the first collision.  Please read the bitshares white paper in my sig and then come back.  Your understanding is so far off base that I can not answer it here.   No premine. No IOU   No debt.  No trusted third parties.  No way for any party to default.   Nathaniel,     Thank you for your insightful response.   Here is what I already know to be true about the algorithm.1) The faster you can fill the RAM to the max amount, the more collisions per second you can find.2) Once RAM is full, the performance is equal to SCRYPT with the exception that checking the centralized store is a synchronization point.  If a way can be found to require sequential access to the stored birthdays then that would be the holy grail because you couldn't fill the RAM in parallel.3) In my particular implementation I do not use SCRYPT, but an algorithm based upon the same sequential-memory-hard design.  The twist is that I use AES (hardware accelerated on CPU) + 'unpredictable execution time' to trip up GPUs and other parallel architectures.  ASIC could probably design around it.   I left the white paper more abstract, but my particular implementation is better than Scrypt even at he Birthday Hash level.The most compelling argument you make is that there is a non-linear gain for building larger systems.  Ie: doubling the RAM and doubling the CPU to match would result in more than 2x performance gain.  Though I would argue that the cost of building larger systems is also non-linear.   Ie: to double the RAM and CPU of a high-end system would cost more than 2x the base system. Lets compare the range of mining machines:1) Mac Pro with 12 cores and 32 GB of RAM 2) 1.6 Ghz 4 Core Arm A9 with 2 GB of RAMI would estimate that the ratio of RAM to CPU is the same in both cases, but the Mac Pro would generate significantly more collisions per second because it has the RAM + ability to fill it in a timely manner.  The question becomes which is a better value:   50 ARM systems at $100 each or 1 Mac Pro at $5000+?      Yes it is very simple and elegant After the Fact...  but I have posted bounties trying to find better proof of work and spent weeks trying to find a way to make a fast to validate memory hard problem.    Then I had to find a way to make it 'scale' the difficulty smoothly.   Lots of little things to make something simple, elegant, and algorithmically secure.  The momentum factor prevents manipulation of the BitShares blockchain based market because miners face a major cost to 'stop mining mid block in an attempt to manipulate the market'. I wanted a fast validating proof of work.I wanted the most decentralized proof of work I could come up with.   An ASIC for scrypt could be developed much easier than for this proof of work.I wanted the bottleneck to be a commodity part with dual use.  RAM and memory controllers. Yes you could build an ASIC but the ROI equation would be radically different.  Especially when competing against an army of PCs with no additional capital costs because they are dual use. Sure you could create an ASIC, but the transistor count would be dominated by memory.  A single Core i7 can utilize multiple GB of memory within a 5 min block interval.    If you replace the Core i7 with something 10x faster, you would need 40 GB of ram to maintain the same efficiency.  If you don't grow the ram, your performance will only marginally better and nowhere near 10x.  With these numbers the gains from creating a specialized ASIC are much less than in bitcoin land to the point of not being profitable.   RAM is power hungry so ASIC manufactures would be competing against home PCs with 0 capital cost and sometimes free electricity.    Talk by Charles Hoskinson given at C3 conference in Atlanta: http://www.youtube.com/watch?v=DnNPX8wc1tc https://bitcointalk.org/index.php?topic=313479.0 I have created a new proof-of-work better than scrypt that should hopefully kill ASICs once and for all.  I am offering 5 BTC to build an alt-coin based upon it.   Contact me for more info.https://bitcointalk.org/index.php?topic=313479.0 for the bounty thread. Bitcoin could end centralization of hash power by adopting a new proof of work I have created that would require 10 TB of RAM if someone were able to create Scrypt ASIC capable of 1 Gigahash.  This memory-hard hash function scales memory to the point of requiring GB of memory to efficiently find solutions, but almost no memory to verify. http://invictus-innovations.com/s/MomentumProofOfWork.pdfTHere is a 30 BTC bounty in the project-development thread related to this proof-of-work.   I am posting in general discussion because of the general usefulness of such a proof of work in the bitcoin space. In the linked white paper I have documented a new proof-of-work system that can be used for BitMessage, altcoins, or other distributed autonomous corporations.   This new proof of work can require gigabytes of memory to solve, but almost no memory to verify and as a result the ideal ASIC is memory.   If one were to create a Scrypt ASIC capable of 1 Giga-hash / second then one would require 10 terabytes of RAM to most efficiently find one solution at the target difficulty for the momentum proof-of-work every 10 minutes on average.I have provided a proof of concept implementation  here: https://github.com/InvictusInnovations/BitShares/blob/master/src/momentum.cpp  This 30 BTC bounty is for two different goals.  One goal is to produce an implementation of this proof of work system that negates the algorithmic advantage given to the use of memory and allows much faster solutions.  If you are able to convince me this proof-of-work is no better than Scrypt then you will win the 30 btc bounty.   The objective proof that someone has convinced me will be whether or not I use momentum for BitShares.  I have far more on the line for choosing a bad proof of work than not paying this out.Edit: It has been pointed out to me that this could be implemented in 1 day by a motivated individual, so the bounty for creating the following alt-coin has been reduced to 5 BTCTHe 5 BTC bounty from this thread has been supplanted by: https://bitcointalk.org/index.php?topic=315973The other way to win the bounty is to create a fork of the latest Bitcoin codebase that leverages the proof of work implementation in my repository.  I will be more than willing to help with any such implementation.   The condition on this forked code base is that the resultant 'alt-coin' must not be launched or have any pre-mining and I get to set the release date.   It must have 5 minute block intervals, a maximum money supply of 2 million, a 4 year mining period until the full money supply has been mined with a halving of the mining reward every 3 months.  You can read the full white paper for the proof-of-work here: http://invictus-innovations.com/s/MomentumProofOfWork.pdfThis bounty expires November 15th, 2013.  Only one 30  BTC bounty will be paid... either to the creator of the alt-coin or to the person who breaks the proof-of-work.With the reduction in alt-coin generation bounty, I will pay both bounties if both are won. Perhaps but if the price is out of line with the 'expected consensus' based upon the name, then the gamblers will come on out and start betting against the billionaire.   They would eventually bankrupt the billionaire because the only way to maintain the manipulation is to throw more and more money betting against the masses.Now you are free to speculate any way you like, but the only reason not to bet with the tracking is if you are attempting to play the momentum game and hope to exit before it corrects.   A billionaire could certainly manipulate the market but that already happens every day in the gold/silver markets.   The difference is that with BitShares the billionaire would have to tie up his money in collateral with carrying costs to bet against the market consensus and could only profit if he was able to convince others to make a bigger and increasingly risky bets further away from parity. In this particular instance the rich would go broke playing the game you suggest and I would bet good money you would go broke too if you decided to bet with the rich man with no other supporting reasons.Keep in mind that unless there is a market consensus there is no point in betting, it would be like gambling on a random number... some might go for it, but most would not.Given this theory, I will submit that we should run an experiment on the test network and create BitX which is tied to nothing.  Has no label or idea.   My conjecture is that BitX would always trade at near parity with BitShares because there is no market information to bias it in any particular direction.   If someone started pushing BitX in one direction which way would you bet?  That it would continue moving in that direction or that it would return back to parity?  THe test network will prove the theory and until there it is pointless to argue about which way it will go. Actually, it isn't absurd to suppose that it will track simply because of the name.   To demonstrate why, let me introduce the following principles:0) BitShares have non-0 value1) USD has non-0 value2) There exists a ratio between the value of BitShares and USD known to the market.3) All trades are voluntary4) All new issuance is based upon a short and a long taking opposite sides5) Both the short and long have financial incentive to ensure they enter the position at the current exchange rate.As a result all short positions are by definition at a price that reflects the proper ratio or the trade would not have occurred. Once the trade has occurred the market participants must agree on all subsequent trades.   When the owner of BitUSD wishes to sell, he must find a buyer.  He of course wants to sell it for as high a price as possible while everyone else wants to buy for as low a price (in BitShares) as possible.  No one would dare pay more than the USD / BitShare exchange ratio and no one would sell for less than the exchange ratio.The short position has constant pressure to cover because of the carrying cost, while the long position is receiving twice the dividends per unit value and thus there is an ample market to buy his BitUSD because excluding exchange rate risk, BitUSD pays twice the return as BitShares.So BitUSD is a prediction market on what the future resale value of BitUSD in terms of BitShares will be. Sure, the promise of delivery is one aspect of futures contracts, but if you look closely, 99% of future contracts are never delivered and in fact the total outstanding futures contracts often exceed the available supply of a given commodity.   The future market would be just as valuable if all trades were settled for USD rather than delivery because, in theory, the USD received would allow the commodity to be bought for immediately delivery.Try a thought experiment,  assuming you had 1000 BitShares today, at what ratio would you short BitUSD and at what ratio would you buy BitUSD.... you now have your bid-ask spread.     BitUSD will track USD in the same way as prediction markets track any arbitrary concept.  I recommend you study how prediction markets, derivative markets, or 'side-bets' work in practice.  Every actor in the market has financial incentive to tie BitUSD to USD by 'betting' on where the future consensus will move.  The only logical way to bet is to assume everyone else will eventually bet with with consensus toward USD.No market makers are ever needed.  In fact, there is no need for BitUSD to ever be exchanged with USD for the system to have value.  Think on this last point a bit and you will gain many insights. This whole system is geared around speculators.  To take speculators out of the equation is like having a debate about whether a car will work and then say don't tell me that some 'magic' wheels are going keep me rolling.It depends upon what percent of the BitShare market cap was tied up backing that 1 BitBTC and how many traders are in the market and why the price fell 50%.  With a lot of traders in the market you would still be safe because new short positions would be issued the whole time the price of BitSHares relative to BitBTC was falling.   This is only a problem if  near 75% or more of BitShares are placed in a short position against BitBTC, but if only 10% of the BitShares are used to back BitBTC then the price would have to fall by more than 95% before anyone risked losing money due to this particular scenario. This system will launch like bitcoin, it will have to prove itself.     Cunicula,       I walked through your latest example of how BitBTC could in theory become under collateralized.   I want to address this because it was a solid use case that has not been addressed by any of our white papers directly.        1) It is theoretically possible for your scenario to occur, and in such a scenario everyone who was  Short BitBTC would be entirely wiped out and everyone who was long BitBTC would end up with twice as many BitShares as they started with (assuming they sold).   It is even possible for the result of this catastrophic loss of value in BitShares to result in BitBTC being on the books without any corresponding short positions backing it up.   Such an event would be terrible for those long BitShares, even worse for those Short BitBTC... but those who are impacted the least would be those who are Long BitBTC... they doubled their BitShare holdings.      2) This market does not eliminate all risk, it merely transfers a large percentage of ordinary risk from the longs to the shorts.  It is impossible to eliminate all risk even with traditional financial markets.  For example, a US treasury is not a 'risk free' investment, the interest rate fluctuates, the dollar can be debased, and the government could default or be taken over.  You do not consider US treasuries to be a Ponzi or a scam despite the fact that they pay the returns with the investors own tax money or via inflation.   So, if even US treasuries are not 'risk free' then your argument against BitShares is a logical fallacy because you are holding them to an impossible standard and pointing to any risk at all as signs of a scam.      3) The situation you present is very unlikely to occur for the following reasons:          a) No savvy investor would short BitBTC against BitShares after a major run up in the market because they know BitShares behave like Bitcoin.  As a result, savvy investors would sell their BitShares and buy BitBTC so that they could make money when the price corrects.  This counter-market force would actually fend off Bitcoin style price volatility.  Because selling BitBTC is cheaper than shorting it, very few if any new BitBTC would be issued at the market peak and most trades would occur as trades in long positions.             b) If the BitShare price is heading to the moon, then most people would be swapping out of BitBTC and buying BitShares.  This will reduce the demand for the creation of new BitBTC.             4) Assuming the event was only a case of extreme short-term volatility then anyone who held their BitBTC through the correction and allowed the market to clear would find that once again their BitBTC would recover near parity.           5) In the event that BitShares become worthless, clearly BitAssets are worthless and all parties accept this risk.I would like to make one final statement regarding your claim about miners not having 'authority' to perform a margin call.   This would be like claiming that your stock broker doesn't have authority to perform a margin call.   When you entered into the short position, the network rules stated the terms under which a margin call could be executed and all miners must follow those rules or their block will not be confirmed by the network.  So, if you do not want to risk a margin call, don't enter a short position.   You can buy BitShares or your can Buy BitBTC... but you cannot short BitBTC.     Allowing someone to Short BitBTC and then calling foul when their margin is called would be like allowing someone to mortgage their house and then crying foul when the loan is called when the value of the house falls.   You are using borrowed money, you have no right to keep your short position without sufficient collateral.Thank you for clarifying your position, your definition of a ponzi applies to every crypto-currency and every corporation that issues stock.    If this is what you think then there is no point in arguing.   On the other hand it appears that 100% of your claims could be resolved provided we educate all parties to as many risks as we can think of and in this case you have been most helpful in identifying areas where our users must understand the risks.In conclusion, BitShares allows users to mitigate to a large extent the vast majority of risks associated with crypto-currency price volatility.  However, every holder of BitX is only ever guaranteed to receive the collateral backing their position (2x as many BitShares) in the most extreme cases.   If you are willing to accept that risk, then you can buy BitBTC and earn dividends for taking that risk.   If you are not willing to accept that risk then keep your BTC and forfeit the opportunity cost of lost dividends.     Either way, you as the user of the system are responsible for assessing the risk/reward of using the system.It is my belief that there is enough utility and corrective market forces to both justify the value of BitShares as non-0 and to prevent the most extreme market events from occurring.   It is also my belief that because BitShares are deflationary, income-producing assets they will on-average rise in value just like Bitcoin and therefore any extreme movements are only temporary in nature.   So I am more than happy to put as much information in the hands of individuals to make educated investment decisions. If anyone has any questions I am more than happy to address the concerns via Skype: macman2k.   A quick search of the white paper does reveal the word 'interest' can be found, but not in the definitions section and only in a few sections using analogies.   We recognize the need to define this better and will make it clear long before launch.
Actually carefully reading the white paper you will notice we never used the word 'interest' once and always refer to everything as dividends.    That said, there is no perfect analogy to these financial assets in the current market.   When you are talking to the common man they consider any return on their savings 'interest', when you think of equities you think dividends.    It is a 'variable interest' rate paid to the longs by the 'shorts' which must 'borrow' the asset from the network 'society' and the cost of borrowing from 'the network' in order to 'short' is the dividends paid on the collateral.   These are all just analogies so don't get to caught up on what it is called and instead just look at who is transferring value to whom and why.    We also place a heavy focus on eliminating any expectation for contractual obligation of any party to any other party and thus there are no 'bonds' in the traditional sense.  We ask no person to trust any other person to do anything.  There is no way for any person to 'default' because all rules are automated and execute predictably by the block chain entirely out of the control of any one individual.  If there is a way for someone to 'default' or violate a 'contract' then I would love to see it.If you choose to speculate on the behavior of the chain, you might be able to make money.   It is an experiment with a solid foundation in economics being peer reviewed well known economists in reputable positions who are working to rewrite our white paper.  We are working with professionals from across the Bitcoin space and you will quickly learn that calling us a scam is tantamount to calling all of Bitcoin a scam.   I encourage you to find a series of transactions / trading algorithm that would allow you to make a profit while systematically crashing the system rendering it insolvent.  It cannot be done because there are no contracts nor ability for anyone to default.   Scams usually involve breach of trust.  Show me the trust that is being broken, and I am sure we can find ways of resolving it. Who pays the bond and can they run away?   Are these bearer bonds?  How to you ensure interest is paid? There is a huge difference... he took assets, Bitcoin, and issued financial instruments (promises to pay).     We never take any assets nor issue any promises to pay.   What we have would have to be considered a financial instrument under the law... Legal Classification of BitShares and BitShare-derived BitAssetsBefore offering our opinion on the legal classification of BitAssets we want to remind the reader that we are not lawyers and the following does not constitute legal advice.  Please consult a legal professional in your jurisdiction before taking any actions based upon our opinions expressed below. Throughout this paper we make reference to short, long, margin, call and put options and other traditional financial terms and instruments, however these are only analogies used to explain the behavior of these new BitAssets.  In our opinion these instruments do not meet the legal definition of a financial asset, instrument, bond, or anything else on the books aside from the most generic term 'asset'.  Before attempting to classify these new BitAssets lets review the current definitions.A financial asset is an intangible asset that derives value because of a contractual claim.A financial instrument is defined as "any contract that gives rise to a financial asset of one entity and a financial liability or equity instrument of another entity" according to IAS 32 and 39 (International Accounting Standards Board)A contract is a voluntary agreement by two or more parties, each of whom intends to create one or more legal obligations between them. A contract is a legally enforceable promise or undertaking that something will or will not occur. Elements of a contract include:  Offer and acceptance and Meeting of the Minds Intention to be Legally Bound Consideration Additionally the parties to a contract must have capacity to contract, its purpose must be lawful, the form must be legal, the intent must be to create a legal relationship, and the parties must consent.Under European Union Law you must consider the MIFID (Markets in Financial Instruments Directive). This directive defines a regulated market as a multilateral system operated and/or managed by a market operator which brings together or facilitates the bringing together of multiple third-party buying and selling interests in financial instruments - in the system and in accordance with its non-discretionary rules - in a way that results in a contract in respect of the financial instruments admitted to trading under its rules and/or systems, and which is authorised and functions regularly in accordance with the provisions of Title III.The common denominator behind all existing financial assets and liabilities (including cash) is a contractual obligation. If there are no contractual obligations made by any party to any other party then by definition BitShare derived BitAssets are not financial instruments. So lets see if we can find anything within BitShares that satisfies all or even most of the requirements of a contract.1) Bid / Ask Transaction Published to the Block Chain.A bid or ask is a cryptographically signed transaction by a single, anonymous party. There is no signature by any other party and no obligation to perform. The bid or ask transaction has no legal standing and creates no legal relationships. This bid or ask is processed by a network of anonymous individuals who have no capacity to contract with the anonymous party submitting the bid or ask. In theory, the bid includes payment to anyone who includes the bid in a block and could be considered signed and accepted by the miner. However, once the transaction has been included in a block there is still no outstanding obligation or legal relationship between the two anonymous parties. Furthermore, simply including the transaction in a single block by a single miner does not actually cause the transaction to be executed. It must also be accepted by all other nodes in the network and even if it is accepted there exists no legal relationship or obligation between any two parties.  Furthermore, the result of the accepted transaction is merely an anonymous update to a global shared database and could constitute free speech. 2) Short Sell Transaction Published to the Block ChainThese transactions have all of the properties of a Bid / Ask transaction with the only difference being the type of BitAsset used as the input to the transaction and the nature of the resulting outputs. It is still signed by a single anonymous party and is never signed by any other party. There is no legal obligation created nor legal relationship between two or more parties.3) Margin Calls and Covering executed by MinersNo party has a contractual obligation to provide additional margin nor to force covering; however, no party has the ability to prevent their position from being covered when the majority of the network agrees. As a result there is no obligation of any party to enforce the margin nor legally enforceable consequences if they do not.  In fact, no entity is able to enforce the margin and therefore no one to hold liable for failure to act.   4) Contract between Developers and UsersBitShares is a protocol for exchanging information that could be implemented by any number of individuals. The developers release the software open source without warranty or promise of any specific behavior. Users of the software get to choose which version to use and which network to join and therefore are in complete control over how they react to the information they receive from the network.  Users are even free to modify their software at will and therefore any actions or decisions made by the software are entirely an extension of the users will and not that of the developers.Lastly, the developers of BitShares have only created an accounting system that manages a decentralized database.  The value of any particular entry within this database is not under control of the developers.  Neither one of you own the whole world... because 2x the whole world would have to be held as collateral to back a long position in the whole world... unfortunately, BitShares are part of the world and thus such a concept is entirely impossible.I can say this... the value of BitShares must always be 1.5 to 2.5 x the value of all BitAssets in existence.  This is easy to prove because the creation of a BitAsset requires equal value from two parties and thus 2x the value of that asset held as collateral. Given this constraint, no value is ever created or destroyed in our system aside from the increasing value of BitShares themselves due to their utility.   This is like Bitcoin rising in value relative to other things.    Ok, this is a fair point of confusion that many people will have... so let me address it.There are 100 million BitBTC  backed by  150 to 250 million BTC worth of BitShares which means for this situation to occur, BitShares must have a market cap at least 10 x that of Bitcoin or these positions could never have been created.    Each of these BitBTC would be paying a non-0 amount of BitShares as dividends and therefore the market value of a BitBTC will be greater than a BTC so if you enter the market attempting to sell 100 million BitBTC for actual BTC you would cause the BitBTC/BTC price to sag and create HUGE arbitrage opportunities for people to purchase your BitBTC 'cheap' with BTC and then sell them for BitShares.        So now that I have explained the market dynamics,  admitted that an idiot could attempt to manipulate the price of BitBTC/BTC by selling at a loss, and shown that 100 million BitBTC cannot be created from thin air, but requires 200 million BTC worth of value to be backing it do you see the difference? Ok.. now that you have conceded that Not all BitAssets are ponzis...  let me try to elucidate something for you.Lets assume that 100% of all BTC were locked away in some private network behind the great firewall of china and that no BTC could ever leave china.   This is of course an unrealistic case, but it will help prove my point.  Within china there is a market for BTC and its value is well known.Back in the United States someone wants to speculate on BTC but they can never acquire it due to the great firewall.    So they create a prediction market and take bets with their friends about which way the value of BTC will move in china.  At the end of the day all positions are paid off in USD. Anyone on the long side of the bet sees profits/losses as if he were actually holding BTC against Dollars, the short side sees the opposite.  Thus all profits / losses are transferred between these two parties an no BTC ever entered the equation.  The supply and availability of BTC is not a factor in the effective operation of BitBTC because all trades are settled in BitShares... the only thing the participants get is a derivative asset who's return is highly correlated with the price movement of BTC. I can show the source of every profit, loss, and dividend in my system and it is 100% transparent.   What ponzi scheme can be 100% transparent and still find any kind of success in the market? I second that!  I am still trying to figure out how to profit from this so called ponzi!  Keep hitting that straw man... First of all, as long as there are transaction fees in the network dividends can be paid and the holder of BitBTC can receive them.  Second there is no debt in the system, unless you count 2x collateralized short positions debt.Third, you must assume a VERY thin market before there would exist a condition where someone Long BitBTC wouldn't voluntarily give it up for a profit as a result of a short squeeze.Fourth, if the volatility is high enough to wipe out the collateral then the BitBTC could face some losses in the short term.The thing you are missing in all of this is the dividend paying asset generated by the profitable operation of a p2p exchange.   The BitBTC gets a share of these profits and can continue to get a share of these profits forever.  If profits go to 0 because all trading stops, then of course your asset is probably worth 0 and the non-0 value assumption for BitShares was expressed upfront.By the way, when you finally do see the errors of your analysis I expect to see those 70 BTC that you have bet on this being a ponzi.   Teaser Screenshot of latest work on Project Quixote... You will have to wait until C3 to see the rest  Its Ok... I spend most of my time in engineering getting the Warp core to work, while Kirk gets all of the credit for saving the day.   The two of us working together is what makes this enterprise so unique.  The BitShares idea and algorithm were designed by me prior to meeting Charles.   Charles and I have worked together to enhance the explanation of them and to validate the cryptography of the system, but the economics and design of the system is mostly my domain.   Charles is an amazing CEO and is great at raising funds, building relationships, and vetting ideas with.   I would certainly never have gotten my ideas this far without him.   It is really quite surprising that a math guy can be such a people person as Charles is.  He is a very bright guy. Ponzi...  You seem to have it.    The 'peg' is created because the most profitable way to bet is with market consensus and betting against future consensus is a sure fire way to lose.  Thus we use the term 'market-pegged' because the only rationally way to bet is with consensus.   So you can debate whether or not the market will establish a consensus, but it is clear from the long history of prediction markets that simply describing the terms of the bet is enough to establish consensus.   Thus calling it BitUSD with the expectation that users should bet according to their belief of BitShares vis USD will be enough to establish that consensus... what other consensus could they attribute to it?THis is why in our test network we will be having some exotic BitXYZ... just to prove the point... perhaps BitPoundOfFlesh would be a good option... if the price goes to high though, it might encourage canibalism... so perhaps there are better options. Cunicula, keep attacking that straw man because it won't get you anywhere.   So, let me break it down one more time:1) Assuming BitShares has non-0 value... something that is true for many alt-coins today.2) Someone holding bitshares is neither harmed nor hurt by the 'stock split' every block which appears like dividends.3) Someone holding bitshares profits from every transaction fee earned by the network.  Thus I have created an asset that pays a positive return based upon legitimate profit by offering a legitimate service.  Party A decides to post that interesting bearing asset as collateral for a short position in BitBTC.Party B decides to buy the long position in BitBTC with an equal amount of this interesting bearing asset.A & B must agree on the exchange ratio.There are now 2x the value of BTC held in the form of an interest bearing asset as collateral.  The interest from the collateral is paid to the holder of BitBTC.If the market moves against A, the miner will cover giving B the opportunity to sell their BitBTC for BitShares at the new higher price and thus B ends up with more BitShares + Interest and the market value of these BitShares + Interest is greater than the BTC.   Assuming the prediction market dynamics work.Nothing unsustainable about this arrangement. All dividends and 'interest' are paid according to blockchain rules and the process is 0-sum.   There will be a test network to prove the ideas before anyone is asked to risk their own money.   Anyway, we never take anyones BTC, their USD, or any other asset.  We are merely software developers releasing what we believe to be a useful product to the community.   The worst you could accuse us of is attempting a 'pump and dump' but that accusation would have to infer we are providing no value or utility in what we are producing.   Given that you are attempting to raise money from the public for your own alt-chain promising price stability while violating more economic principals than I care to list right now... I question your motives for attacking us.So for those of you who doubt our system we provide a very easy way for you to 'profit' if you are right.  You can mine some BitShares, then use them to buy BitBTC and never give us a dollar.   Assuming the value of BitShares crashes relative to BTC after you have bought your position then you will have preserved your BitBTC value plus earned interest all without risking anything other than a couple of CPU cycles.But... I will go one step further, you (cunicula) can mine as many bitshares as you want, use them to buy BitBTC and then I will personally buy those BitBTC from you with real BTC at face value for as many as you can mine.   Thus, I am not asking you to take any risk in my system at all and giving you an opportunity to earn real BTC for your mining efforts.   Considering we are not selling BitBTC for BTC I fail to see how you can claim we are a ponzi!   This idea is VERY similar to something I presented almost 9 months ago: https://the-iland.net/default/indexVoluntarist SocietyThe iLand is a global voluntarist society with the goal to provide liberty and justice for all through creating an entirely decentralized 'government' based entirely on contractual consent. Decentralized LawEvery iLander gets to decide what law they wish to live by and then they are held accountable to their own standards by a court of their own choosing. The common theme of freedom and nonaggression is shared by all. Non-Violent Law EnforcementThe government of The iLand Nation relies entirely on non-violent means to achieve justice and eventually displace statist governments. The use of violence to enforce laws is not in line with the principles of consent and the non-aggression principle. Surety Bond to Guarantee Good FaithEvery iLander posts a Surety Bond with The iLand which provides a assurance that an individual will honor their contracts and follow the standard of law they have agreed to. In the event of a dispute, this bond is available to cover some or all of the appropriate restitution. Injustice Sharing FundiLanders cooperate to share the burden of injustice, because in the words of Benjamin Franklin, "We must all hang together, or assuredly we shall all hang separately". Injustice can strike anyone at anytime and the individual costs can be quite high even though the average cost is quite low. The Injustice Sharing Fund is superior alternative to begging for donations after an injustice has occurred.I support your project and hope that what we are doing with our decentralized identity system can help. We have very creative monetization strategies that go far beyond just BitShares, but these are trade secrets for now.   More will become clear at C3. MercSuey,  thanks for your rational response.  Charles and I take great pride in honesty, integrity, and making the world a better place we would certainly hate to hurt anyone.  The problem with most models on Wall Street are the same problems that cunicula has with all of his fancy math.  This is why we use austrian principles and theory of value rather than mainstream economic models.  For starters we have the following principles:1) prices are historical data and cannot be used to calculate or 'measure' value because prices can be arbitrarily manipulated.  An existing price represents only the agreement between two market participants at one point in time and could be a 'straw exchange' and thus meaningless.2) margin call is based upon the buy/sell spread which proves that 100% of the market believes the price should be below the lowest ask and above the highest bid.3) all value is relative and individualized, you cannot add, subtract, multiply, or divide prices to calculate new prices.  4) You cannot compare value systems of any two individuals except after a trade has occurred, and that comparison is only valid at the very instant of the trade.5) All trades are voluntary and occur at a market price with 1 exception, the margin call.  But the user subject to the margin call chose to take that risk and the settlement of the margin call is based upon the lowest ask.Given all of these systems we are not attempting to 'model' the economy or economic behavior, we have merely created a trust-free way of buying/selling positions in a relatively simple market.  The result is that we avoid 99.9% of all problems with the wall street systems which ultimately attempt to replace market forces and voluntary trades with equations and computer models in a manner that market participants have no way of understanding.  We have been incredibly transparent in everything we are attempting to do.   Unfortunately, the arguments presented by cunicula are attacking a straw-man.   If you are going to attack what we are doing you must first understand what we are doing.  I would hope that before you go around calling us scammers you would take some time to talk with us via Skype.So here are the questions for you:1) What money have we taken from the public?  0.2) How are we using new investor money to payout early investors?3) How are we using the investors own money to pay out returns?  4) Are we doing any pre-mining?  No.Lacking any evidence on those three items, you cannot call us a ponzi scheme and doing so is intellectually dishonest.  What remains is whether or not the economics of the system we have designed work and are sustainable.  This has several layers, so lets deal with the BitShares themselves and not any derivatives based upon them.   The dividend system pays people a real return from the transaction fees and the stock-split process is just a means of gradually increasing the number of units in circulation without diluting anyones position.  As a result, BitShares as a 'currency' is less inflationary than Bitcoin.At this point I have done nothing but create a less inflationary crytpo-currency than bitcoin, it could be called an alt-coin if that is all the system allowed.   This is no more ponzi than bitcoin and no more 'pump and dump' than Litecoin which was launched to address centralization in bitcoin and represents significant innovation in the space.Then I add one very simple instrument on top of a legitimate crypto-coin.  I allow two people to create a transaction that are equal and opposite sides of a bet.  The strike-price on the bet is the current estimated exchange rate between BitShares and some other asset.    The terms of the bet are that the Long side must voluntarily sell their position.  The Short side must pay their dividends to the long side.   And that a miner may force the short-side to accept the lowest ask in order to cover the position if the lowest ask would result in less than 50% margin.     I am not one of these parties, and both parties agree to the terms.Our theory is that such a contract, enforced by the blockchain, will result in a market-based price discovery system.  If our theory is wrong then the test network which will be used to validate the economics of the system will discover the flaw and no one will make or lose any money.  You can surmise that the result of this game theory will not result in price stability, but to make that assumption you must pick one of three potential outcomes:1) BitAsset goes to 0 thus scamming the holder to benefit the short which would profit.2) BitAsset maintains the value of the collateral and is thus no different than BitShares in terms of volatility.3) BitAsset will deviate in some non-deterministic manner from the intended market peg.. this is a serious claim and requires proof.All we are doing is creating a market for people to speculate and we are providing a means to test it prior to anyone investing significant money.  Good luck raising your own funds, your system is complex, flawed in fundamental ways, and yet you are attempting to raise money directly from the public which has no way to evaluate your ideas.   I would call your system a scam, but that would involve making a judgement about your intentions which I am smart enough to realize I have no ability to know or judge.
We have been incredibly transparent in everything we are attempting to do.   Unfortunately, the arguments presented by cunicula are attacking a straw-man.   If you are going to attack what we are doing you must first understand what we are doing.  I would hope that before you go around calling us scammers you would take some time to talk with us via Skype.MercSuey, I would be more than happy to publicly answer any and all questions you might have.   Though, I suggest you send me a PM with your skype info so we can chat because your implied intent to 'publicly shame us' with your questions will only serve to prove your ignorance when we are able to answer them fully.  So here are the questions for you:1) What money have we taken from the public?  0.2) How are we using new investor money to payout early investors?3) How are we using the investors own money to pay out returns?  4) Are we doing any pre-mining?  No.Lacking any evidence on those three items, you cannot call us a ponzi scheme and doing so is intellectually dishonest.  What remains is whether or not the economics of the system we have designed work and are sustainable.  This has several layers, so lets deal with the BitShares themselves and not any derivatives based upon them.   The dividend system pays people a real return from the transaction fees and the stock-split process is just a means of gradually increasing the number of units in circulation without diluting anyones position.  As a result, BitShares as a 'currency' is less inflationary than Bitcoin.At this point I have done nothing but create a less inflationary crytpo-currency than bitcoin, it could be called an alt-coin if that is all the system allowed.   This is no more ponzi than bitcoin and no more 'pump and dump' than Litecoin which was launched to address centralization in bitcoin and represents significant innovation in the space.Then I add one very simple instrument on top of a legitimate crypto-coin.  I allow two people to create a transaction that are equal and opposite sides of a bet.  The strike-price on the bet is the current estimated exchange rate between BitShares and some other asset.    The terms of the bet are that the Long side must voluntarily sell their position.  The Short side must pay their dividends to the long side.   And that a miner may force the short-side to accept the lowest ask in order to cover the position if the lowest ask would result in less than 50% margin.     I am not one of these parties, and both parties agree to the terms.Our theory is that such a contract, enforced by the blockchain, will result in a market-based price discovery system.  If our theory is wrong then the test network which will be used to validate the economics of the system will discover the flaw and no one will make or lose any money.  You can surmise that the result of this game theory will not result in price stability, but to make that assumption you must pick one of three potential outcomes:1) BitAsset goes to 0 thus scamming the holder to benefit the short which would profit.2) BitAsset maintains the value of the collateral and is thus no different than BitShares in terms of volatility.3) BitAsset will deviate in some non-deterministic manner from the intended market peg.. this is a serious claim and requires proof.All we are doing is creating a market for people to speculate and we are providing a means to test it prior to anyone investing significant money.  Good luck raising your own funds, your system is complex, flawed in fundamental ways, and yet you are attempting to raise money directly from the public which has no way to evaluate your ideas.   I would call your system a scam, but that would involve making a judgement about your intentions which I am smart enough to realize I have no ability to know or judge. I have no need to confiscate BitBTC because shorts have financial incentive to cover it or they will lose money.    The shorts are the only ones that face a margin call. The additional collateral is put upfront... not after the fact.   Margin is called long before there is insufficient collateral. This is not a foreign exchange market, it is a prediction market.   It works just like the prediction markets for president, sporting events, etc with the only difference being that it is continuous and the market players have access to far more information.  If you understand prediction markets and created a prediction market for the price of BTC vs USD based entirely on 'play money' it would be very accurate and you could accumulate 'play money' by investing wisely in this market.   If you replace the 'play money' with a crypto currency then the play money might gain value on its own. I never claimed the system was risk free... lets look at the risks:1) it is a crypto-currency so holding it is subject to risks associated with holding a crypto-currency.2) buying BitBTC risks the buy-sell spread vs BitShares3) there is a variable dividend rate based upon transaction volume and small changes in backing between 1.5 and 2.5x...4) because of the dividend rate, there will be a premium for BitBTC over regular BTC... this premium will fluctuate based upon the expected future dividend rate and the relative flow of money into or out of BitBTC vs BTC.5) there is a relatively small risk that attempting to sell during rapid decline by 50% of the BitShare price in 10 minutes would blow through the margin... but if you hold through the correction, new shorts/longs will appear at the new price.All of that said, the risk of investing in BitUSD would be like depositing funds in CD with a Bank that only gave out mortgages at 50% the home value and then claiming the bank was a ponzi scheme because they promise a 'risk free' return on their deposits?  Further, assume the terms on the CD were longer than the terms on the mortgages and factor in the difference in liquidity of homes vs houses (ie eliminate forclosure / resale risk) and it is clear this is a relatively safe ROI... so safe that you might call it 'risk free' without actually being risk free. BitBTC holders lose opportunity cost relative to gains in BitShares.  The market value of their position will remain near parity with BTC.   The short profits from this lost opportunity of the holder of BitBTC.    On the other hand, the BitBTC holder is protected when the price of BitShares falls against BitBTC because the Short position is forced to cover and thus at the end of the day the BItBTC holder ends up with more BitShares of equal value to real BTC. Ok, lets find some other metric... perhaps a Market Cap you don't think BitShares will ever achieve? The interest rate on BitBTC is not based upon the mining algorithm and it is not paid in BTC.    No BitBTC is ever created unless two people agree on a price and take opposite sides of the bet on the movement of the price.  Furthermore, they must both put in equal value in terms of BitShares.  If there is no price movement, the short pays the long via the opportunity cost of lost dividends.If the price goes up, bitshare-value is transferred from short to long.If the price goes down, bitshare-value is transferred from long to short.This is a 0-sum game, not a ponzi, not a peg enforced by monetary policy.  This is a prediction market of voluntary actors speculating on future price movements and making money proportional to their investing skills.   The return on real BTC is a growing supply of BitShares... which if they have a non-0 value can be sold for additional BTC.   I am not promising any particular rate of return and my peg is not a 'hard peg' but fluctuates over time within a narrow range.  This is why we adopted an axiomatic approach to designing our system:1) no price fixing2) all voluntary transactions3) no creating value from nothing4) 0 sum, value is only transferred never created nor destroyed.Unfortunately, your system violates these core axioms despite your fancy math.One last caveat... we are not pre-mining and have accepted no investor money from non-sophisticated investors... the money I received early on (May) was refunded + 50% and we continue to turn down funds from people who want to invest in the idea because of SEC laws.  These are not the actions that would be taken by a scammer. Furthermore, we are spending significant time and money to build revolutionary market-based systems far beyond just BitShares with the goal of securing life, liberty and property for all without the need for government.   We want to make the world a better place.I spent significant time and effort to teach and educate people in the Mastercoin thread.  As a result of my efforts Mastercoin has been forced to redesign their market pegging system.   So while I disagree with the approach of Mastercoin, I have developed the utmost respect for dracoinmister as being well intentioned and thinking outside the box.  If you are so sure that you deserve payment for claiming to show how my system is flawed, then publicly back your position with an equal amount of BTC for proving you wrong.  Otherwise, your unfounded claims cost you nothing and the true test of a belief is being willing to put your money on it. The impossible trinity is true if the only means of controlling the price is 'printing money' or 'destroying' money, but that is not what we have.  Furthermore, the analogy breaks down when you factor in 'Sovereign monetary policy'.    We are not attempting to Peg BitShares to USD via monetary policy.   BitUSD is the result of two sides of a prediction market that neither creates nor destroys value, it merely transfers it from those who bet wrong on future price movement to those who bet right.   This can be maintained forever, especially because of automatic margin calls that 'settle the trade' before the long position can lose money.   Lets simplify this for you... I am Mt. Gox and am running a P2P exchange.  You deposit your BTC with me I pay you interest from the fees I charge facilitating the exchange.   You can withdraw more BTC in 6 months than you started with because the business earned a profit providing a service. The only thing I have done is decentralize Mt. Gox and allocate the profits to the shareholders.  Definition of a Ponzee Scheme:   a fraudulent investment operation that pays returns to its investors from their own money or the money paid by subsequent investors, rather than from profit earned by the individual or organization running the operation.So given this definition you make the faulty assumption that I am paying returns with their own money or with money from future investors.  I am responding here because this is complete nonsense and I want to show you how this Distributed Autonomous Cooperation (DAC) works to both make money legitimately and then pay this to the share holders.The single biggest source of confusion is that the 'mining reward' is partially paid as dividends.  Ignoring the BitAssets such as BitUSD, the logical analogy to this is a stock-split.  No one is 'debased' or has value transferred from one person to another, with the exception that some of the stock split is paid to the miner.  It is no different than bitcoin in this respect.  You would not consider a stock-split a 'ponzi scheme' if a regular corporation did it.   Certainly there are irrational psychological effects with having 'more' of something that is worth 'less' as can be demonstrated by people who think they have made money in the stock market despite the debasement of the dollar.   We will be working very hard to educate people that the stock-split does not transfer any wealth from the holder's of BitShares.   However, the stock split DOES transfer wealth from those who are Short BitBTC to those who are Long BitBTC and this is how we 'charge interest' to the shorts who borrow to pay dividends to the Longs.     But, to clarify everyone's thinking on the subject, lets look at the long-run when the currency supply stops growing (12 years) and only focus on how dividends will be paid then.The DAC earns a profit by facilitating trade via transaction fees.  Some of these fees are paid to miners for their services.  The rest are paid as dividends.   These dividends are not SOURCED from future investment and could be sustained forever.  If there are no transactions there are no dividends.  In other words, the system does not promise any particular rate of return beyond a share of the 'profit' the DAC earns selling space in the block chain for transactions. So how does BitBTC pay dividends on BTC?   The dividends paid are from the BitShares held as collateral for the short position that created the BitBTC.  The source of the dividends is the transaction fees.   The ratio of dividends paid to BitBTC vs BitShares is always proportional to the price ratio between BTC and BitShares and because the collateral is 1.5 to 2.5 the value of the BitBTC short position, in percentage terms BitBTC pays 1.5 to 2.5 the rate of return as owning BitShares proper.Money is transferred from the people  who are Short BitBTC to the individuals who are Long BitBTC as the carrying cost of maintaining the short position.  This is not a ponzi, these are opposite sides of a trade who entered into a voluntary arrangement.I will go one step further to prove this isn't a ponzi scheme.  The system will work even if no one ever trades BitBTC for actual BTC.   Your profits are entirely denominated in BitShares and those who 'trade' the best within the system earn the most BitShares.  BitShares could be viewed as nothing but play money or bragging rights in a virtual prediction market on the price between BitBTC vs BitUSD vs BitGold.   If BitSHares have a non-0 value then the dividends paid have real value and at all times the source of the dividends is profits from fees and not future investors money or dilution of existing investor money.You will never find a more solid group of honest individuals attempting to make the world a better place than at Invictus Innovations.  You have your own 'solution' based on so many arbitrary constants and price fixing that I must shake my head.... if you cannot understand the economics of BitShares then you are not fit to design mathematical models of anything related to economics and prices.   I suggest you study the mechanics of prediction markets, voluntary exchange, etc before you go around accusing people of running a ponzi scheme.      Question, when am I going to receive my 3 BTC tip? The FABS would be the ones selling the pickaxe, dynamite, etc.   The people contracting the fabs 'in-mass' to produce 1 million chips have two options, mine in-house, or sell to customers.   Option A is 80% cheaper than option B.   End result, margin on mining becomes so tight that the only people who can compete are those who follow Option A, in house mining.         Option B has capital costs 4x as high before they can start mining.Your analogies are poor because they are approximations because the intermediate products are MULTI-USE and have no value without a mine and labor behind it.   Where as every ASIC cpu has value with only electricity as an input.   Large mining farms will have much cheaper electricity, cheaper packaging, and economies of scale that will increase the difficulty to such a point that only people operating at such efficiencies can mine more bitcoin that the cost of the capital required to produce them. No company in the game to make a profit would sell ASIC hardware below the expected value of all Bitcoins the miner will produce during its useful life.  The added cost of creating a consumer-ready product with packaging, shipping, and other supply chain issues means that the consumer can never make money by buying an ASIC because the large mining firms can get more hash power, cheaper and sooner.    The only way to make a profit through purchasing ASIC hardware is if the manufacture has different expectations than you do about the future value of Bitcoin and hash rate of the network.   In this case, it is much cheaper and lower risk to speculate directly through buying Bitcoin.  Assuming a market player will act in such a way that does not maximize their profit is a good way to get burned.  But if the market is a 'block chain' and the profits are paid as dividends, doesn't this make the 'currency' or 'shares' in the block chain more valuable while still satisfying all customer appraisals of fair price?  It isn't like the 'trading house' is owned by a central cabal, in reality it is owned by the very people holding the currency and thus providing demand.   Those that consume bandwidth and blockchain resources pay those that hold the shares.   More fees means less need for inflation to fund mining.     So while it may seem 'unfair' for the trading house to profit, that conception doesn't apply to decentralized solutions.   I have actually been thinking about how to make these batches work.   Bottom line, everyone always gets the price they bid and any change is paid as dividends to the network (fees for running the market).So if you place a Bid for $4.50 for 1 BTS then it will be executed at that price against someone who is asking less than $4.50... say $4.45... the person making the ask gets their price $4.45 and the delta .05 is paid as fees.  Neither party has any room to 'complain' and it no longer matters 'when' your order gets processed... you made a value estimate and were 'committed to it for 5 minutes.   Because finding blocks is 'random' and so is propagation delay on the network, there is really no way to 'observe' and then 'bid'.  If you observe 2 minutes of broadcasts.... place an ask for the 'highest bid'... you only have a 50% chance of getting included in the next block because miners only run the 'market making algorithm' once per minute and each hash has an equal probability of closing the block and thus your attempt to be 'last to bid' caused you to be 'first to bid' for the next round. Bottom line, bid the price you think is fair, because that is the price you will get.   What is fair will change over time, but you are 'locked in' from the moment you click send unless you bid too low or asked too high.    Can someone cheat this?   I don't see how unless you take very broad definition of cheating.  But for me, it is good enough that everyone is always guaranteed to get what they asked for or get nothing at all.  There are no games where you bid  $1 and hope the market will clear at $.95.   Exactly, this is what we are doing with Project Quixote.  Operates like skype.  Spam is prevented by proof-of-work and reputation of sender. I have attempted to use Freenet's mail... it doesn't work! I see no reason why BitMessage insists on addresses being a hash of the public key rather than the actual public key.  It isn't like anyone can remember or will manually type in the address.  This would allow you to get rid of the entire discovery step.The ACK can be delayed by several hours and thus no one would know who sent the ack...You need link-level encryption, plus modify the broadcast algorithm to randomly pick only one of your peers to broadcast to first.   Your peer would randomly pick one other peer to broadcast to... if after X amount of time you have not received an inv from all of your other peers you pick another random peer from the subset that haven't acked and broadcast to them... everyone else is doing the same thing.Then increase the connections-per-node to 32.The result of this kind of broadcast is that a node that is 'connected to everyone' would only have a 1 in 32 chance of detecting the first broadcast, a 2 in 64 chance of detecting one hop removed, a 4 in 128 chance of first receiving the message after 3 hops.....   At this point it becomes clear that being the 'first to broadcast' something as seen from a peer connected to everyone becomes meaningless... and link-level encryption prevents outside observers from watching the propagation of the message.The only remaining attack is to man-in-the-middle the ECDH exchange used to establish the link-layer encryption...   Could you please substantiate 'not very well in the short term'.   Dividends earned here are not from the underlying asset, but from the exchange itself.   So dividends paid have nothing to do with the dividends paid by a real company on the actual stock.  
Looks like he is quoting outdated critiques of BitMessage's early encryption. You do not have transferrable ownership of the underlying good, you have transferrable ownership on a bet backed by a crytpo-currency about which way the value of the asset will move relative to the crypto-currency.  This bet is entirely within the realm of the crypto-currency and all profits and losses occur in the crypto-currency. How does you system determine the price of USD vs BTS?My understanding is that you are using the median of N oracles.   Just to be clear, you gain nothing by keeping your work secret, because if your POW is that great, I will just switch to it once you do announce it.   If you are going to use patents and IP then you are resorting to government privilege and coercion.   I am interested in funding such an effort... but would like to discuss how the effort could be done in a way that is usable by Project Quixote as well because the underlying tech could be used by everyone.If you are willing to chat with me on skype, send me a PM and we may be able to arrange full funding for your effort. Prediction markets are well understood.  That is all BitShares is.I am not sure why you think such a convoluted system is required to track the USD price when prediction markets will do it on its own. Yikes!   And people call bitshares complicated! My aim was to use DRAM....  if you have an algorithm that can use a large amount of DRAM and yet can still run quickly enough to validate the work in a fraction of a second then share it.    If you are not willing to develop in the open and share ideas then stop posting your claims. You will never get a P2P hosted youtube with your approach.Aside from real-time communication, 99% of the data on the web is static.   The other 1% is basically used to index into static content.  For example, google searches could be done in a 'static' manner if their index were published rather than providing the 'service'.  99% of this forum is static.99% of changes are 'patches' to already published data.  The key is to offload all of the redundant data, have distributed hosting indexed by distributed DNS.   Then allow servers to provide the dynamic data that will reference the static data.    If I have to have my server 'always on' to publish data on the mesh network then that is a single point of failure and I risk being identified because all traffic ultimately routes to my server.   The key to getting a mesh network to work is the decentralized hosting of data.   Minimize the client/server communication and turn the internet into one giant torrent.   This would allow the network to scale to any demand.Prior to working on BitShares... I had the following ideas:https://github.com/bytemaster/tornetTo prevent Sybil attacks and encourage long term establishment of node identities, each node is ranked by hashing its public key with a nonce, the lower the resulting hash the higher the rank. It requires significant time/cpu resources to generate a high-ranking identity.Economic IncentivePrice negotiation is 'expensive', especially if you must negotiate with 1000's of peers and the market prices change frequently. As a general rule, most users can pay 'in-kind' by uploading as much or more than they download; however, some nodes have higher demand or are unable to serve files (because they are behind a firewall). Other services are 'asymmetric' such as routing, tunneling, etc and therefor you require more resources from a specific node than that node requires of you. Some users simply want higher speeds and lower latencies.Therefore, each user simply picks an amount to donate to the network. This donation is then divided among all peers proportional to the amount of service they have provided.  The result of donations is higher ranking in the priority queue and therefore faster network speed and lower latencies.Each peer extends credit to 'new peers' proportional to their rank and past payment history. Because credit is tied to 'rank' and rank requires cpu time / money to acquire it is not profitable to constantly create new IDs as new IDs have the lowest priority.An ID that doesn't contribute resources or BTC and uses up its credit will eventually find the network unusable.Distributed File SystemContent is divided into 1 MB chunks that must meet a statistical measure of randomness.  The chunks are stored in a distributed hash table (Kad).  Each node has a financial incentive to extract the most value out of its limited bandwidth and disk space. A node with limited bandwidth but large disk storage would want to store 'rarely' accessed files that the users looking for them will pay a 'premium' for. A node with unlimited bandwidth, but limited disk space will want to store files in high-demand until the demand for their smaller set of files equals the available bandwidth.At the same time that nodes want to optimize profitability, we want to ensure that nodes keep content close to their ID. The closer a chunk is to a node's ID the more value that node realizes for providing it. This means that instead of optimizing on access frequency, bandwidth, and storage each node has more incentive to offer chunks near its ID than far from its ID.The side effect of the above relationship is that each user is incentivized to find the chunk on a node furthest from the chunk ID. This encourages the use of 'binary kad search' of the network and it is this binary search that allows nodes on the network to estimate the popularity of content and then opportunistically cache content that would be 'profitable' for it to host based upon access frequency and distance from the node ID.On the other hand, nodes that are willing to pay a 'high price' for low-latency can short-circuit the lookup process and start their query much closer to the target node. This short-circut of the lookup process 'harms' the network by hindering the ability of nodes further away to cache the content. If every node did this then they could DOS the target node. Fortunately, because it is more expensive it naturally self-limiting.Publishing ContentThe cost of publishing content on a node is proportional to opportunity cost of that node giving up a slot in its file cache for your content. After all, nodes are in this for profit so each node can multiply the access frequency for a chunk by the yield of that chunk and the determine the expected revenue per-week. A node must 'bump' this chunk in order to pubish the content.Furthermore, each node can only publish on nodes of 'lower rank', therefore new users / IDs end up being 'beta-testers' for content and nodes that wish to publish to more reliable nodes must invest in their identity. Market forces will then ensure that 'good' content is kept, and 'bad', unused, or outdated content is dropped. Due to the large number of users with small upload speeds and large harddives, there should be significant incentive for them to speculatively store infrequently accessed chunks.If you combine these features with a 'mesh network', then you solve many of the bandwidth problems because people can pull from nodes near them and data for popular content will be cached.   No one needs to maintain a server to 'publish their data' once it is popular enough to be self-sustaining.   Everyone gets paid for contributing resources and there is financial incentive to contribute.  There is an article on this topic here: http://letstalkbitcoin.com/is-bitcoin-overpaying-for-false-security/ You cannot audit code people compile on their own.Laws never work, ie: murder is illegal... proof it doesn't work. BitShares is a concept, a generalization of an idea.   There will be many 'BitShares' chains and unlike Bitcoin, we will actively seek and promote new 'alt-chains' each with their own derivatives.  To support user generated assets, dynamically (originally the goal), I will have to change the features that exist on the main chain... which we are tentatively dubbing 'CashShares'.    Other chains will include 'CryptoShares' for most alt-coins.We have started the design for general purpose prediction markets but will probably have the following differences:1) long positions will not pay dividends, though short positions would still incur opportunity cost as their dividends are forfeited.2) Require people to update their positions faster (say 3 months rather than 1 year).There are many other details, but I am still working on them. Good for the miners, yes.  Good for the network?  I think the there are better places for the network to spend money. BitShares is a distributed autonomous corporation (DAC) where the 'shares' of the corporation are mined into existence and pay dividends based upon transaction fees.  These shares can be held as collateral for USD loans (BitUSD) from the DAC and other people can buy these collateralized debts of the DAC and earn 'interest' paid from the dividends due the collateral.  Therefore, BitUSD acts as a way for two parties to speculate on the direction that the value of BitShares (aka the stock of the DAC) will move relative to USD.   If the price of BitShares relative to USD goes up, the short position makes money, if the price goes down the short loses money.   Either way the holder of USD maintains the purchasing power of 1 USD worth of BitShares plus interest.We are releasing a product code named Project Quixote that provides a decentralized 'id' system that maps a human readable account to a public key and will be a complete alternative to Open-ID and entirely eliminate the need to ever share a 'bitcoin address' again.   These IDs are also used as part of a communication system similar to BitMessage (without having to share 'bitmessage addresses').  The foundation for the messages and IDs will be released first and will help us harden our network and P2P infrastructure while we implement the blockchain logic separately.    THe gensis block for the ID system will be launched in October, the BitShares test network will launch in November, and the live network will be in feburary after we are sure that there are no glaring bugs / redesign necessary.Project Quixote will also double as a Bitcoin wallet that eliminates the need for Bitcoin addresses.  BitShares is a effectively a set of continuous prediction markets on the value of BitShares relative to USD, BTC, EUR, etc.   Prediction markets are very hard to manipulate and are very good at integrating information quickly as a result the prediction market will track the value of USD, BTC, etc in a decentralized block-chain based manner.  BitShares is not pre-mined, so you can invest early by adopting it on launch and mining on day one.  Also, promoting the idea and helping us develop it will insure you the best return on investment.  Thus, early adopters will benefit like Bitcoin early adopters.  We have plans to reward early adopters that provide funds prior to release, but we are not yet prepared to announce our plans.Mastercoin is horribly flawed and carrying around the ball and chain of Bitcoin's block chain bloat and all of the risks / problems associated with bitcoin.   It has scalability issues and its Escrow system for creating the equivalent of BitUSD is broken (I won a 3BTC bounty for showing how and why, he has not yet published a solution that I am aware of).   Development roadmap is to release a BitMessage / BitID system in October, a beta of BitShares by Thanskgiving, and launch the genesis block in early 2014.   We were already planning on introducing some of your ideas as part of Project Quixote and really like some of your innovations and would like to include more of them.If you would like to join our team and help develop your ideas as part of Project Quixote, please contact me via PM.Keep up the innovation!  BitShares is an attempt to create a P2P exchange for Bitcoin.     Block-chain or not BitShares is not an attempt to create a 'currency'.  Rather than fight about the 'classification', perhaps we should consider things from the interest of the users on this forum.   Clearly, there were many people in the project development subform that found our efforts relevant, interesting, and not a spam, pump&dump scheme.    GMaxwel has an ax to grind and is abusing his influence to the harm of the community.  Hopefully you will spend some time to see that Bitshares evolved out of an attempt to solve one of the biggest problems facing Bitcoin by providing a decentralized exchange.  The goal of a decentralized exchange is of interest to everyone in the forum based upon a survey of posts on both the Discussion thread and the project development thread.   In fact, you originally moved BitShares into the Project development thread from general discussion prior to moving it to Altcoins.  Anyway, its your forum so do what you think is in the best interest of your users. BitShares...  it is the only one that actually innovates on Bitcoin and provides new value such as BitUSD and BitGold assets that track the value of USD and Gold with no counter party risk or issuer.   Unfortunately, it is still a couple of months from launch... but based upon VC investment already has a market cap in the top 5.   BitAssets track USD price like prediction markets track election outcome probabilities... with the primary difference being the market has much better information and as a result it will be an order of magnitude more accurate.  It is all about betting on which way the 'consensus' will move where the only logical bet is that it will follow USD and thus it will follow USD.   Once a market establishes a consensus it is very hard to budge that expectation because it requires the majority of the market to change their mind at once.   Dividends are 'paid' when you transfer your money based upon the coinage and the amount of money.   (they are not paid as a million micro transactions).  BitShare  ~= Bitcoin BitUSD     =  Collateralized Promise to buy back a BitUSD with BitShares at a future market price.   Collateral starts out at 2X  USD value worth of BitShares.Miners enforce the promise when Collateral falls to 1.5 x current price.Current price equals the highest unaccepted bid in the order book.
Unfortunately, I haven't had time to create a new one...  Bitshares is a crypto-stock in a decentralized exchange that integrates the ideas of name coin and bitmessage while providing dividends on bitcoin.  We add to the bitcoin ecosystem far more than mastercoin and name coin do.   If the only reason master coin is allowed is because it abuses the bitcoin network as the storage infrastructure then that is some really mixed up priorities.    At the very least the Quixote  thread should be kept in project development because it focuses on 90% on bitmessage and identity with bitshares being a small part.   We are talking about eliminating the need for bitcoin addresses in order to transact bitcoins. I am not sure why ripple and name coin get exceptions.   Could you please elaborate on this because it makes no sense to me. They can never lose their BitUSD because it is an unspent output in the blockchain only spendable by a signature.  There is no margin call for BitUSD.     So perhaps you mean something different?*edit* Ok, I see what I missed... why would there be a BitUSD / FedUSD market?    It would be a very narrow trading range which is exactly the goal because it means that BitUSD will be almost as fungible as FedUSD and the volatility will be entirely on changes in the perceived risks of BitUSD, the expected dividends, and the premium required to convince BitUSD holders to sell a dividend paying position for a non-dividend paying position, and the transaction fees associated with using the traditional banking system.  Don't worry, these kinds of things will no longer be a problem once we decentralized the forums... but one thing at a time. Our own forums are almost ready.   Is it just me or is it biased to move bitshares threads to this sub forum and not move master coin.    Is this forum biased against bit shares or should master coin also be moved into alt coin sub forum  They can lose BitShares which is like losing Bitcoin and the value of the BitShares they lose could have purchased FedUSD and thus they did lose FedUSD. I am posting merely to provide some perspective as someone who has recently implemented 90% of what is required to win this bounty.1) This is easily a month of work, especially since you include a basic GUI as the bounty stands you are offering below minimal wage.As far as the concept goes, the proof-of-work will verify the state of your account tree, but you will face the following challenges:1) for large numbers of accounts, your tree will become untenable 2) synchronization with a moving account tree target will be challenging to say the least... 3) 2 min block time and 10 MB block sizes is not tenable for a decentralized solution.I started designing BitShares after this design because I thought it was tenable, but once you get into specifics and start running the numbers it does not work.  I spent weeks working on both the account tree, and designs to sync it.   Now I generally consider myself to be a competent software engineer, so anyone tackling this will have a major challenge ahead of them.  So while I won't claim it is impossible, I will claim it is not practical without far more innovation.  BitUSD is a prediction market on the consensus value of BitShares vs FedUSD and that is all it is.   Consensus value will track the value of FedUSD without ever having to store FedUSD with any trusted party.  Anyone who doesn't invest according to where the consensus is going to move will lose money.As far as no 'nominal value',  when we started Invictus Innovations the  'nominal value' of the stock was meaningless until someone decided to give us real FedUSD in exchange for said stock.   We could easily issue an IOU USD to one of our shareholders in exchange for holding some of their shares as collateral.   In this case what we would be doing is converting a personal IOU USD from the shareholder into an IOU from the corporation that is backed by equity.  The IOU from the corporation is much more valuable than an individuals IOU, especially if the IOU is backed by equity.     There is no nominal value, they start out valued just like bitcoins did.   Someone decides to place a value on the company.  A share is just a percentage of the market assessment of the value.With regard to why would someone Borrow a USD Note from the bank... because they could sell the USD Note for real USD to someone who wanted to make a deposit into the bank.   So while it may appear that it was a game of musical chairs, in reality it enabled decentralized deposit and withdraw of real USD by exchanging USD Notes of the corporation for real goods and services. The only challenge is bandwidth.   If you have WiFi it shouldn't be hard at all, and yes we do have plans. The point of borrowing BitUSD is to sell it, and buy it back later for less.   BitUSD is more marketable than bank stock because it is less volatile.  Imagine you wanted to start a bank, so you create a cooperation and issue  1 million shares of stock to the shareholders.  On the date the bank is formed, it has no capital.Now imagine that there are 1000 shareholders, among them are cunicula and bytemaster.Now imagine that cunicula would like to sell some of his equity in the bank in exchange for USD, so he advertises that he would like to sell 100 shares for 1 USD.Now imagine that someplace else in the world, bytemaster would like to borrow some USD from the bank.   This bank is no fool, and demands collateral for the loan.  Fortunately, bytemaster has some equity in the bank and offers to put a lean on it to back his loan.  The bank agrees, and issues bytemaster brand new USD Notes which are an IOU from the bank.  Now the bank is not dumb, it makes sure the collateral is worth at least 2x the value of the USD note it gave bytemaster because the bank now has a USD debt on its ledger.  Bytemaster sees cunicula's advertisement and decides to sell the USD Note to cunicula in exchange for his shares in the bank.   Now cunciula knows the bank is solid and is holding plenty of collateral backing its Notes and so he accepts the USD Note from cunciula and deposits it into his savings account at the bank where he earns interest on his deposit.Time passes and eventually bytemaster pays off his loan or the bank seizes his collateral to cover the loan.  A little later, Charles comes along with the USD Note he received from cunicula when he sold his car.  Charles decides he would like to invest in the bank so he puts in a bid to buy the bank's stock with his USD Note.   If no one in the market is willing to take the bid and the bid is above the margin threshold, then the bank will step in and redeem the USD note to purchase $1 USD worth of stock.    The bank could do this because it has plenty of collateral.Now I believe everyone can agree that if this were a real bank and the bank stock has a non-0 value that each and every transaction would be valid and 'safe'.   The USD note's from the bank would have a market value of about 1 USD and the purchasing power would be defended by the bank which would honor its IOUs.   There should be no doubt that the USD would track real USD even though the bank never had any USD on deposit, only offsetting ledger entries and collateralized loans.So take this system that works in a traditional corporation manned by real people operating for a profit, and replace it with a blockchain.   The only thing the blockchain needs to know is the market value of USD relative to the bank's stock.  Fortunately, there is a reliable way to get that information:  always pair every individual who wants to borrow USD with someone who wants to buy USD.    Then have the borrower pay interest to the buyer.  The bank acts as the middle man and takes a cut on transaction fees and match making.   Of course, the borrower and buyer must always agree on the price and neither will bid more or ask less than what USD is worth.  So, buy this simple analogy, I hope I have shown that the BitShares system is really no different than existing banks except that instead of issuing new USD with your house as collateral, it issues new USD with the bank stock as collateral. Hash power and mining are independent variables.   Currency can still be issued via the random selection from mining.  Under a 'fixed cap' this random allocation would be limited to something like $5 million market value per year where as Bitcoin is currently randomly allocating $200 million market value per year.   The truth is it isn't being randomly allocated, but allocated toward those who add hashing power to the network.  Hashing power beyond a certain point is waisted resources.  If you could get the same benefit to early adopters to grow and expand the network via something like dividends then you would actually end up with the same growth and expansion of the network and wide adoption without consuming unnecessary electricity.   Money is the most marketable commodity... there is nothing socialist about it and you have no clue what you are talking about when it comes to either economics or socialism.   I will now bow out of any future economic discussions with you. No, I choose to conserve my electric bill.   I waist my resources as a shareholder in this currency by paying people for unnecessary work and thus reducing my dividend payment.  Even if I pay myself... I do so at the expense of other shareholders and this is a 'conflict of interest' situation.  Now as an 'outsider' and non-shareholder I would be experience an opportunity cost if I didn't mine while it was profitable.   This is only true because as an outsider I am not the one paying for the mining. This latest argument effectively says..."In order to beet the evil central bankers, we must consume scarce economic resources searching for rare nonce values so that we can distribute an increasingly expensive to create digital currency to the masses.   If we can only make it too expensive for THEM to mine enough to own the network then we will win!"   This is the ultimate mix up of the means and ends, cause and effect.  It is raining because the side walk is wet!          You do not beat them by consuming resources, you beat them by producing value that they don't own and cannot steal at cheaper and cheaper costs.   By providing a product that is both in demand and out of their control that provides value rather than consuming value you benefit society.   If you make it about resource consumption they will always win!  You must make it about efficiency and value production.  This is a lie and demonstrates 'group identity' which is the foundation upon which all arguments for socialism is based.  If I am not mining, then I am not paying this to my self.  Instead, I am paying those who are mining out of my potential dividends based upon my ownership of the shares.  It is not the rational way to maximize shareholder value.  This is entirely off topic, please delete your post.  Ok, I am shocked!!  85% of people who have voted made the only vote that could possibly be wrong!   The reason 'more is always better' is wrong is because it entirely ignores cost (real and opportunity) as well as marginal utility.  In fact, I am willing to bet that given the choice between paying 10% of their bitcoins to some miner and not... most of these people would choose not to!   Why?  Because the opportunity cost would now be personal and not 'socialized' and people tend to think clearer when their own money is on the line.So, I challenge each of you who voted for 'more is always better' to either withdraw your vote and post how much you would pay or select one of the other options.   Either that, or post here and explain why more is always better.All of that said, I have come up with a solution to setting the mining reward vs dividend rate that will always ensure that 'market consensus' on the value of hashing power is used rather than any price fixing on my part.
I recently came up with a way to eliminate all price fixing from BitShares and would like to introduce the concept here.  This is still theory, and does not represent a commitment to a particular implementation at this point.Price Fixing in the abstract sense is anytime a parameter of our system is not based upon market forces.  Examples Include:1) 5% fee for margin calls2) 5% fee for moving old outputs forward (inactivity fee)3) 50/50 split of mining rewards vs dividends 4) Margin call when collateral falls to 150%5) 200% initial margin Each of these numbers represents an 'arbitrary' choice based upon one opinion / estimate of what is optimum.   They are also static and the reality is that the optimum setting for these numbers must change over time.  So what works today may be 'too high' tomorrow.   In a low volatility market, calling margin at 150% may be entirely too conservative and many people would consider 200% initial margin to be too conservative.   The point is that all of these numbers represent a form of price fixing that could leave the market vulnerable to both competitors and in the worst case complete failure. The network needs to gather meaningful, honest, information upon which to make decisions on where to set these numbers.   This is where creating a prediction market on the block chain would come in to play.   If you think the margin call threshold is too high, short it.  If you think it is too low, buy it.    Note that you will lose money if you do not buy or sell based upon where the 'group consensus' will move.   Given such a market for speculating on the group consensus of each of these parameters, the block chain can take a 30 day median price and use these prices to tweak each of the 5 parameters I listed above.  The result would be a slow, predictable adjustment in the network parameters based upon real-time speculation on the group consensus.I would probably build in 'safe guards' that limit the range that the prediction market may tweak the parameters and if things end up pegged to one side of the range or another that may be an indication that something needs to be changed in the software.  The market would still function freely and thus the developers could release a patch that expands the range if the prediction market indicates a demand for values outside of our 'safe range' and we conclude that it is not due to manipulation.   It would then be a 'democratic vote' via hash power to expand the authority of the prediction market to set parameters.I expect this to be highly controversial... so bring your best arguments for or against!  If you follow some of my old posts on the BitMessage forum I had an idea of hierarchal streams based upon bits in the address.  The problem is this opens up a new kind of attack where your address can be isolated and forced into a stream with only messages for you and the attacker.   I also don't want people to have to change their 'address' just to change channels.   I am talking in the abstract sense.  Bitcoin is the same as the BitShares network without dividends or BitAssets.  Anyone designing a new alt-coin could learn from the economics of hash-power security.  BitChat in our system does not fix a user to a stream.All users are in stream 0 which is the 'discovery stream'.When you 'friend someone' you share with them your stream ID.You can switch stream IDs at any time and notify your friends that you moved.Thus dynamic load balancing is possible.  With BitShares the blockchain has access to price information and thus can calculate mining rewards in terms of dollars rather than the currency itself.   Money not paid to the miner is paid as dividends.  Thus the more money paid in dividends the higher the value of the currency.    So this is not 0-sum, I could reduce the mining reward increase dividends and see the result that the value of the currency rises by more than the reduction in mining reward.  This is a complex differential equation interacting with market forces.    But assuming I could target a certain value of hash power that is independent from the value of the currency itself it could work.With bitshares there exists a ratio between dividends and mining rewards.  I believe that the ratio should not be fixed, but should decrease as the market cap increases.  The exact equation to pick is some what arbitrary, but picking a constant factor is also just as arbitrary and will certainly lead to too much value being directed toward hashing power.  We can talk about that on this thread.    From an abstract sense, the security provided by bitmessage is based upon hiding in the crowd.  You hide which messages are for you by privately picking them out of the stream of data flowing by your computer.   Unfortunately it doesn't scale to have one stream of data so an alternative method of grouping messages such that only 1 / 1000 are destined for you is required or you have to revert back to inbox based designs...So lets consider this problem from the perspective that not all people require the same level of security.   For example, it is pointless to hide the fact that you know most of the people you interact with in real life.   The government already knows who you work with, anyone you use a credit card with, anyone whom you text message or call on the phone, and anyone who you ever use regular email to communicate with.   Adding a lot of overhead to 'hide' this connection between you and them is pointless.  It only adds value to those who want to establish a new contact with someone and want to keep that contact secret (say sending something to wikileaks).    I suppose there is some benefit to hiding how often you exchange messages with your friends and family but it is certainly pointless to hide that you know them.As a result you can modify BitMessage to directly connect to most of your friends and family.  The existence of the connection doesn't reveal any new information to an observer.   You then send both regular anonymous traffic as well as direct messages / emails / chat  to your friends and family.   Now you no longer have to deal with expensive streams with proof-of-work that get broadcast to the entire network.  Instead your direct communications are hidden by an encrypted TCP connection that is simultaneously multiplexing BitShares, BitDNS, BitChat, and BitID messages.   Thus no 'streams' required for most of your communication.  For your secure anonymous needs where you want to hide your IP address you have to fall back on a streams based design.I hope this helps and if you have ideas that are better I welcome them. Yes.   Because the attack vector is double spending and the value of transactions doesn't change as the network grows.  High-value transactions would not be anonymous and thus not subject to a double-spend attack. I mentioned the dollar amount specifically because is the value of bitcoin doubled, we could have the same security as we do to day while paying half the bitcoins and thus reduce inflation.  I want to compare the 'economic cost of security' vs the 'economic benefit of security' and my conjecture is that cost of security does not scale linearly in percentage terms with the market cap of the currency.I would also like to redefine the term 'security' because hash power is only one form of security.  So the real question is how much hash-power security is required and how much benefit does each additional hash provide relative to the cost of acquiring it.Furthermore, I submit that over-paying leads to centralization which ultimately undermines the goal of 'security' and replaces it with a small cabal that can perform a 51% attack at prices so cheap that the average man can no longer have any economic influence on the direction of the currency or what transactions get processed.   So clearly overpaying for hash-power-security is counter productive and actually hurts the network despite having a higher hash rate. Everything has a price and the market balances cost vs benefit of every choice you make.  Decentralization isn't free and the measures required to defend against WWIII level attacks would require extensive compromises in functionality, speed of transactions, transaction fees, etc.   Ultimately all that is needed is:1) a means to broadcast to the entire world.2) a means to receive that broadcast.If you can do those two things cheaply and in a decentralized/timely manner then the system will work. Exactly, we need to spend 200 billion on security at that scale, but not via hashing power.   It would be like a $200 B lock on your front door while you have windows right next to it.  I argue that security comes from privacy and public support / popularity.   You must win the hearts and minds of the public against the propaganda that government will throw at the system to justify their crackdown.   Then the protocol must be robust to high-latency, low-bandwidth situations and not rely entirely on hash power for validating the consensus.   So to blindly throw $200 million toward hash power when it could be redirected toward public relations and other forms of security is insane.  Under my assumption, they would not be able to raise fees and keep them.   Their total revenue would be limited to $X million per year regardless of fees.   I would argue that Bitcoin is becoming centralized and will suffer the fate you think would occur by limiting the economic payout to miners.    I was trying to avoid implementation details because they muddy the water, but this is how I would do it.Assuming the block chain knows the value of Gold because of something like BitGold trading on the chain.   The block validation rules could be such that the maximum value of the mining reward paid to the miners is set in terms of gold.  Any surplus fees or mining rewards would be paid as dividends to the holders of the currency.   It is now in the best interest of the owners of the currency to maximize dividends and minimize mining rewards.   They could then profit by mining to include transactions with high fees even if the mining reward was below the cost  of electricity.  As a result the network would insure a minimum level of security but there would still be financial incentive for the owners of the currency to mine on their own.  If someone attempted to turn it into paypal by charging high fees to be included in blocks, their profits would be split among everyone in the network rather than centralized in the miner.  Assuming $10 Million / year investment in hashing power, that comes out to $27,000 / day or about $200 per block.If you ignore the initial capital cost and assume that you can 'rent' this hashing power for the purpose of your attack, then it would cost you $1200 to produce 6 blocks and you would only have a 50% chance of having the longest chain.   As a result you would have to do 2 attacks, costing a total of $2400 and you still don't have 100% chance of success. There is of course some risk with getting caught and hauled into jail.  So there is some kind of risk-premium criminals would put on top of their double-spending efforts.  Lets call it 20%.  As a result, I estimate that you would have to earn over $3000 from your double spend attack for it to make economic sense and this assumes you have no capital costs and are merely renting the CPU power.  Assumptions:    Revenue from mining cancels costs of mining with a small profit, say 5%.  Therefore, you can profit $10 per block by providing hash power.    A private criminal would 'earn' $60 from the attack simply by producing the blocks.    Any double-spend attack would be gravy if they could get away with it.    Assume an attacker owns a bot-net and thus is not paying for electricity or capital costs, their only cost is 'opportunity cost' ... in this case they earn $2400 from mining and the double-spend is gravy.Conclusions:    As long as it is directly 'profitable to mine' you are subsidizing someone who is performing a 51% and double-spend attack.       To fight both centralization and double-spend attacks, the mining reward needs to below the cost to acquire the hash.  This would have two consequences:         - operating a mining business for direct profit (from mining rewards) would not happen.         - a double spend attack must make up for cost of mining at a loss Yes, I am implying that it only needs to be high enough to prevent private, for-profit, criminals from making a profit on a double-spend.   Changing the 'rules' of the network requires more than hash-power, it requires consumers and merchants to use your fork.  Thus you would need to find some other way of deriving profit by 'messing' with the network and I suspect that there are other techniques aside from increasing the hash power that would be sufficient to prevent DOS attacks. To all of you people selecting more-is-always-better I challenge you to defend your irrational belief.  I suppose you would gladly spend 100% of your income on taxes to provide even more security for the banks.  A police man at every cash register and triple factor authentication on every transaction?    After all there appears to be no limit to how much you are willing to spend on 'security'.  If you think it needs be be more than $100 M then post here with a number.  But to assume the sky is the limit is to avoid all rational economic calculation.  What exactly the attack that one could profitably make against $10 million dollars worth of electricity invested in hash power? I am talking about the economic cost to purchase one-year's worth of hash power equal to the hash power of the network such that your hash power becomes 51% of the new total.I use $USD because the amount of hash power per USD changes over time.    I assume that market forces push the cost of producing a hash equal toward the revenue earned per hash.    Consider also that 'owners of the currency' have a financial incentive to mine below-market rates to protect their investment and ensure their transactions get processed.    So the cost to produce hash power would probably be greater than the direct payout received for mining it. I suppose a rich, private company may attempt to undermine the currency and earn their profits on the side rather than directly via double-spending. Conclusion: don't rely solely on proof of work to define the best chain.  If someone pops up with a new chain that is more than 6 to 10 blocks forked they are ignored until manual intervention is taken after community consensus can be reached about whether or not that 6-block fork was mined in private or the result of a legitimate chain split caused by a network outage. Thanks for the link.  This link calculates the cost to attack, but doesn't factor in the profits from attack or what the attack would even yield.   You are only vulnerable if you accept payment from the attacker or if the attacker decides to stop including transactions (DOS).    For high-value transactions, the cost of the attack can be mitigated by waiting for enough blocks (say 100) to make the attack obvious to everyone on the network and pulling off repeat attacks would be very difficult as there are other measures that would kick in.So, from a private criminal perspective how would they make money by investing $5 million dollars and attempting a double-spend? Those following this thread may be interested in this poll.. https://bitcointalk.org/index.php?topic=285701.msg3054804#msg3054804I believe I can use economics to defeat centralization of mining in the hands of ASIC developers and those with economies of scale.    Ie:  If I put a fixed limit on mining payout to $5 million per year, the no one would invest capital in ASIC development.    But with bitcoin's $200 million / year payout the equation is entirely different.See the other thread for my analysis of the security implications.   This is all just theory, but I think I might have something here.  I have a theory that I believe yields an ASIC-proof design that is founded upon economics rather than technology.   I would like feedback.1) Hashing power helps prevent double-spends.     -  double-spends are only relevant with anonymous transactions of small amounts.     -  if it is more profitable to mine than steal then private criminals will not steal      -  where is the threshold at which the capital required to double spend is better invested in honest work?   2) Hashing power does nothing to prevent government takeover of the network.     -  they can filter packets     -  they can attack users, outlaw it, pass laws     -  they can build asics     -  they can coerce miners     -  they have many other techniques other than 51% attack because a 51% attack only allows them to DOS the network for a short while.3) I contend that hashing power centralizes control in the hands of who-ever has the economies of scale.  Even new POW designed for ASIC resistance do not change the economics of economies of scale and therefore centralization.Theory:  The marginal utility of additional hashing power approaches 0 as difficulty approaches infinity.   Like all functions of this form there exists an inflection point where the value received by additional hash power is less than the price to purchase it.   So I started this poll to see where the community thinks this inflection point is.   Currently Bitcoin is paying $200 million / year to purchase hashing power from a handful of increasingly centralized ASIC firms.  This is coming at an inflationary cost of about 10% of the value of your bitcoins each year.   Is this amount of hash power actually providing you additional security for your coins or is it actually backfiring and causing centralization that ultimately leaves us less secure?I contend that somewhere between $1 million and $5 million per year invested in hashing power would be more than enough to prevent all private (for-profit) criminals and anything more is ineffective against government criminals and thus waisted investment.I then submit that if mining rewards could be capped at a market-value of  $1-5 million per year, that no one would ever invest money to create an ASIC or even invest significant resources to achieve economies of scale because the competition would be individuals with 0 capital costs using free-power provided by their employers, dorm rooms, hijacked bot-nets, etc and computers that have dual use.This would then be the ultimate means of both decentralizing a currency and preventing ASICs while still defending against double-spend attacks.  The holders of the currency get the security they need and don't have to pay for security they don't.   Is there some profitable attack that someone with $5 million could achieve on a network with $5 million in annual mining rewards?     Ie: could they profit more than $2.5 million / year from their double-spend attack and not end up in jail? AnonyMint... your comments on this forum have earned you some notoriety.. http://www.reddit.com/r/Bitcoin/comments/1lfuev/innovation_is_spreading_the_cryptoecosystem_is/
We are preparing terms for a large competition (estimated prize at $10,000 (no commitment on that yet)) for the generation of the best possible proof of work that will achieve the following goals:1) Keep things decentralized, optimized on commodity hardware widely in circulation.2) Motivate the development of better general purpose computers, ie. R&D on mining has outside benefits.3) Can be validated very quickly.4) ASIC resistant and GPU proof. I hope you contribute your PoW work to the effort because everyone benefits from sharing knowledge.  I actually managed to find a way of protecting the higher-POW chains.  Effectively, the only light-weight/decentralized/signature is proof of work, so the only way to 'sign something' from one chain to another chain is via proof-of-work which means that the signature of 'one chain' handing value to 'another chain' could be forged with POW and thus instead of a 51% attack allowing double spending of your own coins, a 51% attack allowed stealing of 100% of the weaker chain while leaving the main chain secure. I have to choose between white papers and writing code.   I am trying to do a brain dump to some others who will hopefully produce the white paper.Bottom line:  Read the BitMessage white paper.   Replace their address discovery / key lookup system with BitID.   My message encryption scheme is similar to theirs.Broadcast message with similar system to BitMessage... with the following changes:     1) proof of work scales difficulty on any given channel to maintain 128kbit/sec average     2) alternative proof of work, lighter weight version of BitShares POW that is memory and CPU hard and GPU resistant but still runs in about 1 ms.     3) channel 0 is the discovery channel (everyone listens on) and is restricted to small messages Storage:  Fixed sized storage for emails per channel.  To broadcast a new email you must bump someone else from storage.     1) weight of message in storage =  (1 month - age_of_message) * proof of work on message / size of message.  (this equation may be tweaked to make it non-linear)          - result is a defined maximum disk usage per channel, maximum 1 month, market-based priority on storage time.     2) all messages of any length are compressed with the best possible algorithm we can find for the message... trying multiple algorithms if necessary.Contacts:     1) works like skype, you can add friends which will then share which channel you are listening on with your friends.     2) automated sharing of a common private key for chat rooms and mailing lists.Real Time Communication:     1) The fact that you are communicating with your family is no secret, so certain contacts can be flagged to allow 'direct connect'            -- the only thing revealed by doing a direct connect is that you *might* know this person.            -- when and how much you communicate with this person is still hidden  (unless you start doing large-file transfers)     2) From the outside, direct connections look identical to all other communication channels.           -- packet sizes and timing should appear similar enough           -- doubles as a normal peer-to-peer connection.     3) From the inside, direct connections do not require proof of work.     4) Control the number of hops on the network via 'indirect connect',  you and your contacts clients will pick a random 3rd node that you will both connect to.  This node does not know it is being intentionally chosen, it just sees two incoming connections.  Network latency is no longer 'arbitrary', but can be kept to 1 hop.   This is slightly more private than a direct connection, but still requires proof-of-work.Then implement it with much better software architecture that allows the system to be used for more than just human-readable messages, but for data between software components.I am sure we will find other improvements along the way, but that is the rough outline of our objectives.       There is some inertia with mining and also the 'set-it and forget-it' management.  Which would probably provide enough dampening to cause all chains to approach average.That said, I can see some benefit for encouraging some merged mining.  Though I don't think it needs to be as exaggerated as it is in your approach.I think you could achieve some compromise between:reward / (depth^1)   and reward / (depth^2)Perhaps along the lines of reward / (depth^1.5).It would be nice if there were some principled approach to figuring this out.  Secure messaging system works as follows, if it can be modified to utilize the above that would be great.Lookup User's pubic key with BitID  =>  RecvPublicKeyGenerate a one-time PrivateKey  => SenderOneTimePrivKey and  SenderOneTimePublicKeyCalculate a ECDH shared secret...    SenderOneTimePrivKey * RecvKey  => Shared Secret.Create your message  TXTSIG = SendPrivKey.sign( SHA256(TXT) )AES_ENCRYPT( SharedSecret,   (TXT + SIG) )  => EncryptedMessageCHECK = RIPEMD160( Shared Secret + EncryptedMessage)Broadcast:  SenderOneTimePublicKey + CHECK + EncryptedMessage The receiver will then test each of their private keys like so:RecvPrivateKey * SenderOneTimePublicKey => Recv Shared SecretTEST(RIPEMD160(Recv SharedSecret+EncryptedMessage) == CHECK) AES_DECRYPT( Recv Shared Secret, EncryptedMessage )  =>  TXT + SIGRecover SenderPublicKey via  SHA256(TXT) and SIG Note:  this algorithm has not yet been audited so any feedback is appreciated.  I have been meaning to get back to this topic.   I put a lot of thought into it.   Allowing users to merge mine with 0 extra cost opens up potential attack vectors where a 'legitimate block' and an 'attack block' are mined at the same time with no additional cost to the creator.   In fact, it allows people to subsidize their creation of alternate histories.   So allowing it to be 'free' is not wise.  Assuming all chains are of 'equal' value, then my algorithm if discounting the mining reward proportional to the tree depth^2 would result in equal payout for mining vs merged mining.   This assumes that all chains follow the same rule.What is the goal of merged mining?   In my view it is to share one set of hash power across the entire network.  With the depth^2 discount, hash power is shared but profits are identical assuming the two chains have equal value.  If one chain has more value than the other (different dividend payouts, different reward rates, different markets)  then merged mining is a calculated / speculative risk.  You divide your hash power evenly between them, but your immediate payout will be the average value of the two chains rather than the sum of the value of the two chains.   Both chains still benefit from added security.  New chains do not have to follow the same rules, and to drive adoption may allow 100% reward even with merged mining until the difficulty reaches some threshold.  This would change the economic calculation on merged mining yet again such that as long as the alt-coin had at least 50% of the value of the 'main-coin' then it is more profitable to merge-mine.   Regarding pre-mining, my original plan (Pre-VC money) was to pre-mine 5% and pay it to those who funded the project.    I received about $15,000 on that model when Charles found the VC funding.  A condition on the VC funding was no premining. So, I consider a reasonable pre-mine to be around 5% or less.   It is really a balance between rate of adoption (and thus value of the coin), percent ownership, and the potential for someone to simply modify the open source code to remove the pre-mine and launch an 'alt-coin'.   At least by avoiding pre-mining we can legally claim we are not 'issuers' of a currency.Based upon the response and interest we I have received, I expect there to be several thousand people mining at launch and probably even more computers.  It will be a new-fashioned gold rush. Before continuing in this thread, you should read the latest white paper.  Ideas from my early design were entirely overthrown and you will only add confusion to this thread by mixing my VERY EARLY (May) design with my June 2+ design.   This thread is being purposed to BitAssets, one to Bit ID, and one to BitDNS and they are each different enough that different people have different interests.  It is a challenge for me as well, but I think it would be more confusing to have such varied topics in a single thread. This is correct.As far as your 'short-term day-trading', it should be noted that all dividends earned in the last 24 hours before an output is consumed go to fees.  Thus on a 'short term' basis, dividends play no role in the economic calculation.   The reason for this is that 'dividends' are not final until the block has enough confirmations that the mining reward may be spent (in bitcoin this is 100 blocks).   It also causes all of the 'rounding, sub-satoshi' dust to accumulate in the mining reward before being applied.   The logic for this system is already implemented and lightly tested.   You can check the rules in the source if you have any detailed questions about what happens when.https://github.com/InvictusInnovations/BitShares/blob/master/src/bitname/bitname_db.cpp You can register, renew, and update reputation points in transactions.  But you can only change public keys of registered names in the headers.   Changing public keys resets your reputation and age and therefore is not a common operation and therefore 'demand' for header space should not be high as most people would never need it.Note: the design could work without allowing transfers at all  and light client support isn't even that critical.  My thoughts are that your math is very hard to follow.  The carrying cost of shorting BitUSD is the dividend rate on the collateral.The benefit of holding BitUSD is  1.5 to 2.5 x the dividends per unit value.Thus, it is only wise to short BitUSD if the expected rise in the price of BitShares is greater than 1.5 to 2.5x the dividend rate.  Assuming a stable exchange rate (or growth rate below the dividend rate), it is wise to sell (not short) BitShares for BitUSD because you would get 2x the rate of return.This creates buying pressure for BitUSD that will bid the price of BitUSD UP and push BitShares DOWN  until an equilibrium is reached where no one is willing to switch from BitShares to BitUSD because it is 'over-priced' and the risk of a correction outweighs the 2x return.     As the price rises, it will also increase selling pressure from shorts which will tend to increase the supply as needed to keep prices near equilibrium. If BitUSD is extremely under priced, it makes sense for shorts to cover and for holders of BitShares to buy, wait for the correction, and sell.  Now how does one know whether BitUSD is over or under priced relative to BitShares?   It doesn't really matter because anyone can look at the market and look at the ratio of BitUSD to BitGold vs USD to Gold and do ratio trading with the value of BitShares being irrelevant.   If a large number of speculators adopt the ratio trading strategy then I believe it is self-evident that the value of BitUSD will track USD because the entire network would have to be off by a 'constant' factor and thus gains and losses in BitUSD would be proportional to change in the price of BitUSD. Yes, we will be mining like everyone else, we would be crazy not to.    Though with the current popularity and people like you out there ready to jump in on day one, it will be a challenge for us to acquire significant numbers of bitshares through mining.   Each block can contain 10K transactions (about). Our goal is to have as much Anon. as possible.  Including using things like CoinJoin, ZeroCoin, etc.   Ultimately privacy is protected at a higher level than the block chain based upon how clients generate transactions and use the chain. Yes, we have plans to use CIYAM or a model very similar to it.  We are working with Ian to get BitID logins for CIYAM.   However, we are working on the project management overhead.  In the mean time I have created some tasks in the github repo... tasks.md  and put BTC bounties on them.   I will be adding tasks there as I come up with them until I can get a full time PM to manage CIYAM.    If you know anyone who wants to work on small tasks for small bounties then they can start with that.  As it grows and is proven successful I will probably spend more time enhancing the process and integrating with CIYAM.   So check out the tasks.md file in the github repo, contact me, and I will update the tasks.md file to indicate that it is reserved for you..  Fork the code, submit a pull request with a BTC address for payment and I will payout on merge.  Some of the tasks are 'menial' right now, but good to get your feet wet and allow me to focus on the core algorithms.  Bit MonaLisa at least as some market value to calculate against, not sure how a speculator would be on BitBeavisAndButthead...  when we launch our test network we are considering including some exotic assets just to collect the market data.    I don't scale on a single chain (configurable parameter), but I do scale to many chains.  Because BitAssets can track arbitrary other assets (if they work according to design) users don't care about BitUSD on chain A vs chain B except for the network effect, transaction costs, and dividend rate.   Because I support cross-chain trading it is possible to be decentralized and support any transaction volume where each chain, 'operating as a for-profit, decentralized, autonomous corporation' would be competing to strike the right balance between centralization and transaction fees based upon consumer demand.   Yes, we need a model... so my mental model has been to come up with rational choices actors can make that would cause it to have any other value than one highly correlated with USD?  The way I see it there are 3 'options':1) Min Value  ==  0  (Ruled Out)2) Max Value == collateral value. (Should be obvious extreme on the other side)3) Something in the middle... based upon market forces.I think we have proven 0 Value is not valid, and by the same logic, can assume that the value can never exceed the collateral or we would be creating value from nothing.So this means there is some other 'equilibrium point'... the point at which a buyer and seller can agree to issue a new asset with offsetting positions.   So the only questions are:  what price would this be and why?  How does this change over time?  What does the change over time do to the expected present value of the asset.One theory is that the price will fluctuate 'randomly'... namely the market won't know how to price it.... but I reject this theory because without some basis for consensus the very first trade creating BitUSD would never be executed.My theory is that it will fluctuate according to market consensus of what it should follow.  You either trade with where you think the consensus will move or you will face loses by being on the wrong side of the bet.  On what basis could you rationally bet on which way the consensus would move?   All that remains are attacks where the rules can be manipulated by a single actor independent of market consensus to manipulate the price to any arbitrary point profitably.  If these kinds of attacks are possible it would entirely undermine the system and thus I place a high value / bounty on finding and revealing them. 
It isn't keys, but block sizes that must be limited.  This is why BitShares commits to a fixed limit on block sizes and forces transaction fees to go up rather than have unlimited block sizes. The link is in every user of the system communicating information they know through the prices they buy and sell at. You are correct, miners could make money 'off chain' selling CPU resources.    I actually envisioned this as companies wanting to provide web-based account creation services.  Chances are this mining would be paid for with advertising, or to draw users to your service and not actually result in a cash transaction.   Users would still experience name registration as 'free' like a gmail account (even though the cost of gmail account is your privacy). Yes, you can issue BitHorseshit if you can find enough market participants to make it a viable market and establish consensus.. of course you would have to launch a new blockchain with BitShorseshit as one of the items listed and because few people are interested in speculating on the price of Horseshit no one would mine the chain.     But the economics would still work.The key here is market consensus.  Bitcoin only has the value it does because of market consensus and the price discovery on Bitcoin started out with very wide Bid/Ask spreads that were all over the map.  Eventually you establish some market depth and everyone knows what everyone else is currently thinking based upon the order book.   So on day one this is what will happen.I will offer to short BitUSD at price     100 BTSSomeone else will bid                      1 BTSSomeone else will bid                      5 BTSSomeone else will offer to short at    50 BTSThis back and forth placing of bids will continue until finally two people agree on what the BTS / BitUSD price should be.   By this time there is enough market depth that consensus has been reached.  No one person can change this consensus and cause it to track something else.   I was just chatting about this... I meant trolling in the loosest terms because you suck me in to discussion with your civil arguments and thought provoking posts.    You are clearly not the kind to provoke fights and that is much appreciated. Miners do not make money.   Everyone is merely out to mine their own name, and as a side effect earn non-transferrable reputation points.  Darn it AnonyMint... you are the most annoying forum troll because you come across as reasonable despite having fundamental problems.I submit that immoral actions that result in theft, murder, and destruction are not economically rational for either the individual or the whole of society.  It is always better to cooperate than to fight.  Every voluntary exchange increases value of both parties.  Every involuntary exchange (death, theft) decreases value of one person and redirects scarse resources to security.So perhaps a starving person will steal to stay alive.  The result will be a harm to the economy.   You may be able to prevent starvation of some through reallocation of resources, but in the end you will undermine capital accumulation required to increase production and end future starvation.   Therefore, I submit, morality is always the best choice for the wellbeing of society and almost always the best choice for the well being of an individual.   Sure, theft may 'profit' you in the short term, but it hurts you in the long-term because it is not sustainable.  It is a misjudgment and economic miscalculation.  Lets apply some basic game theory... If you speculate and go short BitUSD by placing 2x the value in escrow and giving up the dividends.    You can get your money out of escrow any time for 50% the price by repurchasing the BitUSD.  Thus buying pressure caused by opportunity cost.  Now the only reason you would go short is if you thought the price change would be more than your opportunity cost. To create BitUSD,  2x the value of USD worth of BitShares are held in escrow.    (Both the short & long put in the market price of USD in BitShares to create the long position (BitUSD) and the short position (collateralized debt) ).    The dividends from the collateral are paid to the holder of the BitUSD.   Thus an opportunity cost on the short position creates buying pressure, and the higher BitShare return on BitUSD makes them more liquid to those who wish to earn a higher return in BitShares.     If there is expected price 'stability' between USD and BitShares then it makes sense to buy BitUSD rather than hold BitShares because you will end up with 2x as many BitShares at the end of the day (at the risk that BitShares could rise and you would lose that gain).  Some would say that morality is rational.   Economics that are not moral, are not rational.    In my book, morality is boils down to not initiating violence or fraud to harm or steal another person or their property.Otherwise, you would suggest that economics can be used to justify immoral actions.   The eugenics movement loves this rationale.  I can prove that BitUSD will not go to 0 with a very simple proof.1) Given two revenue streams in the same 'unknown asset of non-0 value'  Streams A and B2) Assume A pays 2x as much per unit time as B....3) What is A worth relative to B?4) Answer is that A is always worth 2x B regardless of the unit of the revenue stream.I can therefore conclude that only looking at differential dividend rates and ignoring margin calls and other market factors that BitUSD would be worth 2x as much as BitShares based upon the revenue stream alone.  The other reason it will not go to 0 is that the 'short position' incurs an opportunity cost and is in a nash equilibrium where they would rather buy and get 75% of their money back than 'not buy' and lose 100%.  Conclusion: I have proven, mathematically, that the price is not 0 unless BitShares are 0.  Furthermore, I have demonstrated that there exists demand for BitUSD at a price point equal to the backing collateral due to dividends alone. This system is first come, first serve name registration.  The auction here is space in the chain and all names are the same price.The BitDNS system has a dividend paying crypto-currency where you must purchase your name 'at auction'.  You don't own a name until X days pass with no bids higher than yours.   The profits from selling of the name are distributed to the share-holders, ie those who own the crypto-currency.   This system is designed to support perhaps 50 to 100 million names with the same resource requirements as the BitShares ID system while making everyone who owns the crypto-currency a 'domain squatter' on all names and they get a share of the profits.    Combining the fact that high-value names cannot be purchased at below market prices (due to price fixing) and the fact that the profits from squatting are already distributed to everyone.     More details on this system will come out in time, but please don't confuse the BitShares ID system with Namecoin DNS they have different purposes.    I like the .bns extension.    Clearly you could map the names to any TLD.     I could trade the Mona Lisa over a trustless p2p network and I will use the Mona Lisa as an example because it highlights the following:1) My system does not transfer the actual item, nor create the item, nor is it 'backed' by the item in question.2) My system does transfer the value (purchasing power) of the actual item3) My system does transfer value between longs and shorts proportional to the price movement.Suppose that every couple of years the Mona Lisa comes up for auction.  As a result we have an estimated market price as a foundation. You and I could then speculate via a 'prediction market' what the Mona Lisa will sell for in the future.  We would back our speculation with a crypto-currency.If there were enough people speculating on the prediction market then I could trade my long position with someone else.  Now the Mona Lisa market would have a wide spread and suffer sudden jolts every time there was an actual auction that provided a new data-point to the 'prediction market'.   Every rumor, appraisal, or piece of news associated with the Mona Lisa would directly reflect in movements on the prediction market.   BitGold is just the long-side of a continuous, collateralized, prediction market on the future price of Gold relative to BitShares.  If you buy BitGold and the price of actual Gold goes up relative to BitShares, those short BitGold would transfer to you the purchasing power that would allow you to enter the market and buy actual Gold.       Unlike the Mona Lisa, there is continuous data feed of prices on the open market and therefore there will not be the jolts experienced by the Mona Lisa market.  To turn this into a P2P way of trading actual gold consider that because the price is always a relatively constant ratio between Gold/BitGold the buy sell spread will be much lower locally than local-bitcoins.   So, you take your gold, sell it to someone for BitGold, wire the BitGold across the globe to your friend.  They then take the BitGold to a local coin shop and buy actual gold.   All of this while having minimal exchange rate risk for the duration of the transaction even if it is spread out over a year or more.     The light clients need the block headers plus merkel root.  Blocks are produced every 5 minutes.Yes this system is less flexible on purpose because it is serving a very narrow goal and designed to be used even by people that don't want a full currency.    It gets all names into a single namespace while being distributed.  Flexibility has costs.Note:  The DNS system for domain names is a dividend paying crypto-currency where names are auctioned.   Nothing stops someone from using more than one name, in fact that is encouraged.These are not 'free' because the price you pay is CPU power.  People will eventually bid up names with CPU power.From an economics perspective, people perceive it as 'free' even though it is not free because they do not have to think about 'purchasing something'. I can prove a transaction occurred with a merkel tree, but that doesn't prove another transaction didn't occur after that to cancel it or transfer it. I started a new thread dedicated to the technical details of the Bitshares ID system.  You will see why it is VERY different from Namecoin with very different properties and scalability.  https://bitcointalk.org/index.php?topic=283513.msg3033138#msg3033138 Recognizing that what has been published about the BitShares ID system so far has been rather light on technical details, I would like to provide a rough draft of a more in-depth implementation details.  There are many ideas that I would appreciate solid feedback on.https://docs.google.com/document/d/1ShDngXMp-2YMlCjb4NnJVUkRRZxathDdt5aTp3UUJDkFor those who like to see it in code: https://github.com/InvictusInnovations/BitShares/blob/master/include/bts/bitname/bitname_block.hpp This is exactly what I had in mind down the road.   
Suppose back in the days when CPU mining was the majority and GPU mining was just starting to gain traction but still a minority.   The CPU miners would all vote to move to something that would keep them in power before the GPU owners could take over.  The FPGA developers wouldn't even begin investing any effort.  The only way to perform a successful ASIC take-over would be to perform a 51% attack before anyone knew it and then vote to keep yourself in power.   Of course, such an attack would immediately undermine the entire currency. So the CPU users must pro-actively change the hashing algorithm at least once per year to prevent any secret ASIC developments.  Combine this with a hash algorithm that doesn't give ASIC as much advantage as SHA256 does (by being memory and computation hard, ie: the point behind the scrypt white paper) and even if ASICs were developed they would not be able to gain a majority of the hashing power quickly nor cheaply. BitUSD and BitGold are what we are betting on.    Diversification is best. I am very interested in any improvements that could be generated.  To see my current algorithm which is generic and self-contained:https://github.com/InvictusInnovations/BitShares/blob/master/src/blockchain/blockchain_time_keeper.cppThe test I used to simulate behavior:https://github.com/InvictusInnovations/BitShares/blob/master/tests/timekeeper.cppMy algorithm only works assuming the growth in hash power is not continuous and that there are periods of time with steady or decreasing hash power which gives the algorithm enough time to correct.We would need to estimate not only the current hash power, but the median rate of change in hash power.   The challenge is avoiding over-corrections that cause large oscillations in the median error.  Off-chain is where I create a transaction with 3 inputs from me and 3 from you.  I sign it, send it to you, you sign it and broadcast it to the network.   These types of transactions will be cheaper than using the built-in block chain for bids and orders.   That my friend is a problem I spent days on before coming to a workable solution.   So here it goes:Given a known genesis time, you can calculate the 'expected time' of block N based on the target interval I as   G + N*I.Given the last 2 weeks of blocks, and the timestamp included in the block, it is possible to calculate the 'median error from expected time'.If the median error from expected time is positive... we are producing too fast, set the target interval to 1.05 * IIf the median error from expected time is negative... we are producing too slow, set the target interval to .95 * IIf the median error is accurate within a safe range then keep the target interval at I.Combined with a continuous adjustment of difficulty based upon the following algorithm:Current Difficulty = median difficulty of last 4096 blocks (about 2 weeks).Next Difficulty     = current difficulty * target interval / median_interval On a purely random basis (steady hash power with normal distribution of times proportional to difficulty) this algorithm keeps the max median error from expected time less than 12 hours after decades of simulation. In a system with increasing hash power the clock should skew, but will correct when the growth rate stabilizes.   This algorithm should also adapt continuously and thus minimize the area between the target difficulty and current hash power producing a graceful curve.   Once the clock skews to much as a result of increasing hash power, the sudden increase in difficulty by 5% should limit the damage.The key here is that the target should not be off by more than a day or 2 max.  Combined with a hash algorithm that is limited to scaling with CPU and no huge ASIC style jumps and we can hopefully keep the block rate production within much tighter tolerances than Bitcoin.  It is safe to merge outputs that haven't been merged in a while.  This is particularly true when you consider 'off-chain' option/bid/ask negotiations where two different people both sign a transaction rather than let the miner do it.  If this occurred on a regular basis then you could safely merge inputs/outputs without it correlating with a high likelihood of you owning both of them.  My thinking was that after a coin had ping-ponged back and forth without merging for 4 or 5 transactions you can safely merge it.A large transaction would be comprised of many smaller transactions thus, if I wanted to send you $100 but only have outputs of $5, $20, $10, $50, and $15 then I would broadcast 5 independent transactions to you without having to exchange 5 addresses.   Spread out the broadcast of those transactions over 10 minutes and it would be hard to correlate them.  Any trading system that requires one chain to 'monitor' another chain is not scalable.   The chains must function with 0 knowledge of the other chain.  Clients may support both chains, but only those clients care about both chains.    I don't want to inherit BTC's scalability issues by requiring 'miners' to see the BTC TRX. We have a method to our madness, but that is our trade secret.   As for timing code availability, we are considering a competition on the algorithm so the final candidate is not known at this time. Cross-chain transactions are compatible with Bitcoin.    After much work I was unable to create an efficient, secure, means of having 'one currency' with a 'fixed supply' split among multiple chains without allowing a 51% attack on one chain to steal 100% of the value stored on that chain.   So all cross-chain transactions work like https://en.bitcoin.it/wiki/Atomic_cross-chain_trading I have a strong desire for the 'protocol' to be open and not defined by an 'implementation' like bitcoin.   Having a parallel code-base would force us to produce a detailed spec independent of any implementation and resolve many problems faced by using Bitcoin Qt as the 'defacto standard definition'.  It is encouraging to me to see that you have evaluated the idea and found it worth investing your time in creating an implementation. Not mentioned in detail in the white paper, BitShares also enable options trading.Options work like this:Suppose I have $100 BitUSDI will give you the option to Buy them for 1 BTS any time in the next 1 month (a specific block number).In exchange for that option, you would give me .01 BTS today.You of course would not exercise that option until the price was above 1 BTS.In order to exercise the option, you must send me 1 BTS to claim the 100 BitUSD. The 100 BitUSD are 'locked' in the blockchain for the duration of the option.  After the deadline, if they have not been claimed then I can spend them normally. So in addition to shorts/longs, options provide another way to speculate.As for your claim of asymmetric motivations between short/long positions this is not a problem because it would be accounted for in the price which would be slightly biased.Note:  the goal isn't price parity, it is exchange rate hedging.   So 1 BitUSD will be worth more than 1 USD almost all of the time.  How much more depends upon relative expectations of future dividend rates. Latest Article: http://letstalkbitcoin.com/own-your-identity-with-bitshares/ One of the design goals was having something people could 'hold' long term and would be suitable for non-speculators to transact in.  Fungibility of positions was also important.Having the ability to derive meaningful price information for automatic margin calls / settlement.All of that said, your approach would work to some extent assuming you had a settlement method.  If I am going to go short, I want to sell for as high a price as possible because I have borrowed the asset and will have to buy back at a lower price in the future.     Thus the foundation of the rest of your conjecture that BitAssets will go to 0 is gone. It seems very clear to me that economic debates are entertaining, but ultimately will require experimentation.    Obviously all new innovations enter a market of skeptics and often appear to contradict conventional thinking.    So rather than debating the theory, lets plan the experiment.   Bitcoin was an experiment that has left many "economics professors" at a loss and has defied their predictions.   Throwing in those credentials at the end as a "disclaimer" is really just the fallacy of "appeal to authority" and should be entirely left out of such a conversation.  Such an appeal causes readers to avoid critical thinking and instead be lazy and 'trust' an authority.   So when we launch the test network one side will be filled with professors who doubt, the other with believers and the market will show us what actually happens given the set of rules proposed by BitShares.Until we have proved via experimentation that BitUSD will behave as I expect it to, it is merely a conjecture.    Once the code is complete it would be trivial to launch a version without dividends and see how it competes. In the end the market will discover what works and what doesn't.  In the mean time, lets focus on trading strategies given the proposed set of rules.  Explain how you would value BitUSD relative to BitShares, when you would 'short' and when you would go long.    For the sake of getting the experiment out the door and settling all debate, I am going to restrict my involvement in this thread to a minimum.    If you have ideas on how to run an experiment please post. PGP keys are too big and lack support for deterministic wallets.  I certainly welcome any and all attempts to prove by game theory that the price will behave as I expect.  I will gladly help define my basic assumptions and work through this formally.    One technique I find very powerful to solve problems is to assume a solution exists that I have not found yet.   So assume there exists a solution then try to find it.The next step toward this discovery process involves ruling out solutions that are a waste of time for some fundamental reason.   This is where my economic axioms (not the ones in the white paper) come to play.   I impose the following limits on the solution space:1) You cannot perform mathematical operations on prices except comparison.  Addition, subtraction, multiplication, division are not valid operations on prices.2) A price represents a single exchange ratio, a single data point.  Its meaning is limited to the two people involved in the exchange and cannot speak for the global value.  It cannot be aggregated, averaged, or used for anything other than curiosity. 3) As a result of a market exchange, value may neither be created nor destroyed, only reallocated. 4) No one should get something for nothing or nothing for something. 5) There is no 'unit' of value.6) BitShares have a non-0 value.7) the only valid price is between the highest bid and lowest ask because this means the whole market agrees, not just one person. If there is an opportunity to profit, someone will find it.9) All trades must be voluntary, ie: the two sides of the trade must agree.      * note * margin calls the 'bank' has authority to sell the collateral but not force someone to buy it.Given those rules I then went with basic game theory between the long and short positions as well as the individual vs the consensus. I would love to see what you can come up with, and if you can express any other assumptions I must make.I am an INTJ so the challenge for me is moving from intuition to explanation.  If you can help define things in formal concrete terms that would be great.    We are also working on an informal white paper that is easier to read than the current one.   Having a more formal explanation than the current one would be nice too.  Charles would be happy. Roots?   Where we're going, we don't need roots.   It is comments like this that show you have no value for capital accumulation and believe only the 'workers' deserve the profits of a business.   This is the heart and soul of marxism.   Throwing in terms like "Regressive" tax is also a political opinion based upon an idea of fairness where someone other than the owners of capital deserve the profits.   Apparently the current 'owners' of the network are not entitled to the profits of the network.    Then to claim that a transaction fee system that operates on the same basis as Bitcoin (auction for space in the chain) would result in implosion is the ultimate slippery slope thinking.  A very simple way to understand the goal of my design:  view the block-chain as a profit-seeking business that attempts to maximize profits for its owner.    If I pre-mined the whole thing after building it then clearly you would have no problem with all profits going to me, especially if I also provided all of the CPU power to secure the network.    Now clearly I do not have enough capital to buy the CPU power and the risk of being centralized could destroy my business, so I offer to pay people in company stock to mine for me.  In exchange they get some dividends from the company in return for their mining effort.  The fact that you introduced yourself as a min-archist shows you have contradictions in your thinking because you support some exceptions to the non-agression principle.  Lets clarify something before you accuse us of lies... 1) The long-term stability has 100% of dividends coming from transaction fees, thus productive value provided by the network itself.2) The short-term dividends are just a stock-split as a new miner is issued shares.  It is like a new investor bringing capital into a company and the company issuing new shares to both the investor and everyone else.    Thus initial miner reward is just like a the miner is a VC funding the initial security of the network and diluting the current share holders of the company slightly.The result of this system is that BitShares is less inflationary than Bitcoin because only 50% of the new shares issued to the miner actually dilutes their position.   When this sinks in the hard-money, anti-inflation, advocates will like BitShares because we do not dilute early adopters as much as the currency is issued relative to Bitcoin. 
Interesting ideas guys.   By analogy of viewing the namechain as decentralized, for-profit, business with a monopoly on all names how can it maximize its profits?Option 1:  Sell of full title to names at auction and collect fees on name transfers.Option 2:  Lease the names at auction, highest annual commitment winsOption 3:  Auction 'full title' then charge property tax of X% of purchase price every year to renew. Option 4:  Auction 'full title' then charge property tax of X% of current value every year.Option 5:  Some combination of the above, you can either buy or lease All 5 models would solve squatting, the question is assuming there were 5 different chains which one would be adopted by the market as the most appealing and therefore generate the most money for the decentralized naming business?  I think the risk of 'losing your name' makes full title appealing.I think the risk of 'taxes going up' based upon the value I add to the name is unappealing as a buyer.I think the leasing a name makes a lot more sense if I am not sure which name of a dozen I might want.Conclusion:  I think the chain should support both leasing and buying with bids to buy winning out of leasing assuming they are some multiple of the lease rate based upon the net-present value of the income stream of the lease.  Good thinking!  https://github.com/InvictusInnovations/BitSharesYes.   Because we are not pre-mining everyone has equal opportunity to profit from being involved.  If you have C++ or web skills and don't require a lot of management overhead then we would love to have contributors.   Lots to do.  More eyes the better. The reason they are being integrated are as follows:1) ease of use (eliminating the need for bitcoin-style address exchanges)2) off-chain trading3) names / messaging is being done first so we can harden the network/code prior to introducing a crypto-currency on top of it.Just to be clear:  Only the BitShares ID and BitShares Mail system will be released in beta at C3.   Rushing a crypto-currency to market without ample testing and review is something we want to avoid.   That said, a large part of the BitShares blockchain has already been defined including the transaction types.   I have even generated and validated 5 blocks to prove the basic behavior as a crypto-currency with dividends.  You can view my debug block-explorer output: http://the-iland.net/static/chain.html for an example of how the numbers work.    Anyway, just showing you that we have a plan and will be systematically rolling it out as time permits.   AnonyMint,    You are clearly investing a lot of time into this thread and attempting to understand how things are expected to work and where we might have missed something.   Recognizing that I have been wrong before and paid people to show me where I am wrong I can appreciate your efforts.   I argued long and hard in the Master Coin thread about why their similar escrow system for creating 'GoldCoin' was fundamentally flawed and it took a long time to find the magic example / explanation that finally got him to see his flaws.   We are in a similar situation here.      I am betting the farm on my way of thinking and have been thinking through it for months.  So you will have a very up hill battle and will need to find the magic insight that can undo all of my previous thinking.   If you can do that it would be greatly appreciated because above all in life I seek knowledge and truth.        If I am wrong then it means I hold two contradictory beliefs to be true at the same time.  Convincing me of that will depend upon arguing via reason from the truths I already accept and demonstrating the contradiction.   Ie: never argue with a Christian by quoting the Koran.  Never argue with an Atheist by quoting the Bible.   An atheist can quote the bible 'as true' when attempting to demonstrate contradictions to a Christian.    The point of this is that I can be convinced, want to be convinced, but have very high standards of reason.    So here is the problem, your arguments are based on assumptions that I reject combined with appeals to authorities I do not respect.  You will have to adjust your strategy if you want this to be productive.   So we can start with assumptions I reject based upon my current understanding of austrian economics:   1) markets can be modeled by math.   2) saving / hoarding is harmful in any situation    3) dividends / pooling is 'socialistic' and inherently bad.   4) fixing the dividend / mining ratio  Here are the tests I use to determine 'bad' socialism:   1) is there any coercion    2) are the risks divorced from the rewardsBy your view, all forms of insurance are 'socialist' because people are pooling their money and then redistributing it disproportionally.   I am generally against insurance myself, but only because most conventional insurance is so regulated by the government that the risk/reward payoff for me doesn't line up in most instances.   Based upon this perspective, my opinion on economics is guided by both Austrian theory and Non-Aggression principle and any position that would violate one or the other I default to non-aggression trumping economics and attempt to find the flaw with my economic theory.You could say that my founding axiom from which I derive and evaluate all of my thinking is, "don't do unto others what you don't want them doing to you".   From this my entire world view flows and I attempt to resolve all conflicts.Back to topic:I interpret this point as being logically equivalent to price fixing.  If you 'fix prices' then you are deciding for the market and the consequences are obvious.   I fully accept and attempt to avoid price fixing when ever possible with the following design points that still bug me:1) price fixing 5% fee for margin calls2) fixing 1 year of history 3) fixing initial margin and maintenance margin requirements.However, if you take a view that this system is not the 'entire market' and that it will be competing against LiteShares, FeatherShares, etc then market forces still apply and one chain is competing on price and features with all others then there is still a corrective market force / knowledge at work.   For example, the miners of a coin could agree to change the fee to 1% or reduce the margin requirements in order to compete with an alt-share.   An alt-share could also adjust the dividend / mining split based upon some other rationale.  In the end I am not deciding anything for the market, i am introducing one product that will compete with all others.  Simplicity is also a product that is highly valued (ie: Apple) so any alt-share that increases trust requirements or adds complexity to achieve an economic ideal may actually destroy value derived from simplicity. I have stated constantly that grandma does not get a 'no-risk' positive return.   The BitUSD price will fluctuate +/- 5% and the effective dividend rate will also fluctuate with the result being that if she enters/leaves at the wrong time and doesn't hold long enough her expected ROI may be more or less than what she was expecting.   Granted the risk is minimal and within relatively safe min/max gains/losses.   The fact of the matter is her value is ultimately backed by a crypto-currency and that is a risk in and of itself. There for 'no-risk' must be qualified as, "assuming you have 100% faith in the crypto-currency and market pegging".  Now that I have debunked your 'no-risk', zero-knowledge, basis, I think the foundation of your argument against dividends is gone.      Sam keeps his BitUSD until he wants to sell it.Bank of Dan will cover her position by buying from someone else (anyone looking to sell) No, the margin call on Pam only results in Dan accepting the lowest ask in the market on her behalf.   If there is no ask in the market, then an bid is placed at the full collateral amount. If I didn't have so much other work to be doing I would gladly debate the economics with you, unfortunately I will have to defer that to Mises and other austrian bloggers and researchers.   Sam buys it from Pam as an even trade.Initially the bank owns the BitUSD... it then lends it out (like bank notes) and ultimately Sam will own the BitUSD until he sells it to someone else.  Ultimately someone will use it to pay off a loan and return to the bank.It BitUSD is an IOU from the Bank backed by the Bank's stock.When the bank makes a margin call, it accepts the lowest Ask for BitUSD on the market... Sam is given the opportunity to sell above market value.   Of course there are many players here and all BitUSD is fungible so it may not affect Sam at all.  Some other seller of BitUSD will provide the BitUSD used to cover the margin call. This is why this system is launched last, no names are final for the first X months of the system (all open to bid).X doesn't need to be too long.Lastly, I still believe that the currency would appreciate far more than any names you squat on.   Someone might attempt to buy Apple... but with enough publicity and enough time to distribute coins to enough people (through mining) to create a healthy market and no one would be able to buy apple because there would be dozens of people speculating on the value of Apple vs the BitDNS coin... you would probably end up paying a large number of BitDNS shares for the Apple name.   Those BitDNS shares may only be worth $100 at the time you bought the name, but they would represent a large percent of the BitDNS money supply.   If BitDNS market cap reached 1 Billion, then in the end, chances are that you over-paid for Apple. I had it right at first, then 'fixed' it wrong.   Is it a good sign that you only had a math error to point out? BitShares with BitBTC would be a trust-free, 0 fee, interest paying bank for BTC.   I doubt your bank would have much market appeal against this competition.  It really depends.  There is profit to be made by bidding up names and playing the game of price-is-right.   Of course the names will only be cheap while the currency is cheap, so the question remains which will appreciate more, the names you picked or the currency you gave up to acquire those names.    Sure, some people may try to squat, they will lose money, and in the end people will learn and squatting will not continue. I would gladly attempt to explain it again, but I will do so by way of an analogy that takes the blockchain out of the picture and replaces it with trusted 3rd party.Assume  1 BTS == 1 USD on the market as the initial condition.Sam wants to buy 1 BitUSDPam wants to short 1 BitUSDNeither Sam nor Pam currently own any BitUSD because BitUSD is issued by Bank of Dan. Before Pam can sell BitUSD she must borrow it from Dan.  Dan doesn't trust Pam one bit so requires 2x the collateral to be held in escrow.  Pam agrees and gives Dan  2 BTS and Dan lends Pam 1 BitUSD.  Pam then Sells the 1 BitUSD to Sam for 1 BTS.   At some point in the future Pam has to pay off her loan from Dan and to do so she must buy 1 BitUSD on the market.  There are two outcomes:1) 1 BTS == 2 USD,  Pam is able to buy 1 BitUSD for 0.5 BTS on the open market, then go to the bank pay off her loan and free her 2 BTS collateral.  In this case Pam ends up with a profit of .5 BTS for a 50% gain.2) 1 BTS == 0.67 USD,  in this event Dan starts to get concerned that Pam will run out of margin so exercises his right to cover the loan with the collateral.   Dan enters the market and buys 1 BitUSD for 1.5 BTS and then gives Pam the change of 0.5 BTS minus a margin call fee.At the start and end of the day all BitUSD is owned by the Bank.BTS can be thought of as shares in the bank.  Dividends as profits from operating the bank.  The only thing required for this to function is a way to enable the block chain to enforce margin calls that cannot be manipulated.   You obviously would never pass the Kobayashi Maru.    First of all, I do not know where you get the idea that I am using a price feed because that violates core economic axioms such as:1) historical trades are meaningless for algorithmic purposes are can be arbitrarilly manipulated by trades to self.2) only trades at prices agreed to by both parties are valid... no feed prices 3) prices cannot be calculated and math operations are invalid on prices4) this system must be decentralized and trust-less, thus there is no point where any trusted oracle is used.1) trades that have been signed but not entered in the block chain are about as valid as a bitcoin transaction that has been signed but not entered of course you must wait to have it confirmed by 6 blocks.1a) it is not possible to reverse trades that are confirmed in the block-chain1b) violates economic axioms on price calculation being invalid The block chain will not work for instant trades, and of course if you place your 'order' in the chain, then it will be matched by a miner and instantly confirmed.   Agree to a price, both parties sign, broadcast, wait, spend your funds after 6 confirmation.  If the other party cancels the trade by double-spending then trade with some one else or use the on-chain orderbook.   Legal issues will always be a problem when we live under a corrupt system.  We could follow the law and it could be changed or reinterpreted.   The truth is we live in a lawless society where no one knows or can even agree on what the law is, it is selectively enforced, and entirely detached from morality.   This makes the 'law' irrelevant if someone in power considers you a threat.  The only defense against corrupt enforcement of the law is publicity and providing a good to society that is so in demand that the government is unable to outlaw it.  The true purpose of our company is as a free market solution to fighting the most common crimes in our society:  identity theft and fraud in the financial industry.  You cannot overcome government by 'fighting the government' because they can always claim the 'moral high ground' of fighting crime and 'protecting people' from 'money laundering' and ponzie schemes.     Well, we are claiming that high-ground first.   If they want to fight us, they are going to have to claim that our efforts to fight identity theft and financial fraud are a bad thing.  That grandma doesn't deserve a safe ROI on her savings, and that people should not have free and easy to use secure communication software.  So our goal is to provide people the services they expect from their government, but do it without shoving a gun in their face.   So people expect the government to regulate the financial markets to prevent fraud and abuse.  To insure deposits at banks.  To provide counterfeit resistant identities.  To provide postal service.   We will provide those same services and do a better job in an entirely transparent manner.If governments want to claim the high ground, they will have to start actually doing the job they sell themselves as doing because they will look very foolish attacking us we will achieve what they have failed to do... regulate financial markets and secure identities.     Besides, wall street will be able to make a killing with this system so they will probably not push for it to be outlawed entirely nor for us to be put in jail.  It is all a public relations game.    If I write software and never run it, did I issue any coins? InvictusOut of the night that covers me,Black as the Pit from pole to pole,I thank whatever gods may beFor my unconquerable soul.In the fell clutch of circumstanceI have not winced nor cried aloud.Under the bludgeonings of chanceMy head is bloody, but unbowed.Beyond this place of wrath and tearsLooms but the Horror of the shade,And yet the menace of the yearsFinds, and shall find, me unafraid.It matters not how strait the gate,How charged with punishments the scroll.I am the master of my fate:I am the captain of my soul. William Ernest Henley We are merely publishing open source software that happens to create a crypto-currency that is mined into existence with 0 pre-mining.  This, in theory, is protected as free speech and does not constitute issuing a currency.  The last page or so of the white paper addresses our personal assessment of the legal standing of BitAssets.  1) They are not financial instruments in the legal sense because there is no contract or liability.2) There are no contracts in the legal sense between any two parties.3) Our company could disappear and this system would continue to function.4) We will not be engaging in money transmission, but will be partnering with those who are.5) Our company is not an exchange and does not act as an intermediary between customers. Great, I love competition it results in better products for everyone. Lets resolve the claimed socialist nature of dividends in my systems once and for all:1) Suppose I create a new email service at the and decide to start selling ${name}@bytemaster.com  2) Who initially owns   ${*}@bytemaster.com?   Me.3) At what price should I sell the names to maximize my profit?  At what ever price the market will bear. 4) How do I figure that out?  I auction it publicly, not privately.  5) Would you suggest that it is socialist for me to do that?  Would you suggest I set a fixed price first come first serve?   Why, fairness and other 'socialist' reasons? Would it make me more money?Now who owns the ${*}@blockchain?  Why, those who hold the currency and who mined it.  Who should profit from every name sold?  Those who own the currency.  How much should they get?  Proportional to their investment in mining / acquiring the shares.    On what basis should it be any different?   Only socialist 'entitlement' to cheap names and resistance to markets which are replaced by 'first-in-line', 'shortages', etc.   So while you claim my approach is socialist, what exactly is yours?In case you haven't caught on to the real innovation here, it is the creation of decentralized ownership of decentralized, for-profit, businesses.   Names & Exchanges are just two such examples of what is possible.
AnonyMint... wow you have written a lot and it is very clear that communicating the mechanics of this system is like trying to explain the mechanics and economics of Bitcoin 5 years ago.   It is made all the more difficult due to wide spread economic ignorance which means even those most literate among us often have some of the subtitles of economics polluted by the economic propaganda and fallacies pushed upon us by government paid 'economists'. I am not calling you economically ignorant, only that there is a whiff of keyensian economics to your arguments and I have as strong detector for that.    Economics is another one of those areas that quickly turn into holy wars without sound deductive, praxeological arguments.   I will respond with my position once, but would like to avoid turning this into an economic debate.  While I enjoy the debate, I need to spend time coding and the debate on these issues has already been through addressed by Mises, Rockwell, and others.First Principles:1) There is no such thing as idle 'money' or 'unproductive money'.  At all times money is always sitting in someone's account.  It represents a future claim on resources, and abstaining from making a claim is better than trying and failing.2) At any point in time there is a fixed set of resources in the economy and they all belong to someone.3) Two people swapping resources does not change the size of the pie or health of the economy from the perspective of anyone else simply because they swapped.  Only those two individuals can perceive a gain from the trade as they each have something they value more than they had before.  In other words, money is always held by hoarders and changing the current hoarder is neutral on its own.4) only action can create or destroy value in the economy as a whole. 5) Ignore the money and labels, there are only two things that any action can result in:       - using inputs to create outputs of greater value (production)       - using inputs to create outputs of lesser or no value (consumption)5) Hoarding money is choosing not to consume resources.  It drives prices down (deflation) which encourages more 'hoarding of money' in a positive cycle that drives prices down until someone sees something they can trade their money for that will increase the value (production) or meet their pressing needs (consumption).   Either way, the hoarders of money benefit both the production of goods by freeing up real capital (not money) for productive purposes and consumption of others by reducing prices through reduced demand and increased production due to investment in capital such as factories.Based upon these principles I reject any argument on its face that claims hoarding and saving is bad.  Anyone who is willing to produce value today in exchange for money, and then not consume any resources for 10 years, is providing a huge loan to all of society and interest on that loan is paid via the resulting deflation.    The really easy 'proof' of the fallacy in your argument is to define 'excess savings' in a meaningful way.  How can I tell that there are excess savings?  If it exists, what free-market options are there to solve it?   Ultimately the answer is always, "tax", "inflate", or "subsidize" and all of these are a violation of non-violent, decentralized principles.  Dividends are a non-negotiable part of the system.  We consider a desire to hoard our currency a huge success because it means we are creating a product people want to own.  The market will then decide our fate.    I will address your other points in a bit. Guys.... please delete your posts on the language debate, they detract from the thread and can be discussed in a PM or separate thread if you want it public.     Your 'socialism-leaning' detector is indeed very sensitive and I highly respect that.  I always aim to eliminate socialist principles where some people subsidize others and receive un-earned benefits at the expense of others who have un-earned losses.  So, I am going to not take offense at your comment implying a socialism-leaning slant because in my book that is like saying I have a whiff (not too strong) of wife-beating, anti-semantic, racist, commie slant.   I will instead redirect your (whiff of an ad hominem) attack on the designers (me) of this proposal to the proposal itself as you will never find anyone more committed to economic principles than me.  Given that I am not perfect, I would like to explore the dividend and asset pooling as a form of socialism and eliminate anything that smells of it.From what I can see the whiff of socialism is highlighted with these two simple trades:Alice & Bob are paired short / long   at    1 BTS to 1 BitUSDtime passes... price changes... Adam & Joe then pair short / long  at  1.1 BTS to 1 BitUSDBoth longs end up receiving the same dividends.  With Joe getting the short end of the stick because instead of getting dividends from 2.2 BTS he only gets dividends from 2.1 BTS... mean while Bob saw his dividend rate go up as a result of Adam and Joe's trade.   Taken in isolation this looks like a redistribution of wealth in a socialist manner, but failure to do this would result in non-fungible assets.   The key being that not all BitUSD is traded short/long, but some people can just sell BitUSD for BitShares without creating a new short position.  This fungibility, divisibility, and merge-ability is a very important aspect of an asset that is being traded. There is another way of looking at this same deal between Alice, Bob, Adam and Joe.    The price of BitUSD went up and therefore the dividends earned need to adjust to keep a the same relative rate of return.    I also assume that people are constantly rolling over their positions and therefore the average 'margin' should never deviate much from from 1.9 to 2.1 except in extreme volatility.   Instead of viewing it as 2 parties, view this system as 3 parties and I think the socialism smell disappears.  The third party is the exchange itself, which absent a block chain, would be a trusted 3rd party.  The exchange is the one providing the brokerage service that enables Adam to 'borrow' BitUSD to sell to Joe.   The exchange charges Adam a fee to borrow BitUSD, the dividends on his collateral.  This is a simple market transaction and not socialist at all.   On the other side coin is Joe.  Joe is simply an owner if BitUSD which is issued by the exchange at a variable interest rate.   Joe and Adam are both trading in the exchanges asset.  One is paying interest to borrow it, the other is receiving 'interest' to lend it.   The interest rate is determined by how well capitalized the exchange is.  Thus no socialism at all.    I would love to hear what you have to offer in this area.  Domain squatting is a creature of price fixing combined with first-come, first-serve awarding of names.   The goal is to maximize the economic utility of each unique piece of real estate.  In my approach, imagine all available names as being real-estate in the New World.  No one knows which acres have gold, oil, or nice views until they can be explored.   It is absolutely ridiculous to create a system where all lots are the same price and then sell them all to the first person in line.    To solve this problem I have created a name crypto-currency that acts as 'stock' in all names and owners of this stock make a profit anytime a name is sold.  To ensure proper price discovery names are auctioned.   The result is that the most profitably way to 'squat' is to own the crypto-currency because it sees almost all of the profits from every name actually sold and no need to tie up capital in names speculatively.  It puts everyone on a equal playing field in the domain squatting game because whether you have $100 or $1M to invest, you can get the same rate of return by investing in 'unclaimed' names via owning 'stock' in the crypto-currency.My motivations are always economic and never about 'social justice' or redistribution for 'feel good' or 'nanny' reasons. The goal is efficient allocation of resources and profit while avoiding socialist concepts of 'fair prices', price fixing, and other economic policies.   THe result is a better system that can compete on the market, not 'nanny developers'. Guys, language choice is a holy war and not productive debate for this thread.    All I will say on the subject is that making asynchronous applications easy to read and develop is hard.  Designing software that can handle the number of async connections, encryption demands, database demands, and memory demands of a block-chain that is running at full capacity (1 MB of trx every 5 minutes) with the ambitious goal of operating in the background as an always-on app like your email client means that picking a language with a lot of overhead would be enough to push us over the threshold that is ambitious to achieve even with optimized with C++.  Fact of the matter is, native C++ apps with Qt provide a better user experience than apps built with a host of other languages where your cross-platform support is limited by the availability of a runtime environment.   Runtime environments represent a source of bugs and security holes that are unacceptable for this application.     Even if you assume all of these things are a wash, as the primary developer C++ is the only option for the core code because I can write the best code in C++.    THe core components can be compiled into a library and then provide bindings to any language.  If you think that Scala is so much faster to develop in, then you should be able to catch up to the work I have done in the past 6 weeks within a couple of weeks.   I would gladly work with you to define an open over-the-wire spec and if you really can get the kind of improvements you are talking about and can catch up then that would be great.  In my experience though, those types of gains are mostly on paper. Yes, and they are divisible and have all of the properties of Bitcoin.Yes, Options also work this way.Aside from margin calls, positions can only be closed by finding a buyer and trading out of your position.  Fortunately the market is liquid and all BitUSD is fungible.When a short 'covers' their position they do so by BUYING the BitAsset on the market using the collateral.  Thus some owner of BitUSD is now the proud owner of the some of the Bitshares held as collateral based upon the price. Any left-over collateral is returned to the owner of the short position.First of all, BitUSD is composed of 1000's of positions entered at different prices by different people.  The price would have to fall 50% in 5 minutes and even then there are no losses because the collateral would still be able to purchase the BitUSD at market price.   Obviously the short positions would be entirely wiped out in such a rapid movement in price as they are forced to buy as much BitUSD as their collateral will allow and bid up the price in a short squeeze.  Worst case outcome is that some people will end up with BitUSD with no backing at all and thus 0 interest.   Fortunately, new BitUSD is always being created as new shorts / longs enter the game and the new BitUSD would be fungible with the old so only someone attempting to sell BitUSD in a very narrow window may face a discount to face value.  Because market forces always push the price back toward parity, speculators would readily buy up BitUSD at a slight discount created during such an insane price move.   There is no reason to ever have expiration on longs (see above).A miner could exclude a new bid or ask in the most recent block, but would be unable to do anything about limit orders placed in prior blocks that were not filled.  The miner will always have a slight advantage in picking which bids get into the block chain and thus how the price moves in the 5 minute window of the block they win.   But in a given 1 hour window, there will be 12 different miners who win and they will have different goals with respect to which way they want the price to 'move' based upon their individual position (short or long).    The reality is that the offers placed on the block chain are generally spread in a collar around the current bid ask and therefore the order book will be full on both sides of the trade at the start of mining.  No single block would be able to budge that order book by more than the 'new bids/asks'.    So margin calls will be based upon a wider bid/ask spread than the 'real-time market'.  Most people who care about price fluctuation in time periods of less than 1 hour should be trading on an Open Transactions exchange that is funded with BitUSD / BitShares.    I suspect that the small market advantage garnered by generating a block would further motivate miners and ultimately help secure the network.   Of course, the reason why decentralizing the hashing algorithm is important is to keep a large percentage of the hash power in the hands of non-professional miners and thus limit the ability to control the market by any one actor. Any action that could be taken by a miner must wait for the 'chain reorg window' to pass.  Bitcoin currently uses 100 blocks before miners can 'spend' their rewards because during a re-org, decisions of the miners based upon then-current prices are no longer valid.   If I cancel my order and then a re-org occurs, a miner in the reorg may have executed my order prior to the cancel.     Obviously, re-orgs are a risk for any trade executed by a miner and those that care about having instant spends should use the off-chain system to exchange and sign an atomic transaction that could survive a re-org.   This is another example where the only bids/asks that will end up in the block chain are the 'open orders' / backlog that will only be executed if the price moves significantly (1% or so) in one direction or another.  We want the minimal security required to prevent chain forgeries and ensure things are decentralized.  You don't go around paying for the MAXIMUM security for your house because after a while additional security has a marginal ROI.  Dividends provide the following benefits that ultimately improve security of the network:1) then encourage saving and value accumulation within the chain.2) they create an incentive to bring the unwashed, greedy, masses such as Grandma, into the system because they can get a better ROI than their bank with a better risk profile.  3) having a relatively secure way to generate passive income will help make this go viral4) increased adoption means more small time users, each of which can profitably mine with their CPU, and thus there will be more hash power in the network.Thanks for all of your feedback, it is nice to see some deep conceptual thinkers picking through the paper and design.!   There is never any reason to call margin on the long.  The long isn't in 'debt' and the result of the price move is to increase the margin of the short.  As a result Longs only ever voluntarily sell. Yeah, thats the problem with digital communications things said out of frustration have a way of haunting you long after they would have otherwise been forgotten.  Unfortunately, the context is often forgotten as well.If you have a suggestion for parameters to Scrypt that you think would achieve the goal I am open to it.  After all, I am not tied to any particular algorithm just the goal of decentralization.Depends upon how the algorithm is changed every couple of years.   Obviously current hash power would have to 'vote' to move to new a hashing technique.  BitMessage & Namecoin are great proof of concepts.  Yes, they are solving the problem in similar way.   We think we can offer a better user experience with better scalability.  If BitShares fall in value relative to BitUSD then those who are short will face a margin call where they are forced to accept the lowest ask.Example:Initial Condition:Sam:  1 BTSAlice:  1 BTS$1 USD = 1 BTSSam decides to short, alice goes long... Sam:   2 BTS held in blockchain-escrow backing 1 BitUSDAlice:   1 BitUSDTime passes.... $1 BitUSD = 1.5 BTSMiner forces Sam to accept lowest ask... 1.6 BTS per USDAlice (or someone she traded with) was the one asking 1.6 BTS / BitUSDResult:Sam:  .4 BTSAlice:  1.6 BTSOf course, all BitUSD is fungible and the miner could have just as easily covered the margin with a new short position... in which case the result would be:Sam: .4 BTSNewShortOwner:   3.2 BTS held in block-chain escrow backing $1 BitUSDNotice... the price as a result of the margin call went above market value (1.5) to 1.6... thus profit opportunity for new short.   Of course, rapid movements would result in a short squeeze which will bring in new capital.  Rather than prevent ASICS, I want to promote decentralization and if we can get decentralization with ASICS then I have no problem.Preventing squatters is just a side effect, I want to promote the highest economic allocation of business names.I have higher goals than DNS, but DNS is just one aspect of it. I am working with Ian to get us on ciyam because it looks very promising as a way to decentralize our development process an invite participation of the community.   By October there should be plenty of tasks for you on there. We certainly attempt to give credit to anyone who's ideas we leverage and build upon.    We did not go back and review all of the proposed names but as far as I know there is no current BitDNS or BitNames project and the names are rather obvious.   We have certainly given Namecoin, BitMessage, and Bitcoin ID credit for their inspirations.   We will not be running with any name in use by an existing project when we launch without the blessing of the existing owners.As for why we are not using Namecoin:1) Bandwidth requirements and storage requirements are too great for our 'account' system and it will not scale like we want for 1 billion accounts.2) Domain squatting has not been solved with Namecoin and namecoin violates some of our economic axims against price fixing.  We have solved the domain squatting issue for the most part.3) People don't want to 'pay' for a login name4) Tight integration will allow a better user experience.We haven't put together a full white paper for the designs of our DNS and Name system yet, but I have talked about the concepts in other threads on this forum.  I have just posted the latest algorithm for the proof of work that we will be reviewing closely.  Some notes:  - I reduced the memory requirement to 8 MB so that I could achieve the target of 0.25 sec / hash on a 2.3 Ghz Core i7 single thread.- The function has a unpredictable runtime which should choke many data-parallel systems like GPUs which must idle cores on branches. - It uses AES to randomly encrypt and re-encrypt random bytes spread across the buffer, you cannot determine ahead of time which bytes will be needed. - The inner part of the algorithm cannot be made parallel in any manner because every step depends upon the prior step in a cryptographically secure way.Code:pow_hash proof_of_work( const fc::sha256& seed, unsigned char* buffer ){   auto key = fc::sha256(seed);   auto iv  = fc::city_hash128((char*)&seed,sizeof(seed));   memset( buffer, 0, BUF_SIZE );   uint64_t* read_pos  = (uint64_t*)(buffer);   uint64_t* write_pos = (uint64_t*)(buffer+32);   fc::aes_encoder enc( key, iv );   for( uint32_t i = 0; i < BUF_SIZE / (BLOCK_SIZE/2); ++i )   {      uint64_t wrote = enc.encode( (char*)read_pos, BLOCK_SIZE, (char*)write_pos );       read_pos  =  (uint64_t*)( buffer + (write_pos[0]) % ( BUF_SIZE - BLOCK_SIZE ) );      if( write_pos[2] % 117 == 0 && i > 32 ) { i -= write_pos[3]%32; }      write_pos =  (uint64_t*)( buffer + (write_pos[1]) % ( BUF_SIZE - BLOCK_SIZE ) );   }   auto midstate =  fc::city_hash_crc_256( (char*)buffer, BUF_SIZE );    return fc::ripemd160::hash((char*)&midstate, sizeof(midstate) );}This code should be peer reviewed to check for security flaws.   Mining is interesting and all, but I really thought there would be much more discussion about the revolutionary nature of BitUSD and BitGold as well as options and shorts.    Virtual machines are still cache limited and incur extra overhead. As you can tell from this thread the mining algorithm is still under flux, but the goals are as you stated favor CPU over everything else.Based upon my most recent thoughts (pending experiments) here is what I expect:If the algorithm accesses the memory in random order that invalidates the CPU cache, then memory bus bandwidth will be the bottleneck.  After thinking about it, the memory bus is something that could be optimized out by an ASIC so this is not a desirable situation.The algorithm needs to be 'fast to validate' which also implies you do not want to be memory bus bound.The result is that I will probably target the hash memory requirements to near 8 MB (Core i7 CPU cache) which means that your best performance will probably be from single-core operation (multiple cores would start cache thrashing).  As Intel releases new chips with more cache you can start using more cores to positive effect.A GPU has several different memory classes (global, shared, and local) and the global memory is much slower (like CPU to RAM) than the shared or local memory which behave like CPU cache.  So an algorithm that will fit in cache on a CPU will result in cache thrashing on a GPU.   This cache-thrashing combined with an unpredictable fetch pattern means the GPU will be stalled waiting on data most of the time.    GPU shared and local cache sizes are under 1 MB.  Based upon transistor count, I would expect the highest end FPGA with 8 billion transistors (compared to 1 billion for an i7) to have a maximum gain of 8x assuming the ratio of transistors to execution units and cache was the same and there is no transistor count overhead or clock frequency disadvantages in the FPGA compared to an Intel ASIC.    By relying on Intel's AES instructions for 90% of the hash, you already have an almost ideal ASIC right in your computer.So to answer your question:  CPU cache and AES hardware instructions will determine mining performance in one case, and memory bus speeds in the other.  Note that the real protection against ASIC will be the community consensus and will to change the hashing algorithm to keep it CPU bound. The nice thing about the proof of work algorithm is that it is the easiest thing in the world to change.  Especially if both the code and the community is prepared to do so.   All of that said, I would rather not focus so much of this discussion on proof of work because that is the least significant aspect of our system. Three major challenges here:1) broadcasting of the transaction would in many cases be just as resource intensive as sending your original message in the first place.  2) even if you got the money back there would still be fees3) Creating dust ultimately means you will be spending these outputs (and paying higher fees) along with some of your other addresses and thus compromise your identity.I spent a long time trying to find a way to make the system 'for-pay' and not just 'burn' CPU cycles... but then I realized something critical:1) everyone needs to propagate other peoples messages to hide their own.  Therefore, everyone is already doing an even bandwidth barter to simply forward the messages along. Statistical analysis can detect leaches and cut them off.2) the proof of work should not be required as long as the bandwidth is below a fixed limit.   Just like bitcoin limits block production, bitmessage can limit bandwidth consumption on any given channel/stream.   With a fixed bandwidth stream and the ability to spawn new streams as necessary to balance load, the proof of work should only become a factor in times of congestion or when there is a need to compete with spam.   Of course, spam is just as good as real traffic for hiding in the crowd and as long as the channel/stream you are listening on is within spec for bandwidth usage, there is really no problem what-so-ever. Design Requirements of Proof-of-Work:1) Require a relatively large amount of RAM that cannot be 'optimized away' through various techniques such as:      - streaming the data, random sampling, or jump ahead short cuts.2) Must be able validate the proof-of-work in about 0.25 seconds, this would require several hours to verify the whole chain's work.3) Must rely on CPU instructions that have no equivalent on the GPU.The challenge with such a proof of work is keeping the validation time relatively fast and this is where the temptation to take short cuts comes to play.  It is trivial to create a 'secure' CPU-only hash, the challenge is making it fast to validate.    I submit the following revision to the proof of work as an example of what can be done in a brute force manner that should address every single item presented by gmaxwell. Code:pow_hash proof_of_work( const fc::sha256& iv, unsigned char* buffer_128m ){   auto key = fc::sha256(iv);   const uint64_t  s = MB128/sizeof(uint64_t);   uint64_t* buf = (uint64_t*)buffer_128m;   memset( buffer_128m, 0, MB128/2 );      fc::aes_encrypt( buffer_128m, MB128/2, (unsigned char*)&key, (unsigned char*)&iv,                    buffer_128m + MB128/2 );      uint64_t offset = buf[s-1] % ((MB128/2)-1024);   fc::sha512 new_key = fc::sha512::hash( (char*)(buffer_128m + offset + MB128/2), 1024 );                       fc::aes_encrypt( buffer_128m + MB128/2, MB128/2, (unsigned char*)&new_key,                                                    ((unsigned char*)&new_key) + 32,                    buffer_128m  );   auto midstate =  fc::city_hash_crc_256( (char*)buffer_128m, MB128 );    return fc::ripemd160::hash((char*)&midstate, sizeof(midstate) );}First, lets consider the input, sha256( merged_mining_merkel_root + nonce), this is as secure as double sha256(bitcoin header).  Next, we populate 64 MB of memory via AES encryption of 64 MB of 0's.    There is no way to jump-ahead with this random number generator and it utilizes Intel AES hardware acceleration.Next, we use the last encrypted uint64 to pick a random KB of the encrypted data to sha512 hash and generate a new initial value + key for a second round of AES.This second round of AES encrypts the results of the first round, which requires the whole first round to be kept in memory and also utilizes Intel AES hardware.Then we take a 256 bit digest using more CPU-only instructions via city_hash 256.Lastly we end the whole operation with a crypto-graphically secure hash to compress it down to 160 bits which given the requirements of the input is more than enough bits to prevent rainbow tables.I can mine this at 5 hz with 8 cores on a Macbook Pro Core i7.   This doesn't quite hit my design goal because on a single core it takes over 1 second to validate a single hash and thus validating the proof-of-work on 1 years worth of blockchain headers would take 24 hours.  So now the only question that remains is how can we accelerate this hash without compromising either the memory requirements or the security.    It is worth noting that even at 1 second per block validation time will be overwhelmingly in the transaction validation of the chain, not the proof of work (assuming a reasonable number of transactions).  That said, I would still like faster validation times.Options:1) Reduce the memory requirement, this will increase performance linearly while making ASICs more viable. 2) Only perform 'spot-checking' with the second round of aes encryption, this could provide a 25 to 33% gain3) Potentially replace AES with Salsa20... though AES enjoys a hardware advantage that Salsa20 would lack.Potential AttacksAn ASIC could implement a very fast AES algorithm, run through the first 64 MB to calculate the last 8 bytes, then calculate the a second time to find the key, then a 3rd and 4th time to generate the 2nd round and city hash.  Such an ASIC would probably take 4 times as long to run each hash, but would be freed from the memory constraint and could therefore do more hashes in parallel.     This attack could probably be mitigated by a few changes that would require the ASIC to run through everything 1000 times rather than just 4 times.   But ultimately, the only defense against ASIC is change they are like a virus that will mutate and adapt to any hash algorithm we create.   We just need to slow them down and reduce the magnitude of advantage they might see.Conclusion:The real goal of the hash algorithm is to control the block-production rate and keep verification decentralized while preventing 'forged blocks' from being created.  Every other criterion (ram, instruction, etc) are just means to an end not the end itself.  The only true security against ASICs is to change the hashing algorithm every year or so to something of roughly the same level of CPU difficulty.    In the mean time all that is required is a secure hashing algorithm that is GPU resistant.To that end, I suspect that reducing the RAM requirements down to 8 or 16 MB will enable validation times that are sufficiently fast while keeping GPUs at bay with a hashing algorithm that leverages SSE encryption instructions.  We are committed to delivering a working product and getting the best minds working with us that we can.    gmaxwell,   You have stumbled upon an area in our code base that was under active experimentation and the problems you identified with it actually pail in comparison to the problems we found with it prior to your post.  For starters, we were experimenting with various ways of accelerating the validation time and profiling different settings the inner loop.  The code that was checked in just happened to be the last benchmark for that round of testing before we put proof of work on the back burner until we could come back to it.     The random number generator that populated the whole thing was not secure and you could quickly calculate any index required.   We have identified the principles and design specs for our proof of work with the primary goal of making it memory hard.  Finding a collision on 128 bit hash function that takes this long to run and simultaneously satisfies all of the requirements for the block chain is not a legitimate concern given the time constraints and you rightly pointed out that it was theoretical.    Assuming a truly memory-hard hash function without the obvious weaknesses of the code you reviewed and assumed was our 'production' algorithm 128 bits should be plenty.  Now obviously, cryptographers like to error on the side of caution and we would be looking for community consensus / review of every cryptographically significant part of our code before ever launching it into the wild.  We are obviously trying to balance security-over-kill with decentralization and bandwidth.   Even with all of the faults of the test algorithm it is still no worse than Bitcoin because it ultimately relies on sha256().     So we have high goals, solid guiding principles of attempting to create a memory hard hash function, and the ultimate ace-in-the-hole to ensure the long-term viability is flexibility.   The 'currency contract' between the developers, users, and miners was to establish the common intention that at any time if the hash function was optimized for GPU or ASIC it could and would be changed by a majority vote (hash power).   The CPU holders would have too much to lose not to vote for a change that undermined the ASICs and there mere threat of this option would prevent the production of ASICs in the first place.     What I gather from your post is that we shouldn't attempt innovate and we should conform to the status quo.   The real question is this:  is it possible to develop an algorithm that is both secure, requires 128 MB of ram, and yet can be validated in a fraction of a second?    I believe the answer to that question is *yes* it is possible and therefore it can be achieved.   There are two kinds of people in this world, those with a can-do attitude and those who go around telling everyone that it is impossible for man to fly.            One last factor as to why your merged mining suggestion is horribly flawed is because it means that the existing Bitcoin Miner Barons would 'own' the network from day one, especially if we supported merged mining with bitcoin and bloated our blockchain in the process.   This is not in the best interest of anyone but the Miner Barons.     There is a reason why everything is open source, because with enough eyes on the problem it will get solved.  The true value of our system is not the hash-function.  We are just trying to make things better while launching a new chain where the true value is the economic transactions it can enable. Dan        
He was referring to the age of the thread, not the post.  I was confused by that myself.  The BitShare ID & Communication framework will work with bitcoin to make it easier to use and eliminate the need for bitcoin addresses.   So this is more than just a crypto-currency, the blockchain / crypto currency is just one aspect of Project Quixote  Colored coins have no value beyond the bitcoin backing them without an issuer using the colored coin as a bearer bond.    BitShares has no issuers, BitUSD is not a promise to pay.  Colored coins cannot do this.Secondly, the Bitcoin blockchain is fatally flawed in several ways:1) full nodes will soon be beyond the reach of the average user who cares about having spare bandwidth and disk space.2) mining is being specialized by extremely wealthy VC firms which are building ASICs for their own use and ultimately the 'decentralization of mining' depends upon pools of one form or the other. Pools are 'centralized' and the hardware required to even participate in a pool is also specialized.   3) colored coins do no enable 'margin calls' in a decentralized manner.   Ultimately colored coins are not decentralized any more than Open Transactions which is far more effecient.4) the bitcoin block chain does not have a reliable block production rate, it is currently over 55 days ahead of schedule and thus fundamentally broken from an inflation control perspective and thus not a reliable time source for options expiration.5) the transaction size and bandwidth requirements of bitcoin are larger than necessary6) bitcoin does not support merged mining7) cross-chain-trading with bitcoin is not currently supported as a 'standard transaction'  bitcoin can not handle the transaction volume of an exchange9) there will be more than 1 BitShares chain to enable scalability and offer a wide variety of BitAssets each with a decentralized market.10) I need data maintained with every block header beyond the data stored in transactions.I could go on, but I think I have made my point.   Please demonstrate how you can achieve everything BitShares does with colored coins and you will quickly understand the problems.  C++, Qt, Boost, Java Script, PHP, Browser Extensions, CSS, HTML5Our team currently has a part-time drupal developer handling the web work.   We are hoping to leverage the work that Joe Cascio has done with Bitcoin ID as the model / template for our implementation.  He already has a proof-of-concept chrome extension.Send me a PM with your contact information if you have skills that could help.While there are some paid positions at the moment, there is amble opportunity to get involved via open source contributions.  We are likely to pull from the pool of volunteers before hiring outsiders as we grow so get involved.Our company is based on very deep philosophical foundation of freedom, voluntary association, and the principle that the free market should be able to provide all of the services traditionally "provided" by governments without relying on the initiation of force.   Our IP philosophy is relative unique in that we view Intellectual Property as a government granted privilege backed by force and that violates the rights of others to produce and express themselves.  We are committed to only use Intellectual Property as 'self defense' against those who would attempt to claim they 'own' IP and may exclude us from the market.  Thus if you Live by IP.... well you know the rest.   Our profit model is not based upon vendor lock-in nor do we intend on relying on licensing IP.   To compete with our business you must be equally as open and decentralized.   In fact, our goal is to keep Invictus Innovations as decentralized as possible because corporations are themselves creatures of the state and represent yet another form of centralization and control that we hope to decentralize.Joining our team with BitShares is just the beginning of what we have planned because by the time we are done you will no longer have to rely on the government to defend your life, liberty, and property.... This software will be released in phases testing the less critical aspects throughly with a large user base of 'Bit Message' and 'BitShares ID' users who can use it for communication without really risking much financial value.   The goal is to have the Test Network up by Thanksgiving and hopefully launch the live network as soon as we can go a month without any major new bugs showing up.    The blockchain should support short/long, options, and cross-chain trading, multi-sig, and simple escrow at launch, though full support for the escrow system will be built out over coming year.   While the block chain will be ready and usable with an RPC / command line interface, the GUI will take longer to mature.   Our schedule is highly dependent upon finding good developers and testers!  I don't know how i would ever get anything done hanging out in an IRC channel all day.     We have our web developer actively working to setup forums dedicated to this project and until then this thread will be the one were conversation on this topic will be focused. Thanks Danny.     You did a great job explaining the concept in readily understandable terms. It's open sourse.  Hopefully someone will add it I think you are still revealing the meta info in the emails to enable your routing and dependent on Dns.  You still need a decentralized name registration system.  We have three developers and are hiring.    It is a real challenge to recruit a team in a 6 weeks even for an established company.  Most of the directors are unpaid or strategic partners and investors.  I am both the inventor primary developer and director.   This project would be nowhere without the work Charles has done to build partnerships or the funding Li has brought to the table.   Stan and Pam have handled the enormous amount of leg work to setup an maintain the day to day operations of the company.  We have a very well-rounded team. Note that this is bigger than just an open source project.  That would be an amazing help for the cause!    If we can get a clear, easily understood, explanation of the mechanics of the trading algorithm, collateral, dividends, and margin calls then we would be in a much better position to offer a bounty for anyone who can 'break' the economics of our market-peg system.    If you would like to help out I would suggest taking a stab at explaining it all yourself.   I am available to talk you through anything that isn't 100% clear from the white paper and hopefully you can improve on teaching it!  Send me a PM for skype info.  Last page of the white paper!  I have to hand it to Danny, he did a fairly good job understanding a lot of information and condensed it down into a manageable length article.  But it is like a game of telephone paired with lossy compression.   I don't blame him.The code has been open and on github from day 1.  https://github.com/InvictusInnovations/BitSharesThough it is not ready for consumption by anyone other than our dev. team or those looking to be very involved.   We are still filling in the core components, but it is coming together very rapidly.    CoinDesk has recently published an article on what Charles and I are doing with Invictus Innovations & BitShares.   http://www.coindesk.com/bitshares-p2p-trading-platform-to-offer-dividends-on-bitcoins/update: http://letstalkbitcoin.com/own-your-identity-with-bitshares/I wanted to open this thread to discuss the article and to correct some of the things Danny Bradbury got wrong in the article, though overall it was relatively accurate for a journalist covering complex topics.Mentioned in the article, project Hydra (aka Quixote) aims to combine the best ideas we can find into a single, easy-to-use product.  This product aims to decentralize Identity Management, Communication, and the Financial System.   If you have been following all of my posts you will have seen aspects of this discussed earlier.    So what does this final product look like?You will be able to 'mine' a human friendly account name of your choice (provided it is globally unique) and then use this name to send secure 'emails', 'text messages', chatrooms, forums and other communications using a system modeled on BitMessage.   Among the messages that will be exchanged are off-chain bids/asks and options negotiations along with invoices and purchase orders.   The article implied you have to pay for this name with BitShares, you do not.  It merely requires about one hour of CPU time per year. This will all be integrated into the same client with BitShares where you will be able to manage your dividend paying BitAssets.  Unlike Bitcoin, BitShares users will never have to see a 'bitshare address' or deal with such clumsy technical details.  Instead users will simply enter the BitName of the person they want to send money to.    To further enhance security Hierarchical Deterministic Wallets are used to ensure that the same 'address' is never used more than once and that 'addresses' are never linked together via single transaction in the block chain in such a way that would compromise your identity through network analysis.  We are working to integrate BitNames with a Chrome Extension to allow one click login to compatible websites.     BitDNS will come a later and will offer high-value, paid-for, names at auction using a system designed to prevent squatters.  The combination of BitNames & BitDNS means we can eliminate man-in-the-middle between websites and their users due to compromised Certificate Authorities.    Our aim is to promote the protocol with the W3C web payments group as an alternative to Open-ID and other proposals that ultimately rely on a central authority (your email provider) and have a broken certificate system.Just to clarify:  Everything will be open source and has been.   There will be no pre-mining.  We are developing this as quickly as possible, and would welcome help/feedback from the community.  As you can probably tell we are still trying to name this thing with something that properly captures things.   Oh, and we are hiring. They most certainly tax your location... property taxes.   Most taxes are dependent upon your location ie: where you live. Clearly this isn't cut throat... is good that we are all barking up a similar tree, the market will then sort out the best.   It would be interesting to have a conference with everyone and see if we couldn't unify our efforts some, but I suppose NIH syndrome is very prevalent and we each have something slightly different that we are hanging on to.    To be fair, BitShares does implement a 'tax' for unspent outputs that are over 1 year old so that the chain can be pruned.   As long as you move your funds once per year there is no tax (aside from the transaction fee).  Though generally, dividends would outweigh this 'cost' and so it ultimately only serves to recycle value controlled by lost private keys over time. BitShares is free and open source from the beginning, why do you think its not?Yes, that is what I mean.  I was using 'tax' in the loosest sense of the word.  Demurrage is a faulty concept based upon faulty economics.Building on top of the bitcoin source for anything but the smallest of changes will inherit all of bitcoins problems and the ability to do merges will become increasingly difficult.   At the very least starting with a cleaner code base like libbitcoin would set you up with a better design.    This is really the 'windows' vs 'os x' approach to software.   Considering you are starting with Freicoin's system perhaps it makes sense to stick with it. Your proposal seems similar to BitShares in many ways with the following differences:1) you charge a tax, I pay a dividend. 2) your user currencies are effectively bearer bonds, I have no 'user currencies' but I also need no user currencies... though adding them may be an option.3) you are looking for donations, we have funding.4) you have some centralized servers which are an interesting concept.5) you are revamping bitcoin code... we are developing from scratch.It is interesting to note that your development costs / estimates are higher than mine for BitShares despite similar feature sets.Glad to see these ideas out there, but perhaps your development team would like to work for us on BitShares?  "With our powers combined!!".  Seriously, if you have talented C++ developers I would love an opportunity to talk with you about the potential for joining our team. It looks like the race is on between this, Master Coin, and BitShares... may the best technology win! Hope to see you all at http://www.cryptocurrencycon.com/ where Charles and I will be presenting on what we are doing and hopefully releasing our first beta product for the community to use. Perhaps you  should have made it a poll rather than just a discussion.I think Gox is running at least some what fractional reserves. 
How to enable betting without a trusted data feed or escrow agent.1) Pick a subject you are going to bet on that has a boolean output and enough interest for a reasonable market:  "X will be the next American idol".  In theory you don't even need that deep of a market as long as you can find a counter party. 2) Negotiate (off chain) a transaction that takes inputs from both parties and creates 2 outputs each containing the full amount that can be spent conditionally based upon the outcome of the event. 3) Once a position is taken it can be transferred / sold.4) Positions can be liquidated by settling up with someone of the opposite position.  So a winner & a loser must both sign the payout that closes the position.  Any winner can be paired with any looser for liquidation purposes.5) Ensure everyone settles up using Nash Equilibrium, ie: every bet requires the better to put up 3x the bet amount and they get 2x back when the settle.No scammer could profitably make bets and refuse to settle.  Ambiguous outcomes would force the market to adopt a fair payout ratio. And of course, there is some risk in waiting to settle because the last person to settle faces the risk of being matched against the crazies who would rather lose 3x than let someone else win 1x.    This will force rapid settlement once the outcome is clear with the losers who admit their defeat first lose less than those who hold on until the bitter end.  With this system there is no price fixing nor trusted parties nor even a requirement for a data feed.    This is something that I will eventually work into BitShares.    I am very confused by the motives of people on this thread, especially everyone throwing money into this development fund.  I would really like to understand what everyone likes about MasterCoin and why so much time & money is being thrown at it.  From the paper the goals are:   Fix Instability & Insecurity  - presumably this was supposed to be GoldCoin and other escrow-fund currencies that have had to be scrapped due to problems identified here.Financially Benefit all Bitcoin Users  - presumably through higher fees and demand for bitcoin as well as destruction of BTC and thus deflation.  Ignoring the financial cost of dust transactions.  This point is debatable.Self Fund   - this is not a justification for funding it that would be circular reasoning. Richly Reward Early Adopters  -  This would presumably be because of the value in Fixing Instability & Insecurity.   If it is because of the Self Funding or Financial Benefit to Bitcoin Users then it would be a ponzi scheme which I presume was not the intent.False Assumptions:Alternate block chains do not confuse the message... the community does not have a single message.Removing GoldCoin (and other user currencies... what remains?)1) Colored Coins backed by an issuer... already implemented elsewhere.2) data feeds published in the blockchain... might as well post them someplace else... I guess they are used for bets.3) Savings accounts which use time delay / spending restrictions... this has minimal value compared to alternatives (cold storage)4) Marking an address as compromised...  this has some value, but nothing revolutionary. 5) Posting bids/asks on the blockchain -  because all data feeds are from an oracle, these bids/asks are better off negotiated off chain and only include the atomic trade on chain after all signatures are acquired.  6) decentralized bets based upon built in data feeds... trusting the source of the feed.All of the above features are not worth a dime absent the broken escrow fund system.   Furthermore, if you are going to have a 'public issuer' then it is far more efficient to use Open Transactions for both trades, transfers, and savings.  After all you are relying on trust and the government not to shut down the issuer.All that is left is the decentralized betting system which is still trust-based and could also be managed using simple multi-sig transactions.Now given the lack of valuable features without GoldCoin the only reason to invest is simply because you believe dacoinminster can eventually solve all problems and deliver you something valuable.  Now... if dacoinminster was the only game in town then I could see investing with him, but I have far more robust and comprehensive solutions to everything dacoin has presented.  Any investment with dacoin is facing very stiff competition and it would be far better for both the investors and the community if everyone could put this same money toward the BitShares ecosystem.   So my question is this:  suppose I had an option to accept investment from the community for BitShares would there be any reason to put your money with dacoin vs BitShares?   Why would MasterCoin be more valuable than BitShares and on what grounds would it compete or have an advantage?  All of this assumes BitShares works and if you reason for not considering BitShares is because you don't think it can work then I have a bounty up and will pay you to show me how and why it will not work.    It's in my signature.  Yes, I have solved the price discovery issue which in an 'all voluntary market' is only critical for one thing, margin calls, which by their nature are not voluntary and yet hinge on accurate price discovery that can not be manipulated to artificially trigger calls.I never had an oracle, but am very aware of the need for honest price information and this is the single biggest area where people in this field need a deep understanding that goes far beyond surface level economics.  So let me attempt to address some of the critical insights that I have developed over the past several months working on BitShares full time.0) There is no such thing as a unit of value1) Prices cannot be added, subtracted, multiplied, or divided2) Value can only be compared relative to a single individual.  You can only sort your values, but not put a number on them.3) You cannot perform value comparisons between people except to the following:     - If we agree to trade, then I value what I receive more than what I gave up  and you value what you receive more than what you gave up.     - If we do not agree to trade, then I value what I have more that what you have4) As a result of 0-3, it follows that prices cannot be calculated at any time because prices are the result of value judgements and there is no means of performing mathematical operations on 'value'.   Prices do not define value, values cause prices.5) Prices are always historical data points, even microseconds after the trade.  6) A single trade-price can be arbitrarily manipulated in any market by placing a bid for $1M and an ask for $0.001 and matching against yourself at any arbitrary price point you so desire because you have the highest bids and lowest asks.7) You cannot solve #6 using averaging, median, statistical sampling, etc without violating rule #4.So given these rules how can I determine when to perform a margin call in a manner that cannot be manipulated?  The answer lies in one last corollary to rule #3.    The price at which trades DO NOT OCCUR(bid/ask spread) define the consensus of the ENTIRE market.  Half of the market thinks the item is worth less than the bid, the other half thinks it is worth more than the ask.   Until someone crosses the bridge and jumps from one side of the market to the other, you have a valid range that cannot be manipulated.   Anyone who posts a bid that is too high is immediately matched.  Anyone asking to little is immediately matched.   The price at which these matches occur is not relevant, the only thing that matters is the price at which trades do not occur.So, the BitShares blockchain will perform all matches that it can and when it has done so it will be left with a buy/sell spread.   If the bid is above the margin call price, then the margin is called and the collateral is forced to accept the current ask... causing a short squeeze!  So the question that remains is whether or not it is possible to manipulate the price at which trades do not occur?  The only attack vector available is to strategically choose which bids/asks you are mining but your attack window is very small, non-deterministic (you must find the block), and your potential to move the price in a reasonably deep market is less than makes a meaningful difference between whether your margin was called at 150% or 151% because the goal is for all actors to stay far enough above the margin call threshold that the exact price/time it is called is irrelevant.  In effect, the most you could do is deny 5 minutes worth of bids or 5 minutes worth of asks.It is because of this deep understanding of prices and economic rules that I knew MasterCoin was not viable and will not be viable.   Attempt to explain how violating them, even in subtle ways, ultimately leads to destruction is a challenge.   But these discussions are good practice and I get stronger with every post.Hope this helps everyone!  If there exists demand for BitGold then the price will be bid up based upon the current supply.  At some point the price is above market value and anyone could make money by shorting it.    BitGold has potential to go above market value in 2 ways:  1 as a result of a short squeeze & 2 due to higher demand for BitGold relative to the supply.     The theory is that if there is easy money to be made (price above parity) then someone will short it until it reaches parity.  No need for a *massive* short position, you can allow many people to take out short positions in the same currency and collectively they form the short position and are the 'creators'.If you have a problem with the margin-call, the least you can do is enlighten me to return the favor. It is more attractive because they get to double their gains as MC appreciates against GC.    Say 1 Oz of Gold is worth 100 MC.   Suppose Alice has 100 MC she could create 1 GC by selling it for 100 MC.   You now have an escrow fund with 200 MC (100 from buyer, 100 from seller) that is owned by Alice and 1 GC owned by Bob.    Alice is not allowed to spend the Escrow fund until she buys back the 1 GC.If GC goes down 50% (MC doubles in value) then Alice can buy back 1 GC for 50 MC and walk away with 150 MC, a profit of 50 MC.  These 50 MC are also worth 2x as much.As long as the network forces Alice to cover her position before 1 GC is worth 150 MC then Bob has nothing to fear and can be 100% certain the GC will always be worth 1 Gold Coin.   Say, why don't you allow the creator to sell GC provided they put as much value into the sale as they receive from the sale and then hold by the creator's funds and the buyer's funds in escrow.  The creator can get their funds back when then repurchase the GC and thus destroy it.   The creator profits if GC goes down relative to MC and can repurchase for less.  Right, but no one shorts BTC because no one lends BTC (at least not in quantity). I didn't think MasterCoin supported short sales...  Thanks d'aniel this explains the mechanism that will drive the under-backed GC toward the value of its backing in a very clear manner instead of my intuitive understanding of what the market forces would do.   We have dacoinminster now...   There is no reason to abandon GoldCoin priced at 50% with 50% backing (assuming you don't debase current holders to prop up the price)...  those who hold it need to sell at some point which means they must find a buyer and they will not find any new buyers willing to pay the old price for something only 50% backed.     So even assuming no one 'abandons it' the price will always equal   EscrowFund / # GC  when the value is below 100%  Don't worry... his post made no sense to me either.  If I own gold coins back by 50% escrow... my risk is the same as owning MC  because there is no reason for GC to be worth more than 50% escrow because to make such a bet is the same as betting the MC will double in value.   Thus, no profit for buying GC when I can just own MC until GC has 150% backing at which point I can see owning GC.   I suggest you rethink the market dynamics on how you will make a profit for the fund because it is not possible for you to increase the backing of the fund except by appreciation of MC vs GC.  Saying that traders would take the losses is like claiming that BTC traders absorb the cost of volatility.   I have already shown that GC will be just as volatile as MC when escrow is less than 100%.     You have not shown me how GC escrow fund grows back toward 100% absent any change in the value of MC.    Who eats the losses from the volatility and how are they compensated for their risk? *why* do I want to own gold coins except for immediate payment to someone else?    In the short term volatility of BTC doesn't matter and thus short-term ownership of GC doesn't count.     Why would I want to hold them long-term when they have 100% or less backing? No kidding!  I am exhausted trying to protect everyone from the economic problems with MasterCoin... and you are an expert evader of the tough questions. In effect, your system is different because it is pre-mined and you get paid to develop it.  Got it.    There exist some unspecified problems with the short/long model that I am willing to PAY YOU to identify and yet you opt to say nothing.    Obviously if there are problems then I want to know them so that they can be addressed. A more important question is this:What value are you proposing MasterCoin has over BitShares?   Lets compare by features:  - better hashing algorithm ( eliminate miner centralization )  - higher through put, lower overhead message block chain  - dividends  - options  - short positions  - better decentralization  - trust freeIf you all want to create the best product, I would highly suggest that you help to develop BitShares.  It is open source, has no pre-mining, and thus equal opportunity for everyone involved.    We could certainly use some additional development and support of people who at the very least see the value of creating GoldCoin/BitGold.   So far you have yet to produce a single argument against BitShares other than Not Invented Here.  No, I am saying your system is unworkable because there is no profit motive to buy GC at anywhere near 100% back or below and thus it wouldn't happen except by those who are not smart enough to properly judge the risk/reward profile of their investment choices.  Or you could use the BitShares approach and the owners of BitUSD have almost 100% guarantee that BitUSD will always be worth more than face value USD.   Those that accept the risk of volatility profit immensely. This isn't a question of risk for you, it is a matter of profit.You have two choices:   Own  100 MC  worth 1 Oz Gold      *or*     Own  2 GC  backed by 100 MC  (50% backing) and priced accordingly. Lets assume the value of MC goes up by 10xCase 1:  You have enough MC to buy  10 oz of Gold.Case 2:  Your GC may have enough premium to be worth 2.3 oz of Gold.Lets assume the value of MC goes down by to 1/10th its previous value.Case 1:  You have enough MC to buy 0.1 oz of GoldCase 2:  You own 2 GC with 5% backing and can trade them for 0.1 oz of Gold.So what profit motive to you have to buy GC at 50% backing over just owning MC?
You are missing something.... So now that we have identified the mechanics of your system... you need to certify the following:a) the escrow fund never acts to debase the backing by taking any action that would adjust the  Gold / Fund ratio below say 150%b) this means the price of GoldCoin will initially track the value of MC with any downside adjustment in price, but will not track it to the upside because those gains are being captured to fund your margin.c) this means that no one in the right mind would buy a one-way ticket to fund the system initially. d) this means that the long-term holders have their gain capped at the difference in value between a 100% backed IOU and a 150% backed IOU.  Who does the system transfer value from to cover the volatility losses?  What did they receive in exchange for accepting that risk?  From what I can tell, there is no reason to buy GoldCoin until after the margin is above 150% and every reason to sell it as soon as its value approaches 100% backing because there is no profit in holding it any more (only risk). The cheapest below target is going to be at or below  Fund / Owed...  which will thus represent the same risk profile as owning MC directly without any of the gains.  Price would move for its own sake, not because of your actions.  Price is driven by supply/demand for Gold IOU backed by 100+X% margin and the only thing your fund would be doing is maintaining the margin or decreasing it to some minimal level, say 150%.  You still have the initial condition to address.   Everyone initially agrees to buy GoldCoin and 'self insure' everyone else against temporary losses due to volatility with a baked in assumption that MC will go up relative to Gold.    Everyone also recognizes that this insurance only works as long as everyone continues to hold a balance and not withdraw their funds and who ever holds on the longest when the price goes down takes the largest loss.  In theory, as long as the fund never debased the escrow ratio and MC was intrinsically deflationary and growing in market demand then anyone who could 'hold on until the price recovery' would get their money back.   However, they could have held MC itself and had a better investment because they wouldn't be magnifying their losses by propping up (insuring someone else) and they would have an opportunity to profit from the gains in MC.   Effectively this system transfers losses from short-term volatility to those who are holding for long-term gains in MC value.  Those who are LONG MC would be better off holding MC than holding their value in GC which has almost 0 upside potential (only the premium from increased margin) and more than 100% of the long-term downside potential.  You must follow the money and always identify who is profiting and who is taking the loss and make sure that the profit == loss and thus a value transfer occurs.   Then ask yourself if the parties signed up for that particular transfer and what compensation did they receive for the risk they took? If the fund sells at the ask price of $1.2 then presumably it will not result in the price falling, but instead the MC Held / Value Owed ratio would be unchanged.  You are correct, the fund would never have an opportunity to act to push the price down because no one would bid it up until the margin was insane.  So your debasing algorithm could work assuming it never debased the fund below 150 to 200% margin.Unfortunately, to get there everyone had to bet right initially.   People would probably be willing to pay above market rates proportional to their demand for margin and thus GoldCoin will always trade at a premium to Gold when the escrow fund is above 150% and the algorithm will not debase beyond 150%.On the down side though, your algorithm cannot prop up the price because it will create a positive feedback loop devaluing GoldCoin to nothing by continually debasing it.This means that your system only offers down-side protection *after* it has already profited to the upside.  The initial buyers of GoldCoin have no such protection and would be better off not owning GoldCoin because they are exposed to losses but not gains in MC.   Is the fund really profiting by selling for $1.1 when the current ask price is $1.2?    Every other actor on the market believes a GC is worth $1.2 and yet the escrow fund is selling for $1.1....  when it does this value is neither created nor destroyed, only transferred.  It gets transferred from everyone who holds GoldCoin to the new owner.   In this case $0.1 is transferred and the average backing after the freshly printed GC is less than the average backing before and therefore even when selling for $1.1 the fund is de-capitalizing itself rather than capitalizing itself.   Profit or loss from the perspective of the fund must be measured in terms of   MC Held / Value Owed.   Show me once how your escrow agent is ever able to take an action that increases the MC Held / Value Owed?When someone wants out they are willing to take a loss.   The normal loss would be at the price of MC Held / Value Owed, however, you are attempting to prop up the price and let them out for more than MC Held / Value Owed and as a result the fund makes a loss.    You are only looking at the market from the perspective of the escrow fund, but not from other users.Why should *I* buy above the target price?   If I do, the fund will push the price down and I have guaranteed losses.  Conclusion: no market participant with any sanity what-so-ever would ever bid above the target price and therefore your assumption that the escrow fund could raise money this way is wrong.  The only time the escrow fund could sell GoldCoin would be when the value of the escrow fund is over 100% and it wouldn't be selling at a profit.The escrow fund socializes the losses and privatizes the profits.   If MC goes up the fund keeps the profits and prints new GoldCoin transferring the gain from the fund to those who buy the new GoldCoin.  After all they would be buying GC with 1.5 backing for the price of 1 until the backing fell back to 1:1.If MC goes down then the fund is unable to make everyone whole and is left playing a confidence game / ponzi scheme of temporally propping up the price by stealing the backing from other GoldCoin holders.  As long as the current holders are ignorant to the fact that the only thing propping up the price is the backing of their own coins it will work.How can you tell if the automated system is making or losing value?   If it makes decisions that no rational actor would make, it is losing money.   Remove the 'magic' of your algorithm for a second and instead lets pretend I create a bank, the ByteMasterBank  BMB.I tell people that I will issue a BMB IOU for $100 USD if you deposit 1 BTC into my bank and that I will always be willing to redeem that $100 USD IOU at face value, but you will have to accept $100 worth of BTC in place of actual USD when you redeem your IOU.   Assuming price stability I will always be able to meet my obligations.   If the price of BTC goes up then I can make a killing because my IOUs are denominated in USD.So the price of USD goes up and I now have enough BTC in my fund to buy back all outstanding USD loans 2x over.   Great!  I can now print up additional USD loans and start buying things with them all while maintaining over 100% reserves!  The next week the price of USD goes up and all of a sudden I am insolvent, I only have the ability to buy back 50% of the outstanding USD loans.   As long as no one catches on I can play the game of a fractional reserve bank and still honor withdraws (redemptions at face value).   How ever, once 50% of my depositors have withdrawn their money that game is over and everyone else loses everything because I am unable to pay.Unlike traditional banks, I don't earn any interest on my loans and must cover all losses from depositor funds.  I also don't have the ability to hide the true state of my balance sheet nor do I have any ability to raise any additional capital on my own.   Everyone that continues to bank with me knows they are playing a game of musical chairs and they will only continue to trust it as long as everyone else does.   It will not last long, especially for a crypto-currency not backed by the full faith and credit of a big bank.The problem you have is that you need the system to be workable on day one when MC is worth almost nothing and has no reputation.  The first 'panic' or 'market correction' it faces would entirely collapse all of MC because everyone with GoldCoin would lose and once that is revealed all other currencies (not backed by a public issuer violating bearer bonds laws) would also make a rush to safety.    Have you factored in that your built in exchange will have an order of magnitude more trx volume than the Bitcoin block chain?   Looking at the size of one message is totally missing the point and assuming bitcoin-level trx volume when people are actively playing the market is also a very unsafe assumption.A conservative guess is that there would be 10 market transactions for every traditional bitcoin transaction.    Here is an economic principle that MasterCoin violates:Law of conservation of Value.  - absent a change in perception of an individual, value can neither be created nor destroyed, it can only change hands.          If you create 1 GC backed by 100 MC  when 100 MC is worth 1 Oz of Gold and the  100 MC are held in escrow (cannot be spent) then you have neither created nor destroyed value (only the purchasing power of 1 Oz of gold remains in circulation).      Assume the value of MC falls by 50% such that 1 Oz of Gold is now worth 200 MC, the escrow fund is only holding 0.5 Oz of value but according to dacoin there is still 1 Oz of Gold worth of purchasing power that exists.        Now he is smart enough to realize that if the escrow fund is worth 0, the GoldCoin is worth 0.   He just doesn't compute the fact that the when the escrow fund is worth 0.50 the GoldCoin is worth 0.50 and when the fund is worth 1 GoldCoin is worth 1. With BitShares I fully follow this law because when the price of Gold changes value is transferred between the short/long positions accordingly and never created nor destroyed.    BitShares get their value from the perception that they provide utility to the users.    All parties take risks and know the terms, but the market forces (not automated pegs) keep BitGold properly priced.  Here are the differences between the current BitShares system and MasterCoin:1) BitGold is initially backed by 2x its value in BitShares by someone intentionally taking a short position that will LOSE MONEY if BitGold goes up.2) The price of BitGold is only ever determined by voluntary market actors, no oracles or data feeds. 3) The highest unaccepted bid is used to perform automatic margin calls for any short position with less than 1.5x backing.4) BitShare positions actually pay dividends & there is an opportunity cost for being short and a positive ROI benefit for being long.My original BitShares idea suffered from the same core problem as MasterCoin does today... I was attempting to operate with 0 margin in the event the price moved against the creator of BitGold or GoldCoin.    I also attempted to rely entirely on market expectation that BitGold would track gold on its own based entirely on expectation and new issuers creating BitGold at the new price.   In effect, I started out with all of the mistakes that MasterCoin is repeating.   The difference is that I paid people to find these things and challenge me to fix them.   TheZerg made 10 BTC (when it was worth $1300) and forced me to innovate and come up with the current version of BitShares.Last I heard from TheZerg he said the new BitShares system is much harder to find fault with.    That said, I am still willing to pay a 1 BTC bounty to anyone who can find a fault with the BitShares protocol that will result in me making a change and 10 BTC to anyone who can convince me to abandon BitShares all together.   Note: Charles & I are the sole judge of whether or not to award the 10 BTC bounty, but we have a history of being fair/honest in our judgements.  If you can convince us of fundamental problems you will save us money and we would gladly pay 10 BTC... if you cannot convince us then we will be rolling out BitShares as the proof of your failure to convince us.   MasterCoin seems unwilling to risk 10 BTC on the potential that the flaws in his system might be discovered.  If he is so confident his approach will work then it is a 0 risk proposition to offer a 10 BTC bounty.   At the very least his investors will know that he has put up enough money to insure his ideas are properly vetted.  He counters it by removing the feature from the spec and stoping all discussion on it.   Instead he is going to build MasterCoin for the betting system and issuer-based coins backed by trusted parties.  He has yet to address the HUGE inefficiencies of storing data in bogus bitcoin address fields.  You mean your forum picture isn't what you look like?    I suggest your first bounty be to throughly vet the economics of your system prior to any code being developed.    I suggest your first bounty should be the following:10 BTC to anyone who can convince 50% of your investors that your system is economically unsound and not viable.  I will no longer respond until such a bounty is posted. I have run this through in detail and can show you the 0-sum game, so lets work through the numbers for you:Assuming 100% MC backing then the price of GoldCoin == 1 Oz of Gold.If MC goes up in value, then you will have 150% MC backing... this will cause users to value GoldCoin above the value of Gold and bid it up to 1.5 Oz of Gold.The network will then debase GoldCoin until once again 100% backing is achieved and anyone who invested above 1 Oz price has lost 33% of their investment... a dumb financial move given the rules of the game.If MC goes down in value, then you will have 50% MC backing and GoldCoin would be worth 0.5 oz of Gold.  If the network uses 10% of the backing to buy back 5% of the GoldCoin at market price (1 oz) then the Fund will have 45% backing and be worth 0.45 oz of Gold after your manipulation ends.The only way for the fund to recover is if MC goes back up in value or Gold comes down... either way the value of GoldCoin has all of the Downsides of MC but none of the upsides of gold. And you are counting on everyone who pays above market rate to act against their own self interest?  Why in the world would any sane, profit-seeking, individual buy a GoldCoin for more than the gold price when they know 100% that the algorithm will be debasing them?   You are asking these people to subsidize prior losses with no gains.Why will cheap coins be worth more in a few days?  Because you say so?  Because the rest of the players have had a change of heart and realized that GoldCoins don't need 100% backing or simply because MasterCoin has gone up in value and thus the value of the backing has increased?   GoldCoin has no more value than the escrow fund backing it.  Every market intervention of the escrow fund to prop up the price debases the backing. An escrow fund will be operating at a loss at all times because the only time it will enter the market is when everyone else disagrees with the valuation and it will be making decisions that profit-seekers would not make!    The only way for the fund to raise capital is to sell above market rates and to convince some other investor to pay above market rates *knowing* that the fund will be working against their interest and that they will take a loss for paying above market rates.   The only way to keep the price from falling due to lack of backing is to purchase the coins at ABOVE MARKET RATES and thus at a loss.    You have a deep seated assumption based upon circular logic... that assumption is that the price will maintain parity naturally without respect to the backing and that the fund would be able to profit on this natural market correction.   However, if this were a natural market response the fund would be unnecessary.  Every action taken by the fund will be at a loss. Where is the option for 'pay yourself like a grad student and live on ramen'?  I think the more telling thing is that he is unable to convince his wife and his wife lacks confidence in his abilities / ideas.    My wife doesn't understand everything I do, but she trusts my judgment and overall competence enough to go out on a limb.   All of this while having to pay child support to my ex-wife, who sounds more like dacoinminister's wife, to the tune of 50% of my market-rate salary.   So for a matter of perspective, I am bootstrapping a company while paying 70% of my income as child support/spousal support because I am working for a below-market-rate salary and the corrupt courts impute market-rate.     While I think it is great that he is using private schools and keeping his kids out of public schools, without the support of his wife this project could be abandoned at any time and he will be unable/unwilling to make the sacrifices necessary to see it succeed.   Hiring out this kind of thing is not really viable because good developers are hard to come by and the ideas are all in his head.   So, I would suggest that he step back from the project until he can find someone else to pick up the cause and run it entirely.   I wouldn't invest money in this project so long as dracoinminster is a critical player and his wife isn't 100% on board and willing to make sacrifices to their lifestyle.    That said, he has still failed to address my post regarding the insufficient backing, all downside/0 upside, guaranteed bank run problems with GoldCoin under his design. Sounds like your wife is a net drag on investors profits.   I would hire everything out if I were you because you cannot use your wife as an excuse for charging insane rates.    This system is not scalable because all nodes require all information in order to validate the chain.  After running the numbers it became clear that the maximum user-base-per-chain would be too small to support a currency.
I strongly suggest you not close this particular topic.... the economics of the system must be changed or it will fail. Every time a bitcoin transaction combines multiple inputs to send to a single destination those addresses are 'grouped' and with relatively simple network analysis it is possible to highly correlate addresses and for all practical purposes they become 'one'. ZeroCoin is one approach that attempts to hide this.  But comes at a heavy validation cost and storage requirement. I would like to consider the implications of an alternative approach.Suppose that we were to treat certain outputs like 'cash' and denominated them in something like 0.01, 0.05, 0.10, 0.20 BTC.  When ever you use these outputs they are always part of a transaction with exactly 1 input and 1 output and the output address is always to a new address.Of course, you could divided a 0.20 output into 4 0.05 outputs if you need to make change.    Reversing the process compromises your identity.Given these fixed denomination single-input/single-output transactions it becomes as impossible to track as cash.   The only challenge is that to make payments to someone you must exchange one address per 'bill' and thus it becomes a bit more cumbersome to use without some tools to automate it.There is also the issue of proximity in time that would still couple the outputs as they would all be included in the same block.  This wouldn't be too big of a deal if everyone was doing transactions like this.   There is also the challenge of transaction fees which would require an extra input which should in theory also be a fixed denomination.This whole process would be very inefficient, but perhaps if only a small subset of denominations, perhaps multiples of 1 BTC were managed in this way and special wallet software developed, then users who cared about privacy could transact like this while others continue using the system as is.   Do you think this actually adds to your privacy in a meaningful way?   SEC prevents us from selling stock to all but the 'sophisticated' investors (those with net worth over $1M), and we are committed to no pre-mining which leaves me at a loss on how to do this directly. GoldCoins will act like a ratchet that can never go above the price of gold (because the escrow fund will increase supply) but can always fall with the same risk and volatility as MasterCoin.   The only way for the escrow fund to prevent the price from falling is to allocate a larger percentage of the escrow fund toward redeeming the first in line.     So when the value of MasterCoin falls, the smart thing to do is to sell GoldCoin as fast as possible before its price can fall to match the loss from the backing.  So lets say Gold goes up by 10% relative to MasterCoin on Day 1, the value of GoldCoin will not go up to match for the simple reason that no one would trade 110 MC  for 1 GC backed by 100 MC... they would be trading something for nothing.Now your claim is the market knows the escrow fund is going to start bidding up GoldCoin to boost the price.  To do this it enters the market and makes a trade no other market participant would make... trading 110 MC for 1 GC and taking a 10% loss.  Every time the escrow agent does this the value of the remaining GC goes down because some of their backing was stolen to give to the first person in line for the exit.   *instant bank run*.The system is so bad that it fails the instant MasterCoin falls relative to the other asset.   It would be better if the Escrow agent never acted at all, at least then there would be no benefit to being first in line for the exit!  The value of GoldCoin is always equal to  the Value of Backing /  Number of GoldCoins.   Presumably someone wants GoldCoins so they have to 'buy them' and if they are bought from the Network the purchase price goes into the backing / escrow fund and this builds up the supply.  So all GoldCoins are bought at todays price, then the price of Gold doubles relative to Master Coin and the backing is now only 50%.You then posit that people will continue to trade these coins at near face value because, eventually, demand for GoldCoins would push the price above market value despite only having 50% backing.    Assuming Gold is in a bull market, the backing behind the GoldCoins would continue to fall toward 0 even if the Escrow fund never had to intervene.  There is only one way to resupply the fund and increase its backing, and that is for new money to enter and pay above market price for GoldCoins which would allow the fund to 'issue' at the new price.   Unfortunately, this would mean someone paying full price for a GoldCoin and converting that into a 51% backed asset.If everyone wanted to convert their GoldCoin back into MasterCoin then the result would reveal the fractional reserves for what they are and everyone would get $0.51 on the dollar.  Because all information is public the 'smart money' would start to sell as the reserves shrank.  This would put downward price pressure, which would then cause the fund to start consuming the reserves it does have to payout those who want to redeem at face value.  Sure, you have daily withdraw limits and employ other tactics used by banks to prevent runs.  Unfortunately, you have no way to raise capital while the price is below market and everyone knows it.   It then becomes a game of musical chairs where everyone races to the exits.The only way to manage this system is to have a way to bring in more capital when the price moves against the escrow account.  Unfortunately, no rational individual throws good money after bad which means that absent a legal means of collecting a debt, the Escrow fund must start out with a multiple of its initial value.    Thus $200 in Master coins to create $100 worth of GoldCoin.  This would allow the escrow agent to safely control the price as long as it traded in a safe range.    Of course, the original source of these funds would have to come from someone and it wouldn't be people buying GoldCoin because they will only pay $100.   It has to come from people shorting GoldCoin.... and because they are short, their funds are held in escrow until they buy it back and take their profit or loss.     And *tada* you now have BitShares.  Conclusion, your escrow funds are undercapitalized and will always result in a bank run / bank holiday / daily withdraw limits until there are no funds left.    If you properly capitalize them someone has to take extra risk... 'be short' and provide the capital in case the price of GoldCoin rises against MasterCoin.   The only time you are 'over capitalized' is when MasterCoin appreciates after issuance of GoldCoin so to the extent that MasterCoin could grow in value faster than everything else your system would work, otherwise it is SOL.As soon as you have two human actors (short and long) you no longer require an oracle, aggression factors, withdraw limits, or arbitrary time delays.Once you have fixed your collateral / escrow system you are now at a point where the difference between BitShares and Master Coin is only in the transport layer.   You want to use the bitcoin chain and I am creating an alt-chain network.   As a result you will have an order of magnitude higher transaction costs and lower throughput.  This will dramatically impact your market. It would work like a bitcoin transaction.   You can either negotiate the trade entirely 'off chain' and then just publish the atomic transaction, or you can place an open order into the block chain.  Your open order will show up as an 'unconfirmed transaction' as fast as it can be broadcast and could be matched by the miner the very next block.All orders are good until you cancel them.    The sentence you quoted relates to the fact that decisions made by miners are tied to the block and thus cannot be ported over to new chains.The key with this example was to show that Grandma doesn't even need a computer and can benefit from the system using a trusted (but decentralized) 3rd party.  Everything is at least 100% collateralized, so there are no leverage ratios in the traditional 'fractional reserve' manner.   In this case he was going short to yield a higher return (with higher risk) to leverage his bet that BitShares will go up relative to BitUSD.  So there will be return rations, but the minimal backing for a short position is 150%  and due to market forces, the maximum backing will probably be no more than 250%.  SuperT,  You are starting to get it, but lets clarify a few small details:1) There is one difficulty adjustment and the difficulty ratio between high & low difficulties is always 50% so no arbitrage. 2) The miner commits to the difficulty level when they create the coinbase trx, so they can't mine both levels at the same time.  Given these two clarifications perhaps the rest of the idea will sink in. Lets look at all parties self motivated actions.The escrow agent has every opportunity to scam the people who hold GoldCoin.  Assume this agent is in a foreign country where their actions are not 'illegal' because they couldn't operate legally in the US without being regulated as the issuer of a digital currency.  This means there is no legal recourse if the escrow agent scams you if you can even detect that it was the agent doing the scamming. Now I would start out entirely legit to earn some trust and establish a market.   Then once the market 'expects' me to intervene to bid the price up if it falls to low, I would start trading GoldCoin for real Gold as fast as I could without triggering a panic sell.  If I did my job right, the confidence game would cause other players to speculatively keep the price pegged until I had converted as much GoldCoin to Gold as possible.   I would use my escrow power to prop up the price as I kept selling.   At the end of the day the escrow fund would be depleted in an attempt to keep the price propped up against my own selling.  Of course, no one would know that I was both the escrow agent and the 'attacker' and I would walk away with a ton of free money.Here is the major problem:  the system depends upon some party trading 'something for nothing' or 'nothing for something' and this violates what I would consider to be an economic 'law' similar to the law of conservation of energy... all trades must be 'equal value for value' where the result of the trade is that both parties feel they have gained value.    If you want to design an alt-coin you must have a proper grasp of certain economic 'rules' that must not be validated:1) Prices cannot be calculated, averaged, added, or otherwise manipulated by math operations. 2) All transactions must represent an exchange of about equal value (in the opinion of those making the trade, before the trade each party values the other item more than the item they have in their own value system)3) There is no such thing as a 'unit of value' only relative values between all goods that are different for every individual and time.4) Arbitrary numbers, ratios, and constants must be avoided at all times.  Reliance upon any such 'number' is usually a sign of price fixing which the market will find ways of bending some place else.These rules can be applied to every system that is proposed and will reliably identify the problem areas.  Violating them is like ignoring gravity and aerodynamics while inventing an airplane. You are correct that markets factor in eventual price recovery an people will bid speculatively.   To some extent BitShares relies upon this behavior to reduce losses during periods of high volatility resulting in a momentary sub 100% reserve as shorts blow through their margin.So it seems like you are more wed to the idea of embedding messages in the block chain than to the particular currency details.   So each of your transactions caries a cost equal to several bitcoin minimum trx fees + min dust output.   The value of the master coins or GoldCoin depends upon someone accepting them in trade or being able to convert GoldCoin into Bitcoin so they can covert to USD.    From what I can tell your system allows people to post messages, but is unable to enforce any transfers of value. Anyway... wish you the best but I am not going to invest any more time into this thread.    You have 10 years experience as a software guy... so lets get to some nuts and bolts.1) You have enough money to fund your own efforts for at least 3 years, 4 if you live cheaply.2) If your idea is as good as you think it is then you can make far more money than that far sooner.3) You want another $1 Million before you will even commit full time?    Sounds like you doubt the viability of MasterCoins and want to make sure you get paid even if the product you deliver doesn't work. Early on I had planned for BitShares to support unlimited user-defined currencies all on one blockchain then I ran the numbers and it just is not viable to have that many 'markets' with bids/asks/etc all executing on a single chain while keeping the bandwidth anywhere near reasonable for the average individual to run.    Have you run these numbers?What value does using the Bitcoin blockchain provide other than an expensive way to leach on their hash security?  Clearly your idea could be better implemented as an alt-chain.   In fact, you *are* an alt chain, your data is just stored in the bitcoin chain in a way that can never be pruned!   Because of all of the discussion on Master Coin, I thought I would bump this thread to stir up discussion on BitShares as the real, funded, alternative backed by a team of 5 FTE individuals.  We plan to make some major announcements at Crypto Currency Conference in Atlanta in October.   A note on Master Coin:   It is an alt coin that is using Bitcoin addresses with bogus data as a means of broadcasting MasterCoin transactions.    It is based upon a TRUSTED party, price fixing, public oracles, and supply-side economics.     I would be interested in your take on the means by which BitShares creates BitUSD / BitGold that tracks the value of USD/Gold without a 'peg' based entirely on market actors.   I agree 100% with your assessment above.  Ok so it now seems that you have received $10K+ in funds for this project and are apparently providing a large amount of personal funds for this.   I hope you have a plan for refunding everyone's money because I would wager money that your system cannot and will not work as you think it will.   I was going to leave this thread be, but for the sake of those who are sending money in I wanted to make one more attempt to engage in real debate regarding the economics behind this.1) I have read your more recent paper and most of my critiques still stand, but I will attempt to refocus them here.2) My critique isn't that you couldn't manipulate prices using supply, but that manipulating supply is a very 'sloppy' control and has some lag. Markets can develop momentum and thus change faster than your supply manipulation can correct.  It would be like attempting to fly an airplane with a 30 second lag between when you issue the command and the flaps adjust.  It would be very easy to 'over correct' yourself into the ground.       That said, it would be possible to 'price fix' if the escrow fund had a bottomless ability to buy when the price started to fall and then sell when it got to high.   Unfortunately, this means the fund either has the ability to create money from nothing, hyper-inflate, or go bankrupt.  It is also clear from your paper that you have introduced the potential for multi-day lag before they can enter/exit the market.      In your paper you show the escrow fund as an 'entity' that is attempting to buy low and sell high.  You already assume that these escrow funds could 'make mistakes' by being too aggressive and that when they are weak they will take longer to get the price back to parity.    These escrow funds ability to influence the market is directly proportional to the real economic value backing the fund.   Every mistake these funds make directly undermines the value available to back these coins.3) I was suggesting other means of accomplishing what you are doing that have SIGNIFICANT advantages and which your system will be competing with in the market because I have far more financial backing than you do at the moment.  This means you are taking peoples money to develop a system that will be competing against what I am doing and yet have failed to produce a comprehensive critique of what I am doing and how your system will out-compete mine in the market.   From what I gather you admit my approach will work and has no need for any trusted parties, public oracles (data feeds), or price fixing authorities.   Seems like your marketing is based entirely upon using Bitcoin's blockchain as some sort of credibility while destroying bitcoins as people convert to your system in a one-way trip.  Suppose I were to issue bytemaster coins to anyone willing to destroy a Bitcoin to create one.... the act of destroying the bitcoin does NOTHING to give value to the BytemasterCoin. You then go on to state: Because these are 'fake addresses' and money is being sent to them (or Bitcoin would block them as dust) all of this money must be destroyed or lost as you do not have private keys for these data addresses.   This represents a VERY HIGH COST-PER-BYTE for your protocol.  Not to mention the fact that you incur the full overhead of a bitcoin transaction just to communicate a relatively small amount of information imbedded in the address.I have spent SIGNIFICANT time thinking about scalability issues with BitShares which I am actively working on 80hrs /week  and I recognize that every byte of bandwidth counts.  Furthermore, if you want a reasonable buy-sell spread you need a large number of market participants or you will have a thin market.   This implies a need for a significant number of transactions and for your system this represents a large amount of overhead.Lastly,  you have said that you didn't want to go in my direction, but have not stated why which would have enabled some useful discussion.  I have spent significant time explaining the problems faced with your approach and you owe it to those sending you money to do the same.   Investor beware... don't send him money on faith alone until he has throughly vetted his idea and addressed heavy critique that should be a prereq. for any fund raising.   I vetted my idea and paid money for people to find problems with it.  I suggest he start a bounty and pay people to prove him wrong as this would be far cheaper than building it out and learning it the hard way.      "The price of GoldCoins is decided by the balance of supply and demand. Since wecant control the demand for GoldCoins, we must control the supply."You are right, I read your old paper.  I just reviewed your latest paper and it suffers the same problems:  oracles and trusted escrow agencies that attempt (and will fail) to control the price by controlling supply.  Nope, the most recent paper. I have debated whether or not to respond to this thread, but it seems like you are getting a lot of positive reviews so I am writing to provide some alternative opinions and explain how / why this system will not work.  I do this as a favor to you because I previously paid people on this forum over $1200 to show me where I went wrong with some of my early idea on how to create GoldCoins.  Reading and responding to your paper represents a significant investment of my time into your ideas and I am providing my feedback for free.The #1 problem with your system is that it is not decentralized and therefore using the blockchain only increases costs while providing little benefit.   The number of times you mention relying on 'trusted' parties is entirely against the ethos of trust-free currency.   The mere possibility of a 'bank run' shows the shaky foundation.  Once you depend upon 'trust' and 'issuers' then you might as well use a system like egold... and we all know how that turned out.  For that matter, you could use Ripple! I would like to address some major economic fallacies:1) Depending upon a public oracle for pricing information is not economically valid means of facilitating trades in your GoldShares vs GoldCoins market because it fails to consider that GoldShares and GoldCoins are entirely different things in the economy and valued by individuals uniquely and independently from Gold even if the price is highly correlated.    2) Assuming that controlling the supply instantly controls the price.   The FED has doubled the US money supply but prices still haven't factored this in.    Next, this GoldShare supply is regulated by an external feed from an entirely different market.   Note how different prices are between BitStamp and Gox and they are trading in very similar assets GoxBtc/GoxUSD  vs BitStampBtc/BitStampUSD.   Why can't BitStamp arbitrarily operate their exchange based on a Mt. Gox feed?   The reason is something fundamental:  all exchanges of value at all times must be based upon voluntary consent.   Historical price data (even just milliseconds old) is never a valid substitute for voluntary exchanges by people making an assessment of the value of the assets being traded.   Allowing a 3rd party to 'price fix' something via inflation/deflation is exactly what FIAT money is.3) You have apparently failed to address all of the competing ideas in your white paper or participate in community discussions on how to create peer to peer exchanges and crypto-assets like GoldCoins.    If you had you could have saved yourself a lot of time.Now that I have said all of this, I would encourage you to read the BitShares white paper and then come back here and explain where I have missed something because I believe that more minds dedicated to the problem will result in better solutions.  In summary, I have also created BitGold that can be traded against BitBTC and does everything your system attempts to do with the following differences:1) No trusted oracles or external data feeds  2) No trusted parties at all (entirely trust free)3) Pays dividends4) Enables trust-free put/call options against any BitAsset5) Addresses scalability issues with Bitcoin.    Definition of difficulty:   the threshold below which you must find a hash.  The lower the hash, the lower the chances of finding it, the longer (on average) it takes to find it.The problem here is that there are THREE variables changing at the same time and you are having a hard time thinking about how all 3 interact.   I can assure you I know how difficulty works and am not an idiot, so stop trying to take the short cut and assume I am nuts and start thinking through how these THREE variables interact.  The variables are:  1. reference difficulty   2. reward  3. hashes/sec.1) If mining difficulty were cut in half and hash-power stayed the same, blocks would be found twice as fast.  The network would notice this and double the difficulty such that 50% of the hashing power equals 100% of todays hashing power and thus maintain the 6 blocks an hour invariant.   No matter what the network can adjust reference difficulty to maintain an average block rate of 6 / hr.2) Given the reference difficulty, miners have two choices:  mine at the reference difficulty and receive 100% of the reward or mine at half the reference difficulty and receive 50% of the reward.   Either way, the network is paying the same BTC/hash for hashing power.The result is that the more people that choose to mine at 50% reward the higher the reference difficulty would get.   Like I posted earlier, if 50% of the miners adopted the 50% fee for 50% difficulty then you would see the reference difficulty go up by 33%.  The result of allowing some miners to cut the difficulty in 'half' if the 'half' the reward is paid and assuming nothing else changed, would be for the total difficulty in the network to go up.  In effect, those mining at half fees get counted as having 2x the hashing power they really have.Thus... the 'average of all miners' would equal today's hash rate and the block production rate would still be one every 10 minutes.  Thus, if implemented and 50% of the miners went to 50% fees then the total network difficulty would go up by 33% with the full miners needing 1.33 todays difficulty and the half miners needing .666 of todays difficulty.   End result, block production is the SAME.   *edit* my percentages are not quite right... fixed it. I am not the one failing math here, but you all are misunderstanding what is going on.No matter what the difficulty is adjusted such that on average all miners (regardless of their difficulty) only produce 1 block every 10 minutes.    Thus the network will have an 'average difficulty' that is somewhere between 50% and 100% based upon the percentage of miners mining for half fees.    Given an identical block production rate, those blocks that have a lower reward (and difficulty) result in less inflation. Explain what is illogical here:
A miner and holder could be the same person.    If I owned 10% of the BTC ever mined I would mine for 50% of the reward assuming my difficulty target was half of what everyone else was doing.   I would win half as much twice as often, but every time I won the inflation rate would be 50% less, but the average block rate would still be 6/hr.     Even if I only had 0.1% of the hashing power, I would be better off mining for 50% reward at 50% difficulty than mining at full reward because my 'mining vote' counts 2x as much as someone mining for 2x the fees.   The rate of block production would be the same, every 10 minutes, but some percent of the miners are working for 'half pay'  and thus there would be less mined.   These miners work for half pay because they make more money via reduced devaluation of their current holdings due to inflation.   This is 'intangible' but still real.   Everything else being 'equal' the total hash power would be the same and all you would do is change the distribution of wealth... except... the miners working for half-fees are undermining the profits of those working at higher fees because the lower-fee miners have an alternative means of making money indirectly (reduced inflation) that is not available to the higher fee miners.   In fact, if you own enough Bitcoin and have a small enough hashing power, you would make more money by mining for 'free' than mining in a pool or solo.    Lets work this math out:   Lets assume I own $1 Million in BTC and the money supply is $1 Billion in BTC growing at 10% per year.   This means that in one year (all else being equal), I have lost $100,000 in inflation paid to miners.  If I want to prevent this loss I would have to invest in 0.1% of the hashing power of the network so that my earnings from mining offset my losses due to inflation.   Now if I had the option of only investing 0.05% of the hashing power to earn enough BTC to offset inflation, then I am still maintaining my position and have profited in the process by having to purchase less hashing power!    The network would also have a slightly lower hash rate even thought he  BTC/difficulty yield would be unchanged. Conclusion:  those who own more BTC than hashing power can 'vote' on the level of hash security they want by specifying the mining reward they want relative to the difficulty.   At some point, those who hold a large number of BTC would be self-motivated to mine for 0 reward and still secure the network.   The alternative is to debase all of their holdings to pay for unnecessary security.   BitShares: https://docs.google.com/document/d/1RLcjSXWuU9vBJzzqLEXVACSCdn8zXKTTJRN_LfoCjNY There would be 'two' difficulty levels, one exactly half of the other.   The highest difficulty level would adjust until the block generation rate was every 10 minutes regardless of the mining reward.If you accepted half of award, you would be able to submit a block at the 50% difficulty level.   If everyone moved to half the block reward then you would still get 1 block every 10 minutes at what ever difficultly level exists based upon competition of miners for 12.5 vs 25. The point of this discussion isn't for bitcoin per-say but for the theory of crypto-currency rewards with an eye toward adding value to chains.    If the market can adjust the amount of effort put into mining based upon the need for security rather than some arbitrary 'fixed price' level of security then you could balance the investment in hashing power against other kinds of investment because there is no algorithm paying insane amounts of money for every block produced.   To get straight to the point:  does Ripple support anything like multi-sig or conditional transfers? I am designing / planning a system to entirely decentralize government which would solve your problem.  The point is that not everyone would switch off at the same time.  Furthermore, those who accept a lower fee only have to do half the work, so they are 2x as likely to win the block.   No need to coordinate anything, each player could choose which is better for them: reduced inflation or increased mining payout.    Those with large holdings and small hash power would want reduced inflation.   Everyone else would want increased mining payout. This video was from an earlier design that didn't work so I took it down so that I didn't confuse anyone.   A new video is planned in the near future.   Have all users 'register' with an arbitration agent who validates their ID and signs their public key.As long as both parties trust the other parties arbitration agent (or their agents have agreements among them) then the transaction can happen securely and privately.   If there is a dispute then the arbitration agent can be contacted (say Judge.me) and get a globally (mostly) enforceable decision.  Also see the escrow system described in the BitShares white paper (in my sig). Renewals are just a normal transaction fee and nothing special.  And just to prove you still control the private key and to control blockchain growth.Here is the thing, domain squatting depends upon purchasing 10,000 names at $10 and hoping that a hand full of them are worth several thousand or perhaps 10's of thousands.   Unfortunately, most of those names are 'worthless' and there mere act of squatting on them means that most people would not buy them even for $30.Under this system, you could attempt to use that model but why bother?  No need to bid on a name until someone expresses interest.  Furthermore, if you simply own the crypto-currency then you will get a cut of every name regardless of how high it was bid up.   Thus, the crypto-currency acts like stock in all possible names and someone who squats on the wrong name is losing money because they are not well diversified.    They would have to bet that the value of that name would go up faster than the value of the dividends they would receive for *not buying it* and that is not a safe bet at all.   Name = Domain.  The auction period is flexible but has to be wide enough to give people enough time to consider it. I think you are misunderstanding something critical.  The name is *yours* and no one can take it from you after 72 hours with no bids.    It is only for the first 72 hours that someone could outbid you. What value is a famous name for a non-profit unless someone has a use for it?   If I buy it, do not use it, and cannot sell it then I lose money.   If I can use it to generate more money than the non-profit could with it, then I am actually doing more good for society than the so-called non-profit.   Now obviously, I couldn't grab redcross and then operate a business called 'RedCross' without having trademark issues.  Without the ability to use the name in a public, for-profit manner the name only really has as much value as RedCross is willing and able to pay for it. The speed I was referring to was not from 'decision to purchase' to 'name owned'  but how many total names per second can be registered.   (Latency vs Throughput)  To be fair, my auction system would only support the same through put as Namecoin, but perhaps a higher latency.    Fortunately, I would never dream of using an auction system to allocate email names for BitMessage.  I have a different system in place that can handle 10K registrations per 5 minutes on a first-come basis with support for 1 billion accounts, renewed annually with 65 GB maximum data storage and 20kbit/sec maximum average data rate.    Namecoin is several orders of magnitude behind that system for email account registration.The point is that if namecoin does price fixing all it does is result in an after-market, off-chain, auction.   The only way for someone to 'speculate' in this market safely is to buy names 1000 at a time and hope they can sell 1 or 2 of them to pay for the rest.  End result:  all 'good names' are owned and not available directly on chain.   You cannot escape market forces and that is why attempting to design a fixed-price rationing system in a block chain is counter productive and inefficient.     What good does this do you?   Just because you get your transaction in doesn't mean you own the name yet.  I could come along after you any time in the next 1000 blocks (72 hours) and out bid you with a new transaction in the blockchain.  There are two different issues that I will address separately... early adopters take a huge risk by mining / promoting / investing in a new crypto-system.   It would be unfair if late-adopters were on the same footing as early adopters.   Note, even with name coin early adopters get to squat the good names relatively cheaply because they can buy up the namecoin.  So lets take 'fairness' out of the equation and focus on highest economic utility which actually benefits everyone.  At any time you can buy into the network and start receiving dividends from every name sold.   The longer you hold your coin the more purchasing power you will have.   So lets see if it makes economic sense to outbid me in the purchase of 'bytemaster'.  Lets assume that it is worth $100 to me, but near 0 to everyone else, so I enter an initial bid of $1.0   Because you know it is worth *something* above 0 to me and you see that I have been using this handle and built up some reputation on it you bid $50.  I just made $24 dollars from you outbidding me.   So I place a new bid at $55 and you receive $52.50.   You still think I will pay more so you bid $75 and I receive $65 dollars.  I finally decide to bid $100 and you get  $87.50.    At this point I have paid no more than what the name was worth *to me* so I have not been cheated.  Lets look at what everyone made/paid:Me: -1 + $25.5 - 55 + 65 - 100                     => -$65.5Network: $1 + $24.5 + $2.50 + $10 + $12.50 => $50.5You:  -50 + 52.5 - 75 + 87.5                        => $15.00 Now lets assume you are some rich early adopter so you decided to bid it up even higher to say $110.Now I have made $39.50 and you have paid $95 while the network made $55.50.   Recognizing that I have a $39.50 profit, I can safely bid $139.50 and still walk away for $100 cost and you would have made $44.50.So you decide to call my bluff and bid  $150, so I end up making $44.50, you get the name, and the network made $61.00.   You had to pay $105.50 net out of pocket.  I will not out bid you because the most I can afford to bid is $144.50 without my costs exceeding the $100 I was willing to pay for my name.So the question becomes:  now that you own "bytemaster" for $105.50 at a net cost to you of $105.50...  what are you going to do with it?    You could go around pretending to be 'me', but we are assuming you are just some rich early adopter who is trying to profit off of late adopters and control who gets what name and how much they pay.    Now you end up with a name that only has value to me.  I if you don't turn around and sell it to me at a price I am willing to pay, I will take my $44.50 profits and attempt to buy bitemaster instead.   Once I own bitemaster I will no longer be in the market for bytemaster and therefore, the market value of 'bytemaster' will have fallen dramatically, perhaps 75% or more.   Conclusion:  Everyone should be able to buy the name they want for a price they are willing to pay and anyone attempting to bid up a name too high purely for speculation purposes, would end up taking a loss.   There are two ways to allocate scarce resources:  market or ration/price controls.    Attempts to fix the price too low will cause all of the names to be bought up by speculators who will then create an secondary market for the names.   If you fix the price too high, then people will simply not buy as many names as the market could otherwise use.    So what I conclude is that you *always* have an auction for names even with namecoin.   The problem is that namecoin price fixes all names to the same price and only 'rich speculators' can afford to buy enough names to profit 'on average'.     With my system, everyone can buy a share in the 'name squatting game' simply by holding the currency.  So I believe what I propose is inherently more fair.  It seems like stakeholders and miners would want the highest possible initial bid, not discounted bids?  If I see two registrations for a name I will pick the highest.  Note that destruction of the money is effectively a dividend as it reduces the supply.  In the end this could result in a large portion of the money supply being destroyed.  This is a significant problem that I am aware of, but did not mention above so will send a tip to your donation address.  I have two proposed 'solutions':1) restrict the bandwidth and disk space available to something that would allow anyone to run a full node.2) query many nodes and always pick the most recent transaction.A merkle tree of all the last trx for each name with with 100 M names would be 4 GB.  And calculating it from scratch would be very CPU intensive.  I suppose this could be viable for heavy-weight servers to maintain. Lol, I will probably need it .   Setting high goals makes life exciting. Clearly namecoin is good for today and it is a good stop-gap measure, I am just looking to the future.
My goal would be to achieve that in 5 years time.  This would require making it easier to use than regular email which I believe is achievable.  Sure, it is cheap to register names today the point is that if demand picked up then it would no longer be cheap.   Also, hidden fees (proof-of-work) is kind of like hidden ads and people can accept that as long as they don't need to pull out actual money to use the system.   Ad-sponsored faucets... now there is an idea.  Of course, that idea doesn't really scale well if the prices get as high as they would under the demand of 500 million users.    The problem is the bandwidth usage & storage requirements which are just too costly with Namecoin when 500 million users are using the system (assuming they all run a full node).So instead of just complaining about the bandwidth and storage requirements of namecoin let me make a proposal:1) separate out the concept of name -> pubkey pairing from  name - value pairing.   For the purpose of BitMessage all you really need is the public key (33 bytes) for a given name.2) don't store the name in the database, just store a 64 bit hash of the name.  This will give you the best possible compression with only a 50% probability of a single collision with 1 billion users and a collision just means they have to pick a different name.3) entirely eliminate signatures from the database, signatures are 65+ bytes each and provide no value for the purpose name=>key pairing4) don't have it based upon a currency, no one wants to 'pay' for a 'user name' or 'email account', these things are disposable and people just select a different name if their first choice is in use, such as bytemaster1 if bytemaster is already taken.   The purpose of the names is to make it easy to share your 'bitmessage address' with others.     Without any bookkeeping overhead, the minimal size per record is 41 bytes which would be 41 GB for 1 billion users and totally reasonable by the time we got to that many users.   Of course, there must be *some* book keeping overhead in order to prove who has rights to what name and resolve conflicts.   So I propose 'merged mining' on names / blocks.   The minimal difficulty for mining a name is 1 CPU hour ($0.01 electricity).   The difficulty would adjust so that one block is found every 5 minutes and no more than 10,000 names per block are registered per block and thereby enable about 1 billion renewals per year.  The difficulty of the block is the average difficulty of the names included in the block * the total number of names.   People mine for their own name only.So what information would be required for a name registration transaction?    nonce, time, prev_block_hash, merkle_root, name_hash, public_key all of which could fit into 82 bytes and when compressed into a block with 10,000 names would only require 720KB / block.  This would require an average of 20 kbit / sec sustained with 1 billion users.By requiring yearly renewal you can eliminate all blocks older than 1 year and each user contributes to securing the network once per year by mining their name for an hour.   This process could be spread out as 10 seconds per day average mining effort.No one would squat a name because they are not transferrable until they expire (transfers require signatures).   A special exception may be made for canceling a name in the event your key is stolen.Once you have this in place, Namecoin can be reserved for name->value storage which has entirely different requirements / costs.  I only bring this up because I want a universal name->public key system that is fully decentralized even if everyone in the world adopted it.       You proved my point, the fees alone would prevent namecoin from scaling to the point that BitMessage + Namecoin could be a viable alternative to email.Sure, you could claim that you do not believe it would see that level of adoption and that you *want* to limit the growth artificially but I believe that is copping out.   Why wouldn't we want everyone who is using email now to use BitMessage in the future?   BitMessage scales, so all we need is a naming solution that also scales.Also, people expect email accounts to be free.  How long does it take them to mine enough namecoin to register an account? 100 Million users * 1 trx (renewal) per year * 1Kb / trx  means means 100 GB / year in trx volume that cannot be pruned even with no new registrations, no currency exchanges, etc.    Required average bandwidth is 26 kBit/sec just downloading the chain. Throw in overhead, new registrations, and partial updates and you are probably approaching 50 kbit/sec assuming everything is only downloaded once and uploaded once on average.    Not bad...   But what if users have multiple accounts (home/work/spam/etc...) all of a sudden the number of supported users falls dramatically unless they opt to use a BM address rather than a valid name.   But if you hope to grow BitMessage to compete against gmail, you need to support 400 Million users or perhaps your goal is iTunes with 500 million users.     Perhaps just linked-in 225 million users.   250 million domain names.  Check this out this link: http://expandedramblings.com/index.php/resource-how-many-people-use-the-top-social-media/My goal would be to eventually handle a user base of close to the size of iTunes and that would imply a half terabyte dedicated to just 1 year of renewal transactions and multiple terabytes of blockchain data.    Clearly once the system got to the scale that would displace a large volume of traditional email/accounts it would no longer be viable for home users to run a full node.   I have a proposed alternative system for name registration (not yet published) that would allow 1 billion users, require only 100 GB of disk space (ever) and operate at less than 1 MB ever 5 minutes bandwidth requirement.    By the time there were 1 billion users, it would probably be viable to scale with the population growth.   Of course you could just let the market come up with centralized solutions, light clients, etc, and compromise a tad on security by revealing who's address you are looking up and trusting a 3rd party to give you the most recent name record, etc.      I suspect that using BitShares with a 'BitBeer' asset would track the price of Beer +/- 3% and not be centrally controlled like Beertokens.  It would also pay dividends so...  If you are on a P2P network and sending one byte for every byte you receive, then you would need that kind of upload capacity.Now there is always the option of light clients. Even if everyone had a least 2 mb upload, I doubt many would want to run software that consumed 50% of it.   What is your timeline for Namecoin going mainstream?   That poster was very well done and I like what they are doing with that convergence FF extension.  I saw some place that iTunes had 500K new accounts being created per day, perhaps that was just after launch.   All I know is that there are more email addresses than people in this world and to simply give every adult in the US a name within the next 3 years would require very rapid name registration and the required bandwidth would easily consume most low-end DSL lines, particularly for people that live 30 minutes from town.   I mention this because I want a name system to scale to world-wide adoption without overloading a 1 MBit connection with Namecoin traffic alone.  The other problem with Namecoin is that like bitcoin, the transaction history has to be kept forever without limit.   Perhaps you will need to implement pruning.Lets just say I really like the idea of a block-chain based name registration system, but am not sure the changes being proposed / discussed in the namecoin forums are sufficient to handle the ultimate demand. When I refer to the speed of registering names I am really referring to the following:1) Assuming a fixed bandwidth limit that keeps the system decentralized, the system is limited to a couple hundred names per block.   2) Given the original release pace name registration limit was restricted by the money supply.Imagine that BitMessage became as usable a regular email and people wanted to sign up at a rate of 100K per day or more, the Namecoin could not handle that load.I appreciate your post, but it didn't provide any of the things I was looking for. Each chain would have value based upon the 'network effect'... people already have funny ideas about Chain X and Chain Y ... aka Litecoin.  These ideas are not so funny, because if anyone could launch a new chain then you could print your own money. This is close to the approach except that Namecoin does not scale to millions of users without the block chain bandwidth growing out of hand or centralizing. The market certainly cares about decentralization because decentralization increases competition and profit opportunities.   Bitcoin would have no value if the market didn't value decentralization.   Mining pools already self regulate to prevent growing much over 40%.    And of course, alt-coins will force bitcoin to adapt and evolve.   Bitcoin will evolve or die and that is the market at work.  Considering I am part of this market and am building these kinds of solutions, your claim is 100% right on about the market sorting it out. Namecoin has been around for a long time and from what I can tell has failed to gain as much traction as the concept deserves.   I am looking to get feedback on how to develop a far better system than namecoin and want to establish the criteria for this system.   First I would like to suggest some of the flaws I see with namecoin and get feedback on some of my proposed solutions:1) Fixed Price Names -  the value of a name is similar to real estate and any name registration system that attempts to fix prices will either set them too high (no one registers) or set them too low (domain squatting).   2) Too Slow or Too Fast.....  the rate at which names can be registered is either too slow for the demand or too fast and thus squatters.3) Too hard to use  - complete lack of any GUI Proposed Solutions:------------------------1)  Start with a crypto-currency that is mined into existence.2)  New names are all auctioned off to the highest bidder.  Only after 72 hours with no bids is the name considered owned.    This will prevent squatting because speculators would have to pay more for 'good names' than 'throw away names' due to the bidding process.   This will also ensure names are put to the highest use.3)  Fees from the initial bid are split between the the miner and dividends paid to those who hold the crypto-currency4)  If someone outbids the initial bid, then half of the 'profit' is given to the original bid and half paid to the miner and dividends.5)  Allow people to put their names up for auction or list them for sale.Combine this with an easy to use interactive GUI to show trending names and you have a system where many different users can speculate on names playing an addictive game of 'price is right' attempting to bid the highest without going over what someone is willing to pay for a name and profit while they are at it.  If they over-bid then they can always sell at a loss to the next person in line after the auction is over. Economic Consequences?-----------------------------No one has incentive to 'squat' on names because they are better off owning the crypto-currency and receiving dividends from all of the names that are actually purchased rather than speculate on any individual name.   Owning this crypto-currency is like having a stake in all unclaimed names. Everyone has incentive to 'bid up' high value names either to profit from reselling them and to increase dividends paid.  Names can be registered at any rate based upon supply and demand.   No-value names like bytemaster1234 would not be bid up, while high-value names like apple, google, and bitcoin would be bid up.  Here is what I am looking for and will pay tips for:1) New criteria / requirements that a decentralized name registration system must meet. 2) Significant design flaws with Namecoin that should not be repeated. 3) Useful and Constructive Feedback on my proposed solution.   4) Reasons why you haven't used Namecoin and what it would take to convince you to use my system.Just a reminder that I have a solid track record for actually paying tips & bounties and if you are not satisfied with allowing me to be the sole arbiter on to whom and how much to pay then please do not participate in this thread. The network effect has to be balanced with the centralization effect.  What you want is a single currency (for pricing purposes) that scales across many banks (chains) for decentralization purposes.   You would end up with a situation where transacting within a single chain is almost free (like transacting with a single bank) but transacting between different chains is more expensive (like a wire transfer).    If you want to send someone money you have to know both their bank and account number.    Of course, because private keys are good on all chains you can send them money on your chain and leave it up to them to move the funds to their normal chain.   Large centralized wallets would be able to integrate all of the chains into one 'account' to give the appearance of a single large chain while still allowing individual users to with 1 Mbit internet connections to participate.Assuming 10,000 trx / sec at 1024 bytes / trx  it would require an 80 Mbit connection to handle all of the transaction traffic which means that 256 chains could probably handle the entire transaction volume of VISA / Master Card / PayPal and all wire transfers combined, and yet you would only have one chain per state on average.    Of course, a lot of this transaction volume will probably still flow through trusted 3rd parties that enable 'instant' transfers rather than 3+ confirmation transfers.  Bandwidth is more critical than disk space for decentralization.  Parallel chains of with a fixed limit on bandwidth per chain would be nice.The ability to move value between chains would also be nice.To move value between chains means a 3rd chain is required that is merge-mined with the other 2 chains.  This 3rd chain is responsible for confirming movements from one chain to the other and vice versa.   The cross-chain would have to be very low bandwidth, say 1% of bandwidth allocated for the main chains.  With this approach you could have decentralization while still having only one crypto-currency. How about not being afraid of losing anything.    I am trying to understand your goal here... you are effectively offering to *pay people* not to spend their coins but to save them?   Who pays an why? You think the for-profit prison system cares that you 'accidentally' lost them? Today all miners get the same payout and produce the same level of effort.   What if a miner was willing to work for only 12.5 BTC reward?  Could you reduce the difficulty by 50% without affecting the economic incentive to mine?   Lets assume that the difficulty would still adjust so that on average 1 block was produced every 10 minutes.Someone mining for half the fee would effectively double their probability of finding the block which would mean that on average they would see the same rate of return as someone mining for the full fee at twice the difficulty.What would be the financial incentive to mine at the higher difficulty vs the lower difficulty?   From what I can tell, those who own a significant number of BTC and feel the network is secure enough could benefit from a lower inflation rate.   While those who don't own BTC would benefit from a higher inflation rate that transfers them more money.  Where this balancing point is depends upon what percent of the hashing power you own vs the number of BTC you own.   If you own 0.001% of the hashing power, but 0.002% of the money supply you are better off mining at the lower reward rate than the higher reward rate because your holdings would see less devaluation via inflation on average. The consequence of this approach is that 51% attack can be achieved with just 25% of the hashing power that would be available at the full mining reward, *assuming* there was no profit motive.    Now considering that we already have organizations with 25% of the hashing power... what does this mean?    I would submit that these organizations could have achieved 51% of the hashing power if they wanted to already, but market forces compel them to decentralize their hashing power and take pro-active efforts to avoid hitting even 40% because if they ever did achieve 51% then they would undermine the value of the bitcoins they are so heavily invested in mining.    If we reduced the 51% 'attack threshold' to 25% then hashing power among honest individuals would probably decentralize at 15-20% rather than risk any one party getting to 25%.There is another factor here and that is if all miners opted to mine for 50% of the fee, you would have the same difficulty as you have today.   The only thing you will have done is reduced the profit from mining and thus the resources committed to it.  Of course, this is all complicated by factoring the added value-per-mined-bitcoin as a result of the lower inflation rate.In my prior thread on reducing the mining difficulty toward 0 it was submitted that you needed to have significant proof of work to prevent creating fraudulent  chains and that if the proof of work were too low then anyone could spoof a chain.  I would submit that once you get above a certain threshold, the profits from an attempted spoof would be far less than the profits from mining.  I also submitted that a 51% attack by a non-profit seeking organization is an entirely different threat model and that even with today's level of hashing power would be insufficient.  In the event of a 51% attack by a non-profit-seeking organization (such as a government) an alternative means of choosing which nodes to extend the chain could be adopted which would prevent Denial of Service attacks. There is a sweet spot in hashing difficulty that causes profit seeking individuals to mine rather than scam, and beyond which provides decreasing economic utility.  Finding a way to allow market forces to establish this in a decentralized manner would have great benefits to everyone using the crypto-currency as well as for the environment.  Economic resources that are currently being dedicated to providing too much security could be reallocated to somewhere more productive.Thoughts?
Think of it more as backward compatibility to help with the transition.  While most people around here understand the problems with fiat, it doesn't change the fact that most businesses dealing with the public face exchange rate risks and that we need a transparent price discovery system. BitShares will also handle gold, silver, oil, gas, APPL, and any other asset class.   But it will take 10+ years of unhindered growth (or perhaps hyperinflation) before people will switch to a new unit of measure from what they have grown up with. I probably should have clarified, it my example I was using BTC in place of BTS.   There is clearly a difference between BitBTC and actual BTC as BitBTC pays dividends is and is backed by BitBTS and will have different transaction fees / etc.   The 'delivery' is greatly simplified because instead of having to match price & location with LocalBitcoins all you really need to do is match location.   Instead of only appealing to those who want to use Bitcoins, BitUSD can appeal to anyone who wants to save USD and earn a return.  These two factors conspire to make BitUSD far more liquid on the local market than USD. Further if you are going to do a multi-day escrow transaction involving a wire transfer then it is best to trade in BitUSD because you do not suffer exchange rate risk while your funds are in escrow.  Through integration with Ripple we should be able to automate USD IOU exchanges for BitUSD and then allow you to withdraw your USD via BitStamp or the like.   Yes, blockchain based with multi-sig support.    1 BitUSD will always have a market-value similar to a variable rate, interest bearing, AAA USD bond because it is fully backed by 1.5 to 2.5 times its value in BitShares held in the most secure / automated blockchain brokerage developers can code.  Therefore, you can buy and sell BitUSD via 'LocalBitShares', OTC, or any other system.    Because you are ultimately trusting the market and no BitUSD is tied to any individual, all BitUSD is fungible.  Because it is fungible it is divisible.BitUSD is really just a hedge against price changes in the BitShare / USD exchange rate and that hedge is funded / provided by those who think BitShares are going to go up in value and are willing to bet their money on it. You have two people, A thinks that  Bitcoin is going UP relative to FedUSD and B thinks it is going down relative to FedUSD.   They both agree that *today* 1 BTC is worth 100 FedUSD so they both put in 1 BTC.   A essentially 'promises' B that he will buy back the BitUSD at the future price.  B trusts A's promise because the blockchain will enforce it long before A lacks sufficient funds.  The reason the blockchain can enforce it is because of the collateral.  In this case no FedUSD actually had to change hands and no party actually had to own any FedUSD because all they did is make bets where the payout was proportional to the price change between BTC and FedUSD.  This is similar to a prediction market where the 'future outcome' is tomorrows exchange rate.Sure you do.  If you have 1 BTC paying you 10% / year.  You sell that 1 BTC into a Short position in 100 BitUSD and instead of receiving 100 BitUSD that you can spend, it is locked as collateral for your position.    Your initial condition was earning 10% / year on 1 BTC, your interim position while you are 'short' you are earning nothing if the BTC/USD price is not changing.   Therefore, there is a 10% opportunity cost and you would benefit from covering your position. This is really no different than being short in the traditional stock market where you have to pay interest on the stock you have borrowed.  The difference is that my interest payments take the form of opportunity cost. FT,     The difference between Mt.Gox USD and Bearer bonds is that Mt. Gox is a middle man in all transactions and can enforce KYC.   Mt. Gox does not issue bearer bonds.   If an OT server practiced full KYC regulations for all accounts and the issuer 'knows the server' then clearly OT will work and be entirely legal.   In fact, it probably offers better privacy than Bitcoin because only 3 parties know about any given transaction and only 2 parties know all of your transactions.   With Bitcoin & Bitshares once your identity is tied to an address or the address of someone you have done business with your privacy is heavily compromised.    The problem with most traditional approaches to USD vs X trading is the expectation that the USD must be an IOU.   On Gox you are trading  Gox Owes Me USD vs  Gox Owes Me BTC  and not actually trading USD vs BTC.   The paradigm is then adopted by OT with issuers.   What only savvy economists recognize is that Gox USD != Bank of America USD != Treasuries != Paper USD and that all of these IOU's actually trade against one another based upon the time-value-cost of moving value between these different instruments.   That said, most people recognize that the value of an IOU USD from most public / trusted entities is about the same (unless Gox blocks USD withdraws)   In all of the cases above there is a counter-party who can default either intentionally, accidentally, or through government coercion.  All that customers really care about is that the purchasing power of Gox USD is relatively stable (+/- transaction fees) with the purchasing power of BOA USD.  So if you can create a crypto-currency that achieves this relative stability against USD then it is a suitable proxy for trading actual USD.   If this crypto-currency is not an IOU backed by a 'trusted' issuer, then you have a unique and useful alternative to OT issuers.  BitShares is a crypto-'currency' that allows users to take collateralized short positions in USD.  The collateral is measured in BitShares and the cost of going short equal to the cost of the USD you are short.   While you are short your funds are tied up along with the proceeds you received by selling the BitUSD.    This will force users to cover their short position in the future.  The loss of dividends enforces a carrying cost on the short position and a profit on the long position.  The last ingredient is having the block-chain automatically cover the short position (via placing a bid in the market) any time the margin starts to fall.  This protects the long position (BitUSD) from losses.  With enough participants in the market the price of BitUSD will be just as stable as GoxUSD vs BOA USD and yet there are no issuers per-say.   In theory you could claim that the shorts are the issuers, but they are anonymous and there is no need to trust them.  They cannot run with the money nor fail to redeem it.   Lastly, simply depositing USD into an OT server does not earn me interest where as simply owning BitUSD will pay you dividends (from all trx fees in the market).  This makes it far more compelling to own BitUSD over OT USD.   All of that said, I would love to know how we can work together to automate voting pools because I would like to have a trust-free way of transacting with BitUSD on a OT server.  This would provide a lot of privacy enhancements and help scale the transaction volume. What prevents false-bids from being published from other OT servers?I fully recognize that within a single server the price mechanism is valid, just not sure the purpose of BitMessage aside from finding arbitrage opportunities and that would imply some kind of trading bot and the ability to rapidly move funds between to OT servers.       Or you could spend life in prison for failing to turn over your keys.Or perhaps you just don't want your identity stolen.    BM-2DA2pc74KXFPWCAkEt26nbXxU4iYVJgGRo The encryption behind BitMessage is solid and adding PGP is entirely redundant.   The problem with OTR is exchanging the initial public key.  DH does not prevent man in the middle attacks.   The problem with Certificate Authorities is they are only as secure as the weakest link.  Other forms of key exchange are not 'easy to use' and ultimately result in BM style 'address exchange' over an out-of-band channel.  BitMessage has some weaknesses and the whole address structure, signing key vs encrypting key is ultimately based upon a poor understanding of the possibilities with ECC DH.   I am working on a C++ / Qt based enhanced version of BitMessage that solves many of the problems of BM including the addresses and use of ECC that is lower bandwidth and yet more secure.This will be released as part of beta-testing the P2P network / broadcast code behind BitShares.  I have a question about the operation of Ripple for the purpose of cross-chain-trading.Suppose I have BTC in my wallet and want to send it to someone 'conditionally' on them sending me Bitstamp.BTC  without having to trust any other party other than BitStamp once the transaction is complete.I don't want to go first because I don't trust them.  They don't want to go first because they don't trust me.  So I want to implement atomic cross-chain trading with Ripple.    Is this possible and what would be involved? I have a question about the operation of Ripple for the purpose of cross-chain-trading.Suppose I have BTC in my wallet and want to send it to someone 'conditionally' on them sending me Bitstamp.BTC  without having to trust any other party other than BitStamp once the transaction is complete.I don't want to go first because I don't trust them.  They don't want to go first because they don't trust me.  So I want to implement atomic cross-chain trading with Ripple.    Is this possible and what would be involved? In the beginning there was the BitShare and the BitShare was good and had value as a crypto-currency.Assume that 1 oz of Gold is currently equal to 100 BitShares in the real-life market.Sam thinks the value of BitShares will go up relative to gold, so he wants to short Gold.Alex thinks BitShares are in a bubble, and wants to go long Gold.Neither Sam nor Alex actually own any gold, they are merely speculating on the price movement. Both Sam & Alex start out with 100 BitShares that they mined (or acquired by other means).Sam and Alex make a bet and collateralize their bet with their BitShares...  Sam 'sells' one BitGold to Alex on the block-chain exchange where Sam and Alex represent the highest bid / lowest ask pair and the price for BitGold was 100 BitShares.    For Sam to sell something (BitGold) that is worth 100 BitShares he must have 100 BitShares and for Alex to buy something worth 100 BitShares he must also have it.   Therefore no value is created nor destroyed only exchanged.Now when this exchange was executed the 100 BitShares from both parties are tied up as collateral (200 BitShares total) and Sam cannot spend this collateral unless he returns 1 BitGold to the ether from which it came which means he must buy it back at the future market price.   The network will also monitor the price on the internal exchange and if the value of BitGold ever gets to 150 BitShares the network will automatically liquidate the position on the internal market and give Sam back 50 BitShares.  At the end of the day there is no BitGold but value has been reallocated between Sam and Alex proportional to the change in price of Gold relative to BitShares.  The market can balance the # of chains vs the trx fees vs the demand for decentralization.  You would only have 1000 chains if there was high demand for decentralization. There is another technique that is probably just as effective as account trees and that is the use of smart compression of both the transaction data transmitted and the database.In the current block chain there is a ton of redundant info:  same address in multiple transactions, trx id referenced once for each input is stored multiple times if a trx has many outputs.    These are all 32 byte numbers that could be reduced to 4 to 8 bytes and yield a 50% savings for the second use and 75% for each subsequent use.     With a proper protocol for agreeing on what these identifiers are (say first bits... ) I estimate you could double the transaction volume for equal bandwidth and half the data storage requirements.Combine this with a financial incentive to generate transactions that have more inputs than outputs and a one year maximum chain size and a DHT for storing 'pruned' transactions and you would have a solution that would probably be about the same size as the account tree. We are looking to hire two full time developers to help develop the BitShares protocol among other things.  Position 1)  C++ Developer with experience with Boost & QtPosition 2)  Web Engineer with experience with Java Script, CSS, HTML5, graphics, and server admin.Please contact me with your resume and/or skype contact information if you are interested in a position. The solution to scalability must be parallel chains each supporting perhaps 500K users max.   Unfortunately, this would mean that there would be 1000's of crypto currencies and markets for trading between them as they would not be fungible.   You would need a crypto-currency that had some other properties that drive its value so that it is effectively pegged against some outside unit of value while still remaining 100% trust-free.  As a result it wouldn't matter which 'alt-chain' you were on, your unit of account would be dominated in 'silver'.I believe there is a continuum between decentralized, trust-free and expensive and centralized, trust-based, and cheap.    I believe a blockchain must make a commitment to a maximum bandwidth that makes the chain accessible to everyone who can afford the fees for transacting on the network.   Enable efficient cross-chain-trading and most users would only need to live on one chain and could easily trade / spend to other chains as necessary.The reason why I have thought about this problem very in depth is because of my work on the BitShares protocol which was attempting to utilize an 'account tree' like system.   There are significant space requirements for large merkle trees that only update a small fraction of the tree.  If you opt to save space on your merkle tree, you quickly become CPU bound.  Ultimately you realize you want a lot of 'mini-merkle trees', say one every 10 minutes, and that is when I realized why Bitcoin had to be implemented like it is.    *edit*   One additional feature of all of these chains is the requirement that all transaction outputs be spent within 12 months so you can limit your long-term storage requirements to something that the average user could support.   This means that each user is committed to 1 transaction per year min and that will put an upper limit on the number of users who can possibly use a given chain to something around 1 million for a reasonable bandwidth and only a few transactions per year per user. Some thoughts on the merits of an account tree approach:1) The purpose is to reduce the data storage requirements to allow the network to sync / scale faster and thereby keep the network more decentralized.2) Blockchain size and sync/time are ultimately only part of the problem, the other part of the problem is transaction volume and bandwidth.   If the goal is to support 100 million users each of whom is able to run the software on their home PC / average internet connection without entirely saturating it, then you would have to limit your bandwidth to something along the lines of 1 Megabit/sec or around 100 transactions per second which would mean each user could only do about 2 transactions per month and you are only involving about 1% of the world population in this network.   This network would be generating 10 GB / month or 120 GB / year in transactions.   Lets assume we could prune 50% of the transactions, 1 year would be 60 GB of data.Compare the traditional block chain to an account tree:A) Lets assume we have an account tree where each account consists of a public key & balance and a some other relevant accounting totaling 200 bytes per account. B) Lets also assume that the goal is for this to scale to 100 million users world wide and that each user has exactly one account.   This is not viable from a privacy perspective, so you would have to assume 10 accounts per user that rotate over time.C) The resulting database size would be 200 GB without any indexes or other data structures.  D) To create a sha256 merkle tree on these accounts would require 64 GBE) Assume you keep 1 month of transactions on hand for the mini-chain: 10 GBConclusion:  The account-tree chain would require ~300 GB of storage and each user would still be limited to about 2 transactions per month.   The end result is that the account tree and full-block chain system have identical support for transaction volume, with only about a 6x gain in data storage efficiency or break even with 6 years of transaction volume.Clearly the bandwidth is the bottle neck of scalability and not the data storage.    If you allow the bandwidth to scale enough to accommodate the transaction volume of VISA then everyone would require a 1 Gigabit connection to the internet at which point you are already well beyond the scale of the average individual and well into the realm of centralized financial institutions which would be logging every transaction forever anyway, the account tree system would just be extra book-keeping for these organizations which would probably maintain a separate index optimized for their queries. A decentralized blockchain is transaction rate limited, not storage limited.   If the only change you made to the blockchain was to automatically expire / invalidate any unspent output more than 12 months old you would solve the data storage problem, the dust problem, the bootstrap problem, and the lost-key problem.   And you would be left with the same scalability problems as the account-tree based approach.  What I conclude is that the account tree system at most provides some benefits for medium-scale systems involving perhaps 1 million users but is entirely irrelevant once you scale to the size Bitcoin aims to achieve.  There are only paradoxes among those who do not understand economics.Every single example the OP posted is comprised of two assertions that both cannot be true at the same time... and they are not true.   Hoarding is not a paradox, study Austrian Economics.  Hoarding is just a derogatory name for high demand. There is no loyalty paradox, any developer who does not work to evolve bitcoin into the best currency possible will find that Bitcoin is outcompeted in the market by alt coins.   So there is no paradox, only short-term vs long-term payoff and potential miscalculations by developers.There is no idealogical paradox, you presume they must remain unbiased.   At first glance it would appear as though some (if not all) of the scientific community has arrived at the conclusion that the world is round. There is nothing inherently wrong with that conclusion, in fact it's a reasonable one if you ask me; however, to maintain the integrity of the Scientific method, scientiests must remain unbiased against the theoretical and practical aspects of science. The last 'paradox' is even more ridiculous, "Bitcoin strives to become the world reserve currency, but only shows its strength if it outcompetes all of the powers aligned against it".   This is two ways of saying the SAME THING because every other competitor on the market is persecuting bitcoin in an attempt to displace bitcoin.   I have determined that proof of work is required and that consensus only works if you have trusted public companies affirming the valid root.   So the choice is between requiring trusted authorities and proof-of-work... so I choose proof-of-work. Ripple requires trusted nodes... and bitcoin doesn't.    Ripple is faster and confirming state as a result of their design, but requires extra trust.  Thank you all for helping my work through the design space.   As someone who has mined over 150 BTC via CPUs I didn't miss that boat.  I am interested in this topic for the purpose of next-generation crypto-currencies / systems that are more decentralized and not to profit from mining.  The problem is that the security provided by mining is far more than is required / desired and thus there must be a middle ground that allows the market to price security vs cost.  If you act as a gate way and thus accept 'deposits' from people whom you convince to trust you, you acting as a bank and could be hit by a bus and default on everyone.     What is your availability for withdraw?  If you are on vacation can someone whom you owe money collect?   Ripple Gateways *are* banks even if they are just a single individual.   Everyone operating as a gateway is either accepting deposits or extending credit and participating in an automated hawala system.   I guess technically hawala systems are legal to the extent that they remain informal and have no contractual obligations.   So who is going to trust a gateway with a large amount of money with no contractual obligations?    If there are contractual obligations, they are a bank and must be regulated.  
I think you brought up very good points, please send me an address. This is a very thoughtful post, PM me a BTC address.I think I have figured out something fundamental that solves all of these problems.   Everyone who owns BitShares has financial incentive to mine for free because every block found that pays 100% dividends benefits their holdings.   Anyone who wants to mine for-profit does so because the ROI on their mining effort is greater than the dividends they would receive on their holdings.How does this work out... someone who has 1% of the hashing power but 2% ownership is better off mining for free. Someone with 2% of the hashing power but only 1% of the money supply is better of mining for profit.What is the economic outcome of this?   Those who 'own the money supply' set the price paid for mining.  If they want more network security they stop mining for free, if they want more returns they start mining for free.   The result is that the market sets the mining fee and therefore the difficulty level.  Thoughts? From white paper: Ripple is a peer-to-peer network with its own currency (XRP) that facilitates transferring and trading or exchanging currency in any unit.    Ripple is not a trustless network, but instead a means of shifting credit through a network of friends and family.   Each individual must publish a line of credit extended to everyone they know and is at risk of default.   In our opinion, this is not a socially viable arrangement which means that most people will end up using Ripple Gateways.  A Ripple Gateway acts like a bank by accepting deposits in exchange for credit on the Ripple network.  Gateways are likely subject to all of the laws and regulations that apply to money transmitters or any company that accepts deposits.   The end result is that Ripple is not Decentralized and does not provided Limited Liability for all parties.Furthermore, Ripple does not support shorts, call, or put options and is therefore not Diverse.   Without relying on a centralized Gateway such as Mt. Gox or Bitstamp, currency trades are not aggregated, atomic, nor passive.   Lastly, Ripple is not private because everyone must link their Ripple identity with their real world identity in order to establish lines of credit with friends, family, or Gateways.  Ripple is currently not Open Source despite promises to change that in the future.  Lastly, Ripple is not viral in that it offers little value that would appeal to anyone outside of the crypto-currency movement or perhaps businesses that wish to start a Gateway.  Local gateway == centralization.  All local gateways must be regulated money transmitters and they then tie your wallet to your ID.   It is a common interface to many different 'centralized exchanges'.   Remove all regulated & public entities from the ripple system and how would it function? The biggest problem is man in the middle attacks that isolate an individual from all outside information.   If someone can present you a forged chain and convince you to accept payment from them on the forged chain and you ship the goods before learning otherwise they will have stolen from you.    In theory Bitcoin suffers the same problem without checkpoints or knowledge of the expected difficulty.   So the question becomes are there other means of preventing man-in-the-middle attacks and false chains that are both decentralized and relatively trust-free?  Seems like proof-of-work is both expensive, incomplete, and ultimately relies on outside information to verify you are on the proper chain.   In the March 2013 fork how did the average user know they were on the wrong chain?  There is a difference between 'dividends claimed' and 'dividends paid'.    Dividends paid come from transaction fees and block rewards, this number is defines the dividends per BitShare for all accounts.   This number is accumulated at the block-level until a an output is spent at which point the output can claim the proper percent of dividends earned.  From a user's perspective, the client can always calculate the dividends due a particular output and thus can factor that value in when generating a transaction.  So a transaction that references a 1 year old output of 100 BTS could 'spend' 110 BTS via an output provided at least 10 BTS of dividends had accumulated since the output was included in a block.  It actually scales better than you think with an intelligent implementation.   Each block I update an accumulation table that will give me constant time lookup of the cumulative dividend percentage by coinage.  This table is only maintained for 1 year (hence the need to move your funds once per year).   The total size of this table is less than 1 MB per BitAsset or about 32 megs total.  Dividends are not calculated for an output until the output is spent. The the coinage is used to accumulate all dividends.   This prevents dust and rounding errors.  We are vastly different than ripple in almost every respect.   The white paper has the complete comparison.  I think this system is much more than an alt-coin and will enable trading of BTC for fiat as well as earning interest on BTC.    It will enable you to move fiat into the centralized exchanges or purchase BitUSD with actual USD and then use cross-chain trading to buy BTC.   So there are many aspects of this that make BitShares a meta-system rather than just a crypto-currency.   I also think this has far broader application to Bitcoin community than a 'alt-coin' does.  For example, the name coin thread hasn't been moved by the mods.   Alternate cryptocurrenciesDiscussion of cryptocurrencies other than Bitcoin. Note that discussion of how these currencies *relate to* Bitcoin may fit in other categories. The difficulty setting would adjust so that there is always on-average N bids per block based upon a X% probability of taking more than 10 minutes per block.   The key is to make sure that the proof-of-work is just difficult enough to prevent everyone having the right to flood the network with solved blocks.   A block with no transaction being generated on a network with viable transactions represents a 10 minute DOS. I am trying to innovate here and one would think that finding a way to keep security, enhance decentralization, and reduce power consumption all at the same time would at least merit more meaningful discussion.    If they pick the same dividends then I pick the block that has a hash value closest to the target hash and only one block will qualify and it will be universally agreed upon by everyone.  We are looking for ways to get people involved, but due to the level of interest from multiple big investors we don't currently have a plan for handling many small investors.   Here is how I think small investors can profit:1) Start using the network on day one and buy the bitshares as soon as the chain is launched. 2) Invest in BitShare related startup ideas / businesses.   For example, lay the ground work for the first BitStore that takes BitUSD in exchange for goods and services and work with us to launch it on day one. 3) Propose a bitshares related startup business and we may help provide seed money to bootstrap your business.  You will profit based upon the success of your initiative and we all benefit by the growing ecosystem.  BitShares is an entire ecosystem that works with bitcoin and we will not and cannot own it all.   So make a claim on some area and go for it!Of course, none of what I said above should be interpreted as a commitment to any particular plan on our part.Our commitment not to pre-mine is our primary investment option for early adopters and small investors.  I addressed time sync in the prior post.  All I really care about is that the nodes that communicate with me follow the rules and not broadcast more frequently than 10 minutes after they last replaced the head node with a better block.  If they attempt to build off of the prior head node in less than 10 minutes they get disconnected and flagged in my address table... or perhaps challenged with a proof of work.  I do not think it is considered centralization to trust someone with a public face to merely confirm what you were able to independently arrive at baring any man-in-the-middle attacks.   Particularly if any number of 'known people' could be used and you are not trusting these entities word about anything.   They have too much to lose by lying to you.  Thanks for your feedback and thoughts, send me an address and keep it coming.    I have been thinking about this particular problem and I believe the key isn't in agreeing to a universal time, but elapsed time.  I know exactly how much time has elapsed in the past 10 minutes with very little drift.   Every node sending me messages also knows exactly how much time has passed.   Furthermore, almost every node has access to NTP so has a reasonable estimate of what to expect.    Every node would only build off of blocks that had relatively accurate times (in their opinion) and every node could validate that every other node waits at least 10 minutes before sending them candidates for the next block.   So there is no need to agree on universal time, only to vet that other nodes only broadcast at the proper intervals.   Nodes violating this social behavior would be disconnected.    The network would develop a rhythm.  So lets define a simple heuristic that a node could use with near zero knowledge... it will only forward new blocks it receives 10 minutes after receiving the last block it accepted.   The node knows who informed it of that last block and thus could instantly detect other nodes 'cheating' and sending too soon.      This approach should be entirely resistant to Sybil because all information I rely upon is given to me directly.   I am still at risk of someone entirely controlling all of my connections and sending me bogus blocks.  But this is only really an issue for 'first time connections that are boot strapping'.    Once you have a large local database you can reconnect to enough nodes to be confident you are not getting a bogus block.   A node could be particularly picky, but this does not work like Ripple in a very critical way.  There is still a Proof of Work (how ever minimal) that is used to elect someone to choose which transactions are included in the block.  There is also profit made for having your block accepted by others that you would lose by including an invalid transaction.   As a result, POW is used to solve the mempool selection problem, and 'consensus' / desire to win the next block will provide profit motives to accept any reasonable block.    An unreasonable block would be any block that failed to include many valid transactions.  These blocks would not be broadcast across the network even with their proof of work.Chain volume is easy to fake, but not volume-by-coinage.   Furthermore, all of these fake transactions would have to be broadcast to the entire network and the vast majority of the fees would be paid as dividends to everyone else and thus not go to the attacker.   This attack relies upon isolating an individual and all of their connections to the valid chain.   I suspect that if someone were able to isolate a user on the bitcoin chain, they would also be subject to the same attack...  *except* that they wouldn't be able to maintain the difficultly level.  With BitShares all users are required to move their funds once per year to prove ownership of the private key.  These expected transactions could not be faked and in the time it took to synchronize with the network one would quickly notice a pattern of these 'about to expire accounts' failing to move.    Bitcoin has everyone comparing notes off chain on what the expected difficultly should be.  If we didn't check the expected difficulty & gensis block then anyone with an ASIC could generate 4 years of history in no time and then trick anyone who connected to their bogus nodes.   The one benefit of a proof-of-work system is it makes it harder to pull a man-in-the-middle attack.   So the question becomes how difficult is it for a large entity to pull a man-in-the-middle attack?   Second, if every single BitShare business with a public face was publishing their view of the consensus block via a SSL connection, then you are still decentralized and not trusting any one entity.   What are the chances that Mt. Gox, BitStamp, BitInstant, and Google are all going to lie about their view of the network?    Every merchant has a vested interest in both their name and the value of the ecosystem to prevent man-in-the-middle attacks and therefore the opinion of major players is the consensus opinion because these are the guys everyone is trading with.  We are not trusting them for the balance and we should be able to independently come to the same conclusion they came to.  We only check their 'opinion' to detect a man-in-the-middle attack.   Your feedback took some time and is worthy a tip, send me an address. This project is our passion and (for me at least) gives my life a purpose far beyond simply making money.   This is the first step of many on my journey to see freedom for all in my lifetime.  We are benefiting from the work that Satoshi did to prove the concept of block chains and the viability of a crypto-currency as a store of value.   Without the past 4 years success of Bitcoin the idea of Bitshares and the rapid recognition of its value by VC firms would not have been possible. Satoshi had the benefit of being anonymous... we have the benefit of funding.  Time will tell which is more valuable to living a long and prosperous life! We are actively seeking feedback on this thread: https://bitcointalk.org/index.php?topic=253120.msg2693133#msg2693133   This is a new alternative proof of work system that will result in even less inflation and guarantee that mining will be even more decentralized and secure than any CPU-only algorithm could ever hope to accomplish.    This is why my new proposal is required.  While this may be seen as normal in the bitcoin world, it is also identical to a DOS attack and slows down transaction confirmation times.My new proposal is a Proof of Minimal Work rather than proof of maximum work and relies upon miners including 90% of the 'expected' transactions in each block and only allowing for a minimal variance based upon network propagation delay.https://bitcointalk.org/index.php?topic=253120.msg2693133#msg2693133
BitGold is the long-side of a short position entered on the blockchain network.  To create it someone had to own enough BitShares to buy 1 oz of gold and then short sell into the market a BitGold to receive BitShares in return.  This creates 2x the value of Gold priced in BitShares held as collateral.   Because the BitGold vs BitShare market is executed on the blockchain, the miners can do a margin call if the price of BitGold rises and causes the collateral to only equal 1.5x the value of Gold.  The miners would the repurchase BitGold on the market to cover the position and return the BitShares back to the individual who went short. You are not moving USD with ripple, you are moving promises to pay USD.    If you use it in a decentralized manner you must publish your friends network and trust relationships... far more valuable information than facebook collects. Of course your wallet ID appears private, but as soon as your or anyone you deal with registers with a single regulated gateway all privacy is gone and network analysis will do the rest.Having used Ripple, it is very complex.  Understanding BitShares white paper is like understanding the Ripple design documents and is very complex.  Using BitShares will be easier than using Ripple. BitUSD is a collateralized  derivative backed by a crypto-currency.  Market forces bidding / shorting BitUSD relative to BitShares will force the price of BitUSD to track the value of USD as the only profitable way to invest in BitUSD.  The BitShares system is unique in that there are no certificates or IOUs and thus no bearer instruments nor potential for default.Ripple is either centralized through regulated gateways or subject to default of your friends and family.  Also, while you may trust your friend to pay you back eventually, those credit lines are not always liquid!   I can just imagine needing $20 USD and asking my friend who owes me $20 on the Ripple network to 'pay up now' and him telling me to wait until payday.     This is why we spent so much time defining the criteria of the ideal exchange.   OT fails almost all of the criteria.1) It is based upon trust in issuers2) The model of broadcasting price information via BitMessage is not a valid means of establishing a market price.3) Operating an OT server is like operating a mini centralized exchange.4) Issuers are creating bearer bonds (illegal)5) No dividends / financial incentive for *everyone* to use the system.All of that said, I still believe that there is a place for OT servers as high-frequency trading hubs and *trusted* banks for digital cash.   OT needs to be marketed at current exchanges as a far more secure, audit-able, and accountable system.  If Mt. Gox or BitStamp implemented an OT api for managing your account it would be a major selling point. BitShares will completely displace Ripple for handling fiat.https://docs.google.com/document/d/1RLcjSXWuU9vBJzzqLEXVACSCdn8zXKTTJRN_LfoCjNY Project Invictus = Invictus Inovations, Inc Our mission is to provide decentralized solutions to centralized problems.BitShares is one our first products out of many in the pipe.  We are not trying to operate in stealth mode.  We have been working 80 hours / week in planning, etc.   The latest white paper is here: https://docs.google.com/document/d/1RLcjSXWuU9vBJzzqLEXVACSCdn8zXKTTJRN_LfoCjNY   and we would like as much help / feedback from the community as possible.We have registered our domain names and are looking to work with the community to develop this entirely in the open.    We post here in these forums on a regular basis and collect the contact info of everyone interested in the project.   We are looking for a good web developer / admin to setup and maintain a dedicated forum, mailing list, and website.  In the mean time if you would like to help make this project a success we are looking for feedback on a new system to keep mining decentralized and minimized via Proof of Minimal Work.     We are paying tips to people who prove helpful.   Anyone who wishes to be actively involved and contributing can start working with us immediately and if your contributions prove valuable and we have the capital we would be looking to hire the best, most passionate developers.    If you have something to contribute let us know!  * EDIT*  Thanks to everyone who participated in this discussion, the feedback has been invaluable.    New new tips will be paid, but discussion is still desired.     I am starting a tip-bounty for those who can help analise and provide the most insightful and helpful comments.  Project Invictus (Charles & I) have a proven track record of paying tips for good feedback.  Hopefully the discussion will be worth while on its own, but I recognize that this tip-bounty infers no obligation on me to pay any particular poster.     Premise:  -  Proof of Work is a lottery / voting system that can always be bought by the highest bidder.   -  Real security in the Bitcoin chain comes from consensus and public records and not from mining.-  The lottery system is required to select who gets to submit blocks to the network as decentralized 'decision' making system.  It also helps facilitate the initial distribution of a currency.-  A determined adversary (say a government) could attempt a DOS on some or all addresses by regulating mining pools or purchasing a large number of ASICS.   The solution to this DOS is also the proof that mining is irrelevant from a security perspective.  -  Fees are required to ration bandwidth and storage, these fees shouldn't be waisted on electricity and power consumption because this makes the network 0-sum and potentially operating at a slight loss.  -  To keep fees down, miners must centralize and the blockchain bandwidth must grow beyond what the average individual can handle.   Solution:   Have miners compete to work for the least fees in a network where fees not paid to the miners are paid as dividends to those who hold the currency.       Mining will only be used to decide who gets to submit a block and rate-limit block production, but acceptance of the block is based entirely upon maximizing dividends, minimizing mining fees, and including 90% of the expected/broadcast transactions among many other factors (coin age, transaction volume, etc).     Bitcoin already operates on consensus (see March 2013 fork) and mining power is just a horrible waste.     Details:   Implement a time sync protocol for the network that keeps all nodes within a couple of seconds of each other.   No blocks will be relayed until 10 minutes after the prior block.   50% of the time there will be multiple candidates found in that 10 minute period, the candidate that mined at the lowest fee is selected rather than the 'first to publish' because the lowest mining fee pays the highest dividends.   Chain forks would be easily identified and the minority fork could be identified by transaction volume.  The cause of chain forks will always be because two different clients are following different rules and never because of a mining dispute or race.   Everyone could easily compare notes off-chain to make sure that they are working on the global consensus and not some fake chain.  Many trusted companies would periodically publish transactions confirming they are using the current chain, perhaps by signing blocks they happen to mine.      I believe the economics of this system will cause miners to compete to use the least-resources possible per mining fee paid to the miner.  Mining would not completely stop because the difficulty would adjust toward 0 until someone steps up to broadcast a block every 10 minutes.   Because there is no potential for chain-reorgs, confirmation times be reduced to 2 blocks and block rates could be increased dramatically.  Proof of Minimal Work would prevent centralization and ASIC development entirely because their business model depends upon doing the most work the most efficiently.   Proof of Minimal Work is based upon accepting the minimim fee possible for the service you are providing to the network putting together and broadcasting blocks approved by all other nodes every couple of minutes.  I am looking for attacks on this system as well as clear reasons why such a network would be secure.   Would an alt-coin based upon such a Proof of Minimal Work have value over say something like Litecoin or Proof of Stake?  Can you convince me that Proof-of-Work is actually providing security and not just a back door?            Project Invictus just formed Invictus Innovations, Inc and is very well capitalized.   I am the CTO and have just started full time development and we are in the process of looking to hire the best tallent in the Bitcoin community for 2 or 3 more full time positions.    If you have skills and experience in C++ / bitcoin please contact me.At the moment we have 3 people working on this full time and have an order of magnitude more funding than Project Holy Grail.     We will be making more announcements in the near future with multiple product releases scheduled over the next 6 months. To sell a BTC requires that you first bought some BTC and because supply is limited you would need to buy the dips and accumulate a large sum of BTC... PUSHING THE PRICE UP.   Then you would have to create a sell wall.  A large number of BTC for sale at $200.   Once all BTC for sale at $200 are bought and held by others, there is nothing they could do.Lets assume there were 10M BTC total in circulation and an attacker some how acquired half of it or 5 M BTC, at $200 per BTC that would be one 1 Billion dollars worth.  They would be able to peg the price at $200 max until other people bought up 1 billion dollars worth at $200.Assuming they had printing presses and were no concerned about losing money, they could continually buy anytime the price fell below $200 to restock their supply.   The effect of this mode of operation would be to provide BTC with a PEG at $200 (never going above nor much below).  This peg would then increase demand and ultimately the money printers would be losing money while maintaing that peg.Instead what they would do is introduce wild volatility.  Buy up $1 billion and pushing the price up to $400, then sell it all pushing the price down to $1.   The problem is that such artificial manipulation would allow 'true believers' to buy the dips and sell the highs and make a ton of money at the expense of the manipulators.  Because they do not use leverage, the manipulators would be unable to shake their position.   Therefore speculators who are attempting to ascertain the true value of BTC would end up providing an equal and opposite reaction and making a ton of money off of the manipulators to the extent that they could separate the true price signal from the artificial noise.  I have looked at those systems and the proof-of-stake creates a whole new can of worms, but is on the right track of attempting to securely reach a consensus without any single actor being able to dictate terms.   Part of the consensus process would be factoring in the weighted average coin-age spent in a block.  Any blocks that do not spend trx referencing old outputs that have been broadcast to the network would automatically be suspect.   This would prevent someone from moving a lot of coin between their own accounts to help drive consensus.For someone to 'attack' this network they would have to:1) Set the mining reward on the blocks they generate to 0... this means they would not be able to recycle / profit from fees on their own transactions.2) Have enough hashing power to be the first one to find a hash after 10 minutes have passed.3) Generate blocks that follow all of the rules of the network, including 90% of known valid broadcast transactions prioritized by dividends paid and weighted by coin-age.To perform a 'double spend' the spender would have to isolate a single client from the global consensus, but this attack would not be sustainable because of the coin-age requirement as well as validation that you have the right consensus that occurs off-chain.   Imagine every major business published & signed the consensus hash.  An attacker would be unable to isolate someone and convince them they had received funds based upon a bogus consensus / double spend.  Lets put things another way, assume the government *did* invest in ASIC hardware and started controlling 90% of the hashing power?   How would the community respond?  Change the hashing algorithm?   What if the government declared a war-on-crypto and intended to out mine any new chain ever created so that they could censor transactions or accumulate the entire money supply or implement a tax or registration scheme?Moral of the story... CPU, GPU or ASIC power is centralized control.  The resources required in this case is the CONSENSUS of everyone in the community.  Nodes do not blindly follow the lowest hash with valid transactions.  No double spends possible here.  In fact, no chain re-orgs after 2 blocks are even likely.  I would argue that the mining-intensive approach actually leads to higher potential for double spends. Let see here... I arranged for MARKET FORCES to ditate mining in a way that is relatively simple and would probably work, but clearly you haven't even tried to understand.   Couldn't we all agree that it would be ideal to find a crypto-currency that didn't result in rooms filled with energy sucking ASICs producing nothing but low hash collisions as a means of reaching consensus on which block goes next? What if we could rig the market forces in the network to provide all of the security benefits of Bitcoin while simultaneously minimizing the computing resources required to reach network consensus?   This would be the ultimate green/energy efficient solution and far more secure than Bitcoin as it would also eliminate the 51% mining power attack.   Mining is required for the following reasons:1) distribute supply of the currency2) perform a lottery on who gets to create a block3) control the rate of block generationUltimately mining is not what secures the network (contrary to popular belief) because it is consensus of all clients on the network as to which chain is the "true chain" that matters.    Mining is just one way of voting on that consensus and ultimately that voting is meaningless.    Suppose there was a 51% attack the attacker would still have to generate blocks that are ACCEPTED by the rest of the network.   The chain split in March 2013 was an example of what could happen with a 51% attack and half of the network would simply ignore it.  All that a merchant / client would have to do is 'double check' that they are both on the same chain *and* that their chain was the 'best' chain by some profit-based metric.  And of course everyone in the market would have huge profit incentive to observe the group consensus for a few blocks as the primary means of confirming a block.   So all you really care about is that everyone who you want to do business with is using the same chain and following the same rules as you.  As long as the nodes in the network have a profit incentive to propagate transactions and build on blocks that include the most profitable transactions all nodes will work together to reach that consensus.   Given that security is provided by the market demand for consensus and not by hashing power, all we really need is a way to distribute the supply and restrict the rate of block generation.   So here is my proposal:1) Create a dividend paying alt-coin that pays at least 50% of all mining rewards and transaction fees as dividends.2) All clients only accept blocks that contain a high percentage of the transactions that they would have included and reject any blocks that disagree to a large degree.   Their profit motive is in maximizing dividends and ensuring an honest network that boosts the value of their holdings.3) You introduce a MINIMAL time window after which receiving one block that your client will accept another block.  Call this minimal period 10 minutes.  This means that 50% of the time there would be a race with multiple miners finding a block within that 10 minute window.   Who ever was mining for the lowest fee (highest dividend) and had the highest hash value that met the difficulty level would win the auction and those who demanded too-high of a fee will have wasted their CPU power.    4) Under this system the difficulty level would move toward less and less difficulty and lower and lower fees paid but never quite reach 0.    The block generation rate would still remain constant, new coins would be issued through dividends.  Of course, 50% of the time you would still be the first one to find a block and thus could collect your mining rewards.  There are now two mining strategies:  mine with the hope of being the first one after 10 minutes, or mine with the hope of being the lowest fee less than 10 minutes.   The difficulty would of course adjust such that 'on average' a block is found every 10 minutes.  There would be no way to 51% attack the network because an attacker would have to generate blocks that everyone on the network 'agreed with' or they wouldn't get consensus.   This means that an attacker would have to convince 51% of merchants and customers to change their wallet software in order to change the consensus. A benefit of the 'consensus approach' is that you effectively eliminate any chain reorgs and double spend attacks become EVEN HARDER because there is no longer any means to *force* the rest of the network to recognize your double spend simply due to a higher hashing power.   The economics of the situation will always push the profit from mining toward the cost of production.  If a home buys an ASIC and uses less power they will get less BTC once the ASIC is widely deployed.     The market makes sure there is 0 free money and pushes all profits toward 0 due to competition.   The result of pushing profits toward 0 is that no matter what you with the BTC system the power consumption costs will approach the value of the BTC produced.    The point is that we cannot and do not want to control who can mine, what we want to control is the economics of mining that reduces the ROI for specialized hardware below that available to the masses.  This means CPU mining and reducing the inflation rate of the currency much sooner.   BTC inflation effectively price-fixes mining to be incredibly profitable for far too long (100+ years).So here is how you setup the economics of mining to keep it decentralized.1) capital costs for the 'home miner' should be near 0 because of dual-use.  This means that someone building specialized hardware has to recoup the cost of their hardware before they can start competing with the home user on price of electricity.   2) the 'ideal asic' for the POW should be dual use and widely available to everyone.  3) the cost of processing transactions is born by everyone who uses the network, miners shouldn't have right to 100% of all transaction fees or inflationary rewards.    4) The real goal of the network is to build consensus as nothing else matters.  It doesn't matter how much work a miner does on a block if the rest of the network rejects the block.   In fact, the only purpose of the proof of work is to rate-limit blocks for synchronization purposes and to control distribution of the initial coins.   Once all of the coins are distributed you could allow anyone who pays the highest fee to generate the block provided everyone else agreed with the included transactions and there was some means aside from mining power to determine the group consensus.  Miners C, D, E and F see a profit opportunity and buy some ASICs (consuming power to produce) until Miner B spends $20 in power to earn $2 per year while collectively Miner's B,C,D,E and F spend $9.99 in power to earn $10 per year.Miner A never spent $100 to earn $10.Unfortunately, ASICs represent a significant capital investment and are specialized... so what happens instead is that..Miners A - Z who were CPU mining and earning 1% profit are replaced with Miners A-C which ASIC mine and still earn the same 1% profit.    Assuming profit rate and BTC value are the same, the energy consumption will be identical.  It just means that you will end up with more ASIC chips until the power consumed by all ASIC chips equals that consumed prior to ASIC chips.    Only now you are centralized rather than decentralized.  The power consumption issue is 100% irrelevant when you think about the fundamental nature of what is going on.   Hashes are simply a lottery used to distribute who has the right to submit a block.   The number of tickets purchased depends upon the cost of the ticket and the payout for winning.    The only thing an ASIC does is lower the cost of the ticket for those who invest in ticket printers.   As a result, more tickets will be printed until the sum cost of all tickets is about equal to the payout for winning.    Therefore, energy consumed is always about equal to the value of finding the block. Unfortunately, without miners to confirm your transactions, it is entirely possible for a government that controls hashing power to control when transactions get processed.   What good is your bitcoin if you cannot spend it unless you register your address with one of these mining entities?There is another aspect to this, mining use to represent a cost effective way of buying bitcoins.   Now mining is no longer cost effective.
In my opinion, one of the goals of Bitcoin was that the network would be 'decentralized' and owned by 'everyone' and 'no one'.    However, it is very clear that there are two classes of people in the Bitcoin world.  Those who 'own the network' and those who 'pay to use the network'.    What I mean by this is that only miners profit directly from the operation of the network.  Everyone else pays the miners through inflation or fees.   Mining is now centralized to the point that 3 or 4 people could colude and control the majority of the hashing power.   These people own the network, everyone else pays to play.It will always be the case (with Bitcoin) that specialization will tend make mining profitable only to a few and  benefit from economics of scale.  Unfortunately, the cost of running / operating the network isn't entirely born by the miners.  Every user is providing bandwidth and mirroring services and these users are not reimbursed in any way.  Miners, because they are centralized, will tend to favor more centralization, larger blocks, etc until all aspects of the network grow beyond what can be truly decentralized.   I contend that an ideal crypto-currency should allow everyone who owns it to profit from its use and that owning & mining should be equally profitable.   This would be accomplished by paying dividends to owners from 50% of the transaction fees.    From a capital perspective, owning such a crypto-currency would be just as profitable as mining such a crypto-currency.   Competition would drive the ROI of investing in ASIC/etc to the dividend rate and no lower because if given the choice between buying ASIC for $1M or buying $1M of the crypto-currency both would expect the same rate of return yet going the ASIC route is far more risky.     The effect of a dividend-paying crypto-currency is that it would be even less inflationary that Bitcoin.  If you remove half of the inflation bitcoin has experienced then the total value of everyone's bitcoins would be almost 2x.  If there was profit to be made by holding Bitcoins then their value would be over 2x. I have come up for a new take on name registration which I believe is superior to Namecoin and would like to get some feedback on it.   Before I describe my solution I would like to review my design criteria:1) No artificial rate limits.2) No price fixing.3) Minimal carrying costs.4) Everyone benefits when a new name is registered.5) Names should be put to the highest economic purpose.6) Initially 100% of all potential names belong to the network.Based on those criteria I have identified the following system:1) When someone wants to register a new name, it goes up for auction to the highest bidder.  2) After X days with no bids the name is now owned by the highest bidder.3) Proceeds from new name auctions are split between the miners and BitName (the backing currency) holders.  In effect, you are paid dividends simply for holding BitName in your wallet. 4) Names that are already owned may be transfered or put up for auction.  When they go up for auction again the proceeds go to the prior owner rather than the miner.5) Once per year everyone must prove they still control the private key or the name is released. The result of this system is that mining BitName is like getting a share in all unclaimed names.  Names are like real estate and if you want to 'buy' a highly in demand name you will have to outbid everyone else who wants that name.  Those who mine early and often will get additional purchasing power ensuring they are able to buy the names they want in the future.  Those who attempt to 'squat' will end up paying more for the 'good names' and running out of funds.  They would be forgoing dividends once they purchased a name and have to rely on the appreciation of the name they just bought (and paid the highest price for).  In other words, squatting would make no financial sense under this system.Lastly names like:  Bytemaster31415 would probably be very cheap to acquire as no one would have any profit motive to out bid me.  If they did, I would just change my name to Bytemaster4321 and leave them stuck holding an almost worthless name.Thoughts? What are the applications for this and how much value would it have in the market?It is already possible to require the production of  X  such that SHA256(X) == Y is a check for spending.So you can can use an Error Correcting Code to create 10 chunks such that any 5 of the 10 chunks can be used to reassemble the entire key.    Then create a transaction that generates outputs spendable when X is provided and after a certain number of blocks have passed.    Then broadcast  chunks 0 to 10 to a whole host of random people with instructions on how to claim the money.   Once 5 people claim the money the private key is revealed and the data can be decoded.No one would reveal X before the transaction could be spent because only the first one to claim it gets it.   The one thing I have not seen is any system where escrow agents post surety bonds with other escrow agents and where the blockchain prevents the escrow agent from doing anything other than releasing the money to some split between the two parties.  I have also not seen any systems that allow each user to specify their own escrow agent where the escrow agents have agreed to allow a 3rd agent settle the dispute if the two escrow agents cannot agree.    Agents only get involved progressively if there is a dispute.   Combine this with some Nash Equilibrium-like features to encourage parties to settle rather than dispute and you have a very solid system that almost never has to be used.Obviously the more 'levels of appeal' and surety bonds posted the more people that would have to colude to pull of a scam and ultimately no one would bother trying because they would take losses due to posted surety bonds. Let me rephrase that, this system is perfectly legal it just doesn't provide you receipts that are required to report losses.    You of course have every transaction you made on your computer and can prove you own the private keys so you have all of the documentation you need for any profit and loss.   You can always Self Report your income and forgo claiming losses.     Or you can calculate your net position and only report the gains. Technically you have no 'profit or loss' until you convert back to fiat and any time you make a trade with someone for fiat you can get a receipt. If you want to do things 'legally' then I suspect you can always go through a centralized exchange that will vouch for your ID. No need to manually adjudicate results given a large enough market.   Nash Equilibrium will force people to 'settle'  their positions honestly if the only way with withdraw your funds from the betting pool is to agree to the split ratio on a market.  Those who are willing to settle closest to 50/50 will be most likely to get their funds out of escrow in an ambiguous outcome.  The honest players in the market will tilt the price for getting out of escrow in one direction or another and after the price crosses a 75:25 split, the network could automatically call it.   This entire algorithm could be implemented on a blockchain and be very reliable.  How about taking the idea of Bitcoin to a new level with BitShares:https://docs.google.com/document/d/1RLcjSXWuU9vBJzzqLEXVACSCdn8zXKTTJRN_LfoCjNY/This will solve the volatility problem and PAY people interest to save their USD in BitUSD.  THe reduced volatility and built in exchange combined with the demand for a real rate of return would drive liquidity of BitUSD to much higher levels that Bitcoin.  Merchants could accept BitUSD and all fees would be lower.The idea of Bitcoin will live on and grow and mature.  As for real things being purchased with Bitcoin... it is funding a ton of labor and my startup company to the tune of 6 figures by making it easy to move funds despite insane capital controls. Very interesting idea!  Watching this thread. I appreciate your input and never intended my statements to be perceived as unappreciative or critical of your feedback.  This issue of 'claimed theft' is one that I am taking seriously.So the question is does the 'Terms & Conditions' represent a contract or a waiver?   If it does represent a 'contract' sufficient to protect you from accusations of theft, does that contract entirely independent and separate from the asset you would be purchasing?  Are contracts of this nature regulated?How would seizure by force work?   The only way to seize your BitAssets would be to seize your private keys or brain wallet.  If a person does not want anonymity they could simply publish their full name and address along with their BitShare address on a forum somewhere.  There are two aspects to BitShares:1) The exchange and storage of BitAssets that have value tracking gold/silver/usd without counter party.  This is entirely decentralized, pseudo-anonymous, and secure.2) The escrow service that allows you to exchange BitUSD for USD.   With this service you must reveal your bank account number for wire-transfer purposes.  In this case the exchange is not 'anonymous' between the two parties, but still private unless one party decided to publish the other parties bank account number.   In-person for cash is the 'most anonymous' way to trade BitUSD for USD provided the person you are trading with doesn't take down your license plate, run your picture through a database, or ask for Photo ID.   Are you going to accuse someone of stealing your money when *you* initiate the wire transfer?    There is a crypto-signed statement that states that the transfer was voluntary and non-refundable.  It also states that the sending of the funds does create a legal relationship or liability on the other parties (escrow agent, etc) to perform any action in exchange for receiving your funds.  This should be more than enough to establish the 'intent' of the wire-transfer. If you are concerned about someone claiming theft then stick to in-person transactions in public places.   Note:  the bid/ask exchange system does not suffer any of these problems.   You do not make a physical exchange (or wire transfer) for every exchange, but you keep your 'balance' with the exchange like you would with a bank account or Mt. Gox.   With this balance (BitDollars) you could buy / sell goods directly. If you have to fly to Japan to do it then Bitcoin is in serious trouble.  Do you have the ability to implement it or the funds to pay for it? Suppose you had over 1000 BTC that you needed to convert to cash in less than 30 days.... what is the best approach? The thing you overlooked is that I have created a crypto-subcurrency trading on the same blockchain that maintains purchasing power with an interest paying dollar bond.   Therefore, you can hold BitDollars without exchange rate risk nor fear of default because there is no 'issuer' and the value of the BitDollars is always backed by 1.5 to 2x their value in BitShares.  The interest rate is 'variable' and thus a BitDollar will fluctuate against actual dollars, but only within a narrow range similar to how the value of Mt.Gox USD fluctuates with supply and demand for USD deposits on the exchange. The trades between BitDollars and BitShares or BitGold etc are atomic and occur in a deterministic manner in the blockchain.   The only way to 'undo a trade' is to generate a longer block chain and thus requires a 51% attack.  All trades are 'confirmed' within 6 blocks (or about 30 minutes).    What defense do you have when you hand someone a tip in a restaurant?  There is no contract or agreements, couldn't you accuse your waiter of theft? The ability to claw back funds is designed to force dependency on courts.   The only thing the gov needs to do is to legalize clawback of all crypto currency related trx and thus give scammers a license to steal. This is why we need a crypto currency that has no insurer yet tracks the value of usd.  Ie. bitshares  Sender & Receiver address is anonymous.The receiver could filter messages on the client side, but they would still flow through the network. Tip sent, and algorithm updated...  When a GPU 'suppresses' execution of conditionals 'per stream' it stalls the streams that are executing a different data path.  SIMD branching allows branching and looping inside a program, but because all processors must execute identical instructions, divergent branching can result in reduced performance. For example, imagine a fragment program that decides the output value of each fragment by branching using conditions based on random input numbers. The fragments will randomly take different branches, which can cause processors that are running threads for fragments that do not take the branch to stall until other processors are finished running threads for fragments that do take the branch. The end result is that many fragments will take as long as both branches together, plus the overhead of the branch instruction. SIMD branching is very useful in cases where the branch conditions are fairly "spatially" coherent, but lots of incoherent branching can be expensive. NVIDIA GeForce FX GPUs support SIMD branching in their vertex processors, and NVIDIA GeForce 6 Series GPUs support it in their fragment processors.Condition codes (predication) are used in older architectures to emulate true branching. If-then statements compiled to these architectures must evaluate both taken and not taken branch instructions on all fragments. The branch condition is evaluated and a condition code is set. The instructions in each part of the branch must check the value of the condition code before writing their results to registers. As a result, only instructions in taken branches write their output. Thus, in these architectures all branches cost as much as both parts of the branch, plus the cost of evaluating the branch condition. Branching should be used sparingly on such architectures. NVIDIA GeForce FX Series GPUs use condition-code branch emulation in their fragment processors.
Because you can incrementally calculate the state as you progress because the first byte does not depend upon the last byte and thus nothing that forces the user to store more than a very small amount.     I would count this as a significant weakness that should be addressed (and I will be updating the algorithm to xor the last bytes with the first bytes), though I suspect that it would still be inherently single threaded and thus not faster on a GPU and thus not qualify for the bounty.   I will tip you 1 BTC for your post even though you didn't actually tell me how to do it.Send me an address for your tip.    It is quite clear that the OP could have done a google search and generated the results you provided in about 5 minutes.  Furthermore, the list you provided appears to be somewhat inaccurate.From a value perspective, you have not produced anything close to worth $50 or $75.  Any reasonable person would feel ashamed to demand $75 for a google search when it is quite clear the OP wanted something that involved at least a couple of hours of effort.I would recommend that if you are so concerned about collecting a bounty that you are willing to call someone a scammer that you should first establish a more detailed and objective criteria.   Without a meeting of the minds there is no contract and thus no room to call anyone a scammer.Charles has a history of paying bounties.  If you think he isn't offering enough, then say so and negotiate a price.   You have no more right to be the sole judge of meeting the customers demands than those curb-side window washers that demand payment after washing your windows. We are in total agreement with regard to Invictus.   This is mostly just exploring ideas.  I was hoping this thread would be of general use for many different projects. Some ideas that we are considering:1) We could pre-sell CPU hours on machines that are designed to be the most cost-effective miners and the value to the investor would be not having to manage mining hardware, software, utilities, overheating, etc.   The advantage to the company is that it isn't actually selling BitShares for cash, it is selling CPU time for cash.    Any unsold CPU hours would be used by the company for its own mining.    The profits from selling CPU time could then be rolled into development.2) We could launch a mining pool in parallel and give investors a cut of the fees from being the first/only/most trusted mining pool.3) We could waive fees on the mining pool for investors and charge higher fees for non-investors until a competing mining pool could get set up.   The default client would be configured to use our mining pool.   You are correct... but I the point of this thread is to innovate new alternatives to pre-mining which we already know has strengths and weaknesses.  Yes, but would you believe that a condition of some of our early investors is a promise not to pre-mine?      I fully understand how much economic sense it makes to do pre-mining, but there is another angle to consider.If the project is open source, then someone could fork the chain immediately with 0 pre-mining and win everyone over. https://docs.google.com/document/d/1RLcjSXWuU9vBJzzqLEXVACSCdn8zXKTTJRN_LfoCjNY/edit We are looking to raise capital and allow members of the community to 'invest' in the development of the BitShares P2P Bank & Exchange (P2P B&E).   We would like this to be a community project and not another Ripple.   We would also like to avoid all pre-mining.The challenge is creating an investment structure that allows anyone to put in small or large amounts of money and actually see a return greater than simply waiting for someone else to fund it and mining upon release.  Ideally this structure could be set up without requiring any financial instruments like stocks.  If you are interested in investing in BitShares then please help us come up with a fair, simple, and profitable investment vehicle for everyone. I would also point out that you will need amazing contacts to actually run an exchange and not get shutdown.    What new value are you bringing to the table that is better than the competition? First of all, you face stiff competition from an open source exchange that is already being developed based upon the LMAX arch. which is already going to be the fastest thing out there.   They are organized, have money, and support of the community and bitcoin media has already covered them.  (Don't remember the name right now).If you are a talented c++ developer then perhaps you will want to invest your time helping to develop the Invictus / BitShare P2P exchange. https://docs.google.com/document/d/1RLcjSXWuU9vBJzzqLEXVACSCdn8zXKTTJRN_LfoCjNY/ I have created a new proof-of-work for use in BitShares that I hope is entirely GPU proof and ASIC resistant while being as fast as possible to verify.    I am working to secure an additional 60 BTC to back this challenge.  The algorithm that I am using is posted on GitHub here:https://github.com/bytemaster/bitshares/blob/master/src/proof_of_work.cppThe bounty can be won if you can get any GPU to perform 25% faster than the most optimized CPU code I can produce running on the fastest CPU I can find.   The test will be based upon the total number of unique hashes that can be performed in 10 minutes.This proof-of-work is computationally difficult even for a single hash, but must be so to prevent optimizations to the required memory foot print.    The maximum level of parallelism achievable per GB of RAM is 8, and the highest   end GPUs now have 4 GB of ram which means they could in theory support 32    parallel executions of this proof-of-work.         On GPU's you only tend to get 1 instruction per 4 clock cycles in a single   thread context.   Modern super-scalar CPU's can get more than 1 instruction   per clock cycle and CityHash is specifically optomized to take advantage of this.    In addition to getting more done per-cycle, CPU's have close to 4x the clock   frequency.    Based upon these characteristics alone, I estimate that a CPU can execute the   serial portions of this algorithm at least 16x faster than a GPU which means   that an 8-core CPU should easily compete with a 128 core GPU. Fortunately,   a 128 core GPU would require 16 GB of RAM.  Note also, that most GPUs have    less than 128 'real' cores that are able to handle conditionals.     Further more, GPU's are not well suited for branch misprediction and code   must be optimized to avoid branches as much as possible.      Lastly this algorithm takes advantage of a hardware instruction that is   unlikely to be included in GPUs (Intel CRC32).  The lack of this hardware   instruction alone is likely to give the CPU an order of magnitude advantage   over the GPUs.  That said, the algorithm does not depend solely on the performance of this instruction.   I am speculating that the number of CPU cores will grow at about the same rate as available RAM in GPUs and therefore GPUs will never gain the upper hand over CPUs for this hash.I am also interested in any feedback on how to improve the algorithm further, make it run even faster on CPU's without compromising GPU difficulty.  It currently takes about 0.75 seconds on a 2.3 Ghz Core i7 Macbook Pro for a single hash.  *edit*   If you intend on tackling this challenge and actually writing the code to prove it, please contact me so that we can have a meeting of the minds regarding what is required and we can lock in the algorithm.  The issue is whether or not the peers are actually doing anything illegal.   In the case of sharing 'copyrighted' material the act was illegal for other reasons.   In the case of this exchange what is being exchanged is information and not promises or contracts and thus a completely new asset class that (from what I can tell) does not fall under any of the existing regulations because it was never before even conceivable.  I would suspect that there would be a couple 'trusted' but 'anonymous' members on this forum and other places that could serve as the root of the trust chain.   They would be referenced by other anonymous agents as someone they would let judge disputes.  From this trust a web of inter-connected bonded agents would develop.  Agents make money on transaction fees that reference them so they would have incentive to post bonds with as many other agents as possible.  Eventually the agents earn a reputation for their speed and quality of service and therefore people can select agents.  People can also observe the transaction history to see which agents are the post popular and have the best fees.    I will be going into much greater depth on the escrow system in a follow-on paper.    I have been posting a paper about BitShares an a new P2P exchange and have included a legal interpretation below.  The full paper is 22 pages and is an interesting read, but I decided I would create a thread in this sub-forum to simply discuss the legal ramifications of 'financial instruments' that have no counter-party and no 'contract' associated with them.  https://docs.google.com/document/d/1RLcjSXWuU9vBJzzqLEXVACSCdn8zXKTTJRN_LfoCjNY/edit#Note: for better formatting and highlighting you can read the same content below within the actual paper linked above (last couple of pages).Legal Classification of BitShares and BitShare-derived crypto-assetsThroughout this paper we make reference to short, long, margin, call and put options and other traditional financial terms and instruments, however these are only analogies used to explain the behavior of these new crypto-assets.  Legally these instruments do not meet the definition of a financial asset, instrument, bond, or anything else on the books aside from the most generic term 'asset'.  Before attempting to classify these new crypto-assets lets review the current definitions.A financial asset is an intangible asset that derives value because of a contractual claim.Examples:    Cash or cash equivalent,    Equity instruments of another entity,    Contractual right to receive cash or another financial asset from another entity or to exchange financial assets or financial liabilities with another entity under conditions that are potentially favorable to the entity.A financial instrument is defined as "any contract that gives rise to a financial asset of one entity and a financial liability or equity instrument of another entity" according to IAS 32 and 39 (International Accounting Standards Board)A contract is a voluntary agreement by two or more parties, each of whom intends to create one or more legal obligations between them. A contract is a legally enforceable promise or undertaking that something will or will not occur. Elements of a contract include:  Offer and acceptance and Meeting of the Minds Intention to be Legally Bound Consideration Additionally the parties to a contract must have capacity to contract, its purpose must be lawful, the form must be legal, the intent must be to create a legal relationship, and the parties must consent.Under European Union Law you must consider the MIFID (Markets in Financial Instruments Directive). This directive defines a regulated market as a multi-lateral system operated and/or managed by a market operator which brings together or facilitates the bringing together of multiple third-party buying and selling interests in financial instruments - in the system and in accordance with its non-discretionary rules - in a way that results in a contract in respect of the financial instruments admitted to trading under its rules and/or systems, and which is authorised and functions regularly in accordance with the provisions of Title III.The common denominator behind all existing financial assets and liabilities (including cash) is a contractual obligation. If there are no contractual obligations made by any party to any other party then by definition BitShare derived crypto-assets are not financial instruments. So lets see if we can find anything within BitShares that satisfies all of the requirements of a contract.1) Bid / Ask Transaction Published to the Block Chain.A bid or ask is a cryptographically signed transaction by a single, anonymous party. There is no signature by any other party and no obligation to perform. The bid or ask transaction has no legal standing and creates no legal relationships. This bid or ask is processed by a network of anonymous individuals who have no capacity to contract with the anonymous party submitting the bid or ask. In theory, the bid includes payment to anyone who includes the bid in a block and could be considered signed and accepted by the miner. However, once the transaction has been included in a block there is still no outstanding obligation or legal relationship between the two anonymous parties. Furthermore, simply including the transaction in a single block by a single miner does not actually cause the transaction to be executed. It must also be accepted by all other nodes in the network and even if it is accepted there exists no legal relationship or obligation between any two parties.  Furthermore, the result of the accepted transaction is merely an anonymous update to a global shared database and could constitute free speech. 2) Short Sell Transaction Published to the Block ChainThese transactions have all of the properties of a Bid / Ask transaction with the only difference being the type of crypto-asset used as the input to the transaction and the nature of the resulting outputs. It is still signed by a single anonymous party and is never signed by any other party. There is no legal obligation created nor legal relationship between two or more parties.3) Margin Calls and Covering executed by MinersNo party has a contractual obligation to provide additional margin nor to force covering; however, no party has the ability to prevent their position from being covered either when the majority of the network agrees. As a result there is no obligation of any party to enforce the margin nor legally enforcable consequences if they do not.4) Contract between Developers and UsersBitShares is a protocol for exchanging information that could be implemented by any number of individuals. The developers release the software open source without warenty or promise of any specific behavior. Users of the software get to choose which version to use and which network to join and therefore are in complete control over how they react to the information they receive from the network.  Users are even free to modify their software at will and therefore any actions or decisions made by the software are entirely an extension of the users will and not that of the developers.5) Exchange RegulationsA centralized Bitcoin / Litecoin exchange run by a market operator can be regulated because upon accepting deposits of the crypto-assets known as Bitcoin or Litecoin, the exchange converts them into a promise to pay financial instrument in the form of an account balance with a particular server.With BitShares there is no market operator and at no point does any actor in the exchange convert a crypto-asset into a financial instrument for the purposes of bringing together multiple third-parties. The reason for this is that there is no first or second party and no contract between any parties.6) Distributed Escrow and Arbitration SystemTo facilitate exchanges with traditional assets and financial instruments, BitShares provides a distributed informal, non-binding, escrow and arbitration system. There are two parties to every non-disputed escrow transaction and three parties in the event of a dispute. There exists an non-binding agreement between the two parties that includes an arbitration clause allowing the defined, but anonymous, 3rd party to decide any disputes at their whim in an entirely non-binding (in a legal sense) way. There does exists a private informal agreement between two parties that is not known to the wider network. The escrow agent never receives funds nor has the ability to send the funds any place but one or both of the parties. Escrow agents would be subject to any laws, regulations, and licensing requirements applicable to arbitration if the users expect their decision to be legally enforceable. Fortunately, escrow agents and users specifically acknowledge that the no party is under any legal obligation to take any particular action at all and that there is no intent to create a legal relationship.   By specifically stating that at all times no party is held to be legally liable to follow any specific agreement and that there is no intent to create a legal relationship between any two parties, the result is that all parties are acting in an informal, purely voluntary, manner outside the jurisdiction of any court. It would be like agreeing to meet someone at the pub and then failing to show up.That said, social and market pressures would conspire to motivate all parties to make honest and ethical decisions despite the complete lack of legal obligation to do so.The only legal question that remains is whether or not an individual trading a crypto-asset for a tangible good or traditional financial-asset (such as cash) in a noncommercial manner could be classified as a money transmitter by any sane regulatory system or court.  FinCIN has already published guidance that indicates that buying and selling non-financial assets with a crypto-currency is not engaging in money transmission nor a money services business. I would argue that as long as there are only two parties, no contracts and no party is operating on behalf of anyone else, there is no money transmission. This would be like claiming someone who exchanged gold for cash on craigslist in a non-commercial manner is a money transmitter. No decisions have been made we are still seeking input to converge on the ideal solution.  We are just refocusing efforts to converge on a single document.   Everyones input is still desired with a goal of actually converging on a single approach.Luke has apparently decided to pursue DEX on his own while Market Coin and BitShares have reached a high degree of consensus.   The most important aspect is agreeing on the criteria which have been expanded upon in the BitShares white paper.  You are invited to comment on and help refine those criteria.  Charles and I have been making great strides in defining requirements, understanding designs, and lining up the developers and financial backing necessary to turn project Invictus into a success.   We have gathered and reviewed white papers from a dozen different approaches and spent many hours discussing designs and approaches with their authors and others in the community.The best ideas from all of these papers are being worked into the BitShares white paper and I would like to invite the community to review, edit, and comment on the google docs paper.   The goal is to clarify the ideas and come to a consensus.https://docs.google.com/document/d/1RLcjSXWuU9vBJzzqLEXVACSCdn8zXKTTJRN_LfoCjNYYou can post general comments in this thread, but it would be very helpful to focus your comments in the google docs document so that they are in context and can be addressed.   I would like to move all discussion on BitShares and Invictus to the google docs / white paper.   In this way we can all focus on refining the specific details and clarifying confusing parts of the white paper. Invictus is alive and well.   The thread was locked to new replies while we prepare a series of bounties and refocus efforts.I have had lengthy conversations with the people behind Market Coin, DEX, OT and we have identified a path forward for Invictus.    The developer of Market Coin and I believe we may be able to use the same code base as the primary difference between our two systems is 'crypto-USD' and he has a negative dividend rate.    The BitShares white paper has been significantly revamped / clarified / expanded upon (22 pages now) etc.   It is worth going back to read the new one even if you read prior ones.  https://docs.google.com/document/d/1RLcjSXWuU9vBJzzqLEXVACSCdn8zXKTTJRN_LfoCjNYBitShares will be the foundation of the Invictus P2P exchange effort though its exact features / requirements / implementation are still subject for review / discussion / debate.   More details will be forthcoming in the weeks ahead.  Those are some very interesting numbers, 1.6 million addresses each of which requires the following information:1) Block              4 bytes (last change)2) Balance           8 bytes3) out Script       40 bytes4) Unit                2 bytesThe result would be about 100 MB scaling with the number of users.   The bitcoin block transaction fee system is perverse and does not encourage users to combine outputs and in fact makes it uneconomical to do so.   There are about 1M net new unspent outputs every month for the past several months.   Many of these outputs are SDICE and mining pools which are making small transactions.  What I can conclude is that with proper incentives you could cause the unspent outputs to approximate actual accounts in number.   Have you actually calculated the total number of unique addresses with non-0 balances vs the total unspent?  I suspect the majority is people with automatic mining pool payments every .01 BTC that have not 'spent' them together yet.  Create financial incentive (like dividends / fees) to combine this kind of thing and we are not far off in data requirements. 
Trust me I know it doesn't take much to be superior to the bitcoin blockchain.  It just takes a lot to actually work without compromising security.    In theory the limit you face is on total unique accounts rather than transaction volume. I did an analysis of the Bitcoin blockchain and looked at just unspent transaction outputs over time.   You immediately get a 8:1 compression.   If you can eliminate the need to store the inputs to the unspent outputs you end up with 16:1 compression.     Lastly, when you provide fees for creating new unspent outputs and don't charge people for large transactions that merge dust along with taxing all unspent outputs over 1 year old (to keep them fresh and prove private key ownership wasn't lost) then you end up with about 32:1 compression on the data that must be stored.  In effect, the current bitcoin transaction volume / user base would only require about 400 MB of data that would grow proportional to the user-base rather than proportional to transaction volume.  In your system you compress it one step further by always merging all 'balances' into one address.   In my system I create economic incentives for users to do this but do not require it due to other implementation/security challenges.  Therefore, I would guess that the theoretical gains of compressing down to just one output per address would be very small compared to where I think BitShares is now and it comes at a cost that limits flexibility on dividends. I understand that you are merging all unspent outputs with the same script into a single balance.  After much thought and consideration, using account balances creates challenges that are intractable when it comes to paying dividends and several other things.   By using unspent outputs and charging fees anytime a transaction creates more unspent outputs than it consumes and several other things market forces will align to minimize the number of unspent outputs.  If you do create the next generation crypto-currency then it should probably offer something other than just reduced resources.  There is already someone working on ultimate blockchain compression.   I have a team of 3-4 developers that will be working to implement BitShares in c++ over the next couple of months.  BitShares will be implementing many of the features described in this thread in an attempt to reach the same goals.   I have significantly revamped, updated, clarified, and extended the BitShares white paper: https://docs.google.com/document/d/1RLcjSXWuU9vBJzzqLEXVACSCdn8zXKTTJRN_LfoCjNY/edit#It will have the following characteristics described in this thread:1) Rolling / Minimal Possible Transaction History (mini-blockchain)2) 'account tree' which I call 'unspent transaction outputs'3) Merged Mining / Proof-Chain 4) Potentially the 0-confirmation (spend limit) While BitShares will implement many other features, they could be easily removed in a fork that implemented only the subset described here.  The white paper is open to comments on google docs and I am actively looking for additional feedback and developers.  To the extent that we can pool resources the better. I have been working to develop a set of criteria by which to evaluate all of the half dozen ideas out there on a p2p exchange and here is what I have:1. Decentralized All parties in the system exist on equal footing, no party has special privileges, and there are no barriers to entry beyond an average PC and internet connection.   The loss of any party does not harm those that remain.   2. Trustless No trust shall be required of any party in the system.   No party has the ability to default.3. Limited Liability No party to the system is required to publicly engage in illegal or highly regulated activities or take any legal risks in excess of direct exchange of Bitcoin for cash among friends and family.4. Scalable The system must scale to handle any volume without compromising the other criteria of the system. 5. DiverseThe exchange should enable most common investment vehicles including, shorts, put and call options.   It should enable trading in any tangible asset class. 6. Aggregated A single bid can be matched against many asks in an atomic exchange.  Users attempting to exchange a large amount of money should be able to do so in a single transaction.7. Atomic  No exchange or transaction is ever in a partial, incomplete, or reaches an invalid state.  8. Fiat EscrowExchange of fiat for credit with the exchange via the traditional banking system shall not depend upon trusting any single party including buyer, seller, or escrow agent.   The escrow system should not be vulnerable to collusion of either the buyer or seller with the escrow agent.9. The Price is RightThe exchange must not use any price information not derived from actual bids and asks provided by users of the system.  10. Zero Sum The exchange must neither create nor destroy value and every proffit by one party is matched by a loss of another party.  No party is ever in debt to the system (see Trustless)11. Viral The exchange should offer compelling benefits  which exceed the risks  for everyone (regardless of their need to exchange currency) to participate, share, and promote.  This will generate the deepest possible market and most liquidity, broadest public support, and greatest demand in spite of any regulation.12. Private The exchange should provide at least as much privacy as afforded by Bitcoin for all users involved.   13. FastThe exchange should allow the average individual to deposit, trade, and withdraw within 24 hours.  Trades executed within the system should be confirmed at least as fast as Bitcoin transactions.14. Cross-Chain Trades The exchange must support escrow-free cross-chain trading between compatible crypto-currencies. 15.  SecureThe exchange must have a level of security on par with Bitcoin.16. Open SourceAll hardware and software components of the exchange must be open, auditable, and reproducible by any average developer. 17. Passive Order Execution Orders may be executed without the interactive participation of the user or their computer. From what I can determine this exchange fails in the following categories:Trustless - you are trusting the escrow agent not to run with your moneyDiverse   - I am not sure how this system could possibly enable call/put/shorts Aggregated - this system is subject 'dust bids' and requires potentially a hundreds of escrow transactions to fill a single large bid.Passive Order Execution - all parties must be online to execute trades with their private keyAtomic  - After you find a match you are at the mercy of the counter-party for the timeout period.  The Price is Right -  Not all trades are fungible (every counter party has different risks) and if you can pick your counter-party then this system relies upon 'reporting' of transactions.   Fast - the trading of fiat is much slower and an after-thought.  While you wait for escrow to clear (or not) you are subject to exchange rate fluctuationCross-Chain-Trades - should not require escrow.In many ways this system is very similar to Market Coin.      This addresses the race condition for finding blocks, but not forks due to bugs (like in March).From what I am seeing miners should be able to spend their proceeds in 6 blocks not 100, so there must be justification for the 100 block wait on mining.  My advice, move to a college town, date college girls, sit in on classes like a student, and teach yourself everything.  All of the benefits, none of the costs.   Then use your time saved by skipping worthless general classes and performing pointless projects and instead focus on developing a real business.   You could even claim you attended classes at school X and learned everything they had to offer if anyone asks.    Why was 100 blocks chosen for mining delay? How many blocks long was it What is the largest chain split and merge to date by time? I second those who argue skipping college.  Like you I was programming in high school and college taught me nothing.   I now interview people on a regular basis and NEVER look at their college.   I would go so far as to say you don't want to work any place that does. If you want a job send me a message and we can see how you can join the team.    You can make more money on you own than in a 9 to 5 job.  Calculate the hash of the previous block concat with the full message  Who said such a company would do it in a way that is directly traceable back to them? Perhaps it is just me, but *if* Charles is telling the truth then your attitude and pre-judgment of the actions of those whom have money and connections may not the best way to win funding for your ideas.    If you want to presume he is lying then that is a fairly serious accusation.So, perhaps we can get past the VC funding / management debate and talk about what you are bringing to the table.    Part of BitShares is an attempt to eliminate the need to store the transaction history for all time.  Without the full transaction history there needs to be a way to have 'confidence' in the initial condition of the 'chain'.   I have been discussing ideas and have some approaches that I think will work, but part of confidence is simply trusting others and perhaps there is some use of combining confidence chains to help certify the initial condition of the block chain from which the past months transactions are built upon.  The challenge is making an analogy to existing instruments.  I can describe it and make analogies that approximate it.   I will make my an attempt to describe it here:1) BitShares have value for the same reason as Bitcoin.  2) A crypto-USD is created by holding 2x BitShares as collateral.  When you create (by selling/shorting) crypto-USD you are betting BitShares will go up vs crypto-USD.   When you buy crypto-USD you are betting that BitShares will go down relative to crypto-USD.     At the end of the day you can exit your position in crypto-USD by either trading it to someone for fiat or by selling it for BitShares.    Thus you can convert crypto-USD to fiat-USD but it is not a REDEMPTION it is a SALE.  So what do you call this 'instrument'?   It is very similar to a collateralized naked-short in 'gold' that can only be redeemed in USD and where you cannot take delivery.    The difference between crypto-Gold and say traditional COMEX is that the collateral backing the short cannot be printed, incurs opportunity cost, and requires 2x the collateral as the longs and thus not be easily or cheaply manipulated like the COMEX.There is a ton of precedent for the nature of the contract, but I am not sure how to 'name' the contract vehicle.   Blue,     Using BitShares I create assets that are only 'redeemable' in crypto-currency *but* they track the purchasing power of outside assets.  Therefore you can 'redeem' them by purchasing gold/silver/etc on the market.  Having such an asset class can be very useful in facilitating the actual trade of the physical good.      I am collateralizing debt, *but* the debt is not a promise to pay gold or silver, but instead a 'promise to buy back the promise' on the market.  The 'price of the promise' on the market adjusts automatically as participants attempt to bet on the movement of actual gold/silver/dollars relative to BitShares.     The primary difference is that no one can ever default on the 'promise' because the 'promise' is enforced by the blockchain.    Also, all promises have 'intrinsic value' based entirely upon the BitShares that you are paid to hold on to that 'promise'.   This is what sets BitShares apart from DEX, confidence-chains, and Open Transactions and is also what causes most people trouble understanding the concept.       In my system there is no outside information that is entered *except* the users who place bids/asks.  No ticker, etc.       Also note that my system enables 3 different speeds of trading.... low-frequency between bids already placed in the blockchain.   medium frequency with exchanges that occur between the bid/ask price in the block chain.  And high-frequency with trading that occurs on anonymous OT servers with collateral held on the block chain and redemptions managed on the block chain.      There will still be a place for centralized exchanges, but they would no longer have to maintain any bank accounts and could deal entirely with crypto-currency.  They would not be trading in bearer bonds.    I really need to identify exactly what my 'instrument' is because it could be thought of like a derivative where both sides of the trade are 'betting' on the movement of this crypto-Currency and the only profitable / logical bet is to bet it will follow Gold/Silver.    Thus it is almost closer to intrade or some other system than a real security (like a bearer bond).  This has legal advantages that are far superior than all other solutions for digitizing fiat.        blue,  thank you for providing a solid post.I have seen a total of 5? white papers on this topic:  DEX, Confidence Chains, Market Coin, Open Transactions and BitShares.    All of them have been far from pointless and each tackles this problem from a unique angle with different degrees of success and different limitations.    I agree with your first paragraph in line #2, however, your second paragraph makes some assumptions that are not founded.BitShares actually eliminates the need for any specific backer.   It is the only solution proposed where no users create bearer bonds nor have any way to default aside from massive volatility that all longs are aware of when they take the position.   It is also the only system that has opportunity cost and compensation for risk in the form of interest.  The result is that no user of BitShares is exposed to any more liability than a user of Bitcoin.Server Architecture Open Transactions does indeed suffer from most of the problems you just outlined.  As designed by FellowTraveler, it can only be run by a public entity and all issuers are public creators of illegal bearer bonds... a non-starter.The primary benefit of destructive account history is 'instant validation' and 'server resources' and also prevents opportunity for the server to scam the customer.  You could of course always keep the transaction history for legal purposes.   But then again, bank records have screwed many innocent men and represent a means of tracking people that should be avoided if possible.The challenge to make OT work is to eliminate the issuers and prevent the server operator from being able to take the money.   You can use BitShares to actually store the funds and 'audit' the server while allowing the high-speed trading / instant transactions to occur on the server.   In this case, destruction of account history is critical because it keeps the amount of information the server/user must produce to the blockchain to 'withdraw' money to a minimum.  It is almost a technical requirement that account history be destroyed.I also think that the expectation of very high trading speeds and very low latency taking a very narrow view based upon the last 20 years or so of exchanges.  For the past several hundred years all exchanges and trades had to occur at 'human speed'.   Even today, most people don't 'day-trade' and instead decided to buy on day X and sell months or weeks later.   The intra-day price movement is not all that relevant to their buy-sell decision nor the long-term direction of the market.    High speed trading has its place, but is not a requirement for a fully functional exchange.   That said, it should be noted that in a P2P network no one should have a profitable opportunity 'manipulate' the market by withholding bids/orders.   BitShares solves this with several approaches: 1) all 'real-time' trades must occur between the bid/ask spread from the last block.   2) All trades against open bids/asks stored in the block chain are deterministic.   3) All users make a profit (via dividends) when the bid is entered  4) professional traders are all competing to mine their own trades and the result of this competition is to drive up the difficulty and thus make it harder for any one miner to actually gain any meaningful advantage. Your system will not work, to support the price you need someone with cash ready to buy.   Ultimately, the only thing you would accomplish by this is to create a thinner / more volatile market as there are 'fewer' players actively buying and selling.I actually have a system that will work to stabilize the BTC price by allowing people to go short BTC and take out call/put options in an entirely decentralized manner.   The result is that merchants could 'lock-in' the price via options and end up with 0 risk of price changes.I would suggest you look into http://the-iland.net/static/downloads/BitSharesWhitePaper.pdf  for more information on how to achieve your goals. That works, so the contribution I believe I made is that by looking at the most difficult block difficulty you can determine the maximum mini-blockchain length required.... you may be able to go shorter. I understand your account ledger system which is effectively just 'unspent outputs' assuming each output was a unique address.I am dealing only with the more theoretical how does the mini-chain agree on the initial condition. Luke,  have you got a team of people who have vetted and accepted your proposal?     It seems like this effort is diverging from the Invictus thread and thus dividing our efforts.  I would suggest you hold your 2 BTC and invest it in the P2P exchange being developed by the Invictus P2P Exchange group and help drive that.  If not I wish you the best with your effort and it will be interesting to see how two competing exchanges turn out!  
Solution for erasing chain history:  you can delete all transactions after '2 weeks' provided you have a proof-chain difficulty that is at a all time high from the last 'trusted signature' on the block state.  If you have stayed connected, then you do not need any signatures and thus keep rolling on 1 month or even 1 week intervals.  The 'first' trusted signature is the genesis block and others can be added like the bitcoin checkpoints.  The challenge is having the new node connect to the network.  If the difficulty is not at an all-time high then they must download all transactions back to the last 'check point with a trusted signature' or the all time difficulty high.The complete transaction history could be stored in a distributed manner and thus new nodes could connect and verify as far back as they need to, including all the way back to the genesis block.   There would be little need to do that however because there are enough other 'checks' that you can perform to validate that you have a 'trustable' initial condition.   The primary check being, 'does your initial condition have consensus' among all of your friends, family and merchants.Why does this work?   Because any attacker attempting to build on a false proof-chain would have to have 100% of the hashing power of the network starting at the time of the fork in order to prevent a drop in hash power on their fork.    They would then have to grow their hashing power at the same rate as the main network to create believable alternative history and thus alternative initial condition.   If they ever went 'public' with a 1 month old 'remerge' people would demand the complete transaction history before they could accept that merge and therefore all they could accomplish is a double spend.  Otherwise they would have to 'isolate' their victim. Now lets assume the attacker first uses their hash power to increase the difficulty on the valid chain, then they switch all of their hashing power on to a new 'false chain'   The main chain and the 'false chain' would each experience a fall in difficulty and thus all nodes would store all transaction history until a new high was reached.   To effectively attack this system would require far more than a 51% attack.  It would require an attacker to 'instantly' switch on a level of hashing power equal to 101% of the entire network and even then they could only potentially 'fool' new nodes by presenting a false initial condition.   Such an attack would be very public and thus everyone would know and clients would be updated to 'reject' the bogus chain.  Another factor that will enable users to identify the 'true chain' is to ask any merchant what the 'current chain' is.  The merchants would be running full nodes around the clock and thus could not be 'tricked' by a bogus initial condition and any client that started up would simply ask a handful of trusted merchants what the initial condition is.  Conclusion:  you need the proof-chain all the way back to the last trusted/signed state (perhaps the genesis block) and this chain is very valuable for telling a client how far back they must validate transactions upon a new connection to the network.  Once connected to the network almost no transaction history is required provided you keep track of all unspent outputs.   The only transaction history you must maintain is enough to cover all reasonable 'chain merges' which should be 1 week to 1 month at most.   This 'stored transaction history' could be distributed and queried as necessary when a merge happens and therefore most 'light nodes' could discard transactions and let the 'full nodes' keep them in case of a merge.    I decided to put together a 'concrete' example of what the block-chain would look like for BitShares... high level... and may have slight math errors, but should communicate the idea in example form.Code:Block 0     Prev NULL        Dividends 0   Total BS: 0 ------------------------------------------------- trx 0 ---------25 BS IN (COINBASE)          Output A  50 BS                              Address   0x1111--------------------Block 1     Prev  0          Dividends 25  Total BS: 50  (0.5 Dividends per BS)------------------------------------------------- trx 0 ---------25 BS IN (COINBASE)          Output B  25 BS                             Address   0x1112--------------------Block 2     Prev  1          Dividends 25  Total BS: 100  (0.25 BS per BS)------------------------------------------------- trx 0 ---------25 BS IN (COINBASE)           Output C  25 BS                              Address   0x1113--------------------Block 3     Prev  2          Dividends 25 + 0.5  Total BS: 150  (0.17 BS per BS)------------------------------------------------- trx 0 ---------25 BS IN                     Output D 30.25 BSInput from Output B          Address 0x2221Signed by 0x1112    .25 * 25 = 6.25 DIVTotal Input: 31.25 BS        Fees: 1 BS---- trx 1 ---------25 BS IN (COINBASE)           Output E  25 BS + 0.5 BS fees = 25.5                             Address   0x1114--------------------Block 4     Prev  3          Dividends 25 + .125  Total BS: 200  (0.125 BS per BS)------------------------------------------------- trx 0 ---------  ( create a bid to buy)30.25 BS                      Output F  30 BSInput from output D           Address 0x1115 or Exchange 30 crypto-USD @ 1 BS per. Signed by 0x2221              Fees: .25 BS  ---- trx 1 ---------25 BS IN (COINBASE)            Output G  25 BS + 0.125 BS fees = 25.125                              Address   0x1116--------------------Block 5     Prev  4          Dividends 25 + .25  Total BS: 250  (0.101 BS per BS)------------------------------------------------- trx 0 --------- (create a new short-sell bid)25 BS                        Output H  30 BSInput from output A          Address 0x1117 or Short 30 crypto-USD @ 1 BS perSigned by 0x1111             Dividends: 1.045 * 25        Output I  63 BS  (change)                             Address 0x1118 25 BS                        Input from output C          Signed by 0x1113             Dividends: .295 * 25 Total Dividends: = 33.5Total Input:       83.5      Total Fees:  .5 BS---- trx 1 ---------25 BS IN (COINBASE)           Output J  25 BS + 0.25 BS fees = 25.25                             Address   0x1119--------------------Block 6     Prev  5          Dividends 25 + .25  Total BS: 300  (0.101 BS per BS)------------------------------------------------- trx 0 --------- (miner which performs exchange)0 BS IN (COINBASE)           Output K  25 BS  fees = 0                             Address   0x111930 crypto-USD                Output L  60 BS  (collateral of short)Output F                     Address 0x1117 AND 30 crypto-USD destroyed.Dividends: 3 BS              30 crypto-USD                Output M  30 crypto-USD (exchange output)Output H                     Address 0x1115Dividends: 0                 Output N  3 BS   (from dividends earned on Bid prior to exchange)                             Address 0x1115 -------------------- Assuming the crypto-coins use the same hash algorithm and only look at the proof of work rather than some other stats like % of known transactions included in the block.   51% attack is not a threat at all except for some small potential for double-spends. What I tell everyone regarding the morality is this... if you know the bank is committing fraud when lending you the money then you are an accessory to fraud.  (don't take out any mortgages or borrow any money from the banks).If you only learn about the banking fraud *AFTER THE FACT* then you can morally default as the debt is invalid.  Once again, the conclusion here is that all private keys must NEVER exist on any networked computer.  That a dedicated hardware solution for managing your private keys (perhaps a Raspberry Pi with hardware-disabled network card) should be used.  The sooner people recognize this requirement for storing their savings the better.   The trick is that the hardware wallet would require some kind of display to validate the trade prior to signing (incase your hacked bitcoin client created a different transaction that the GUI led you to believe it was creating).So, a raspberry pi, hooked to a TV with an app that allowed you to see and confirm the transaction loaded via USB drive may be what is required to protect your savings.  This hardware box would never be 'upgraded' and never reveal the private keys to the USB drive.Paper Wallets, Brain Wallets, etc can all become victim of key loggers and back-door patches to the bitcoin client.  Sure you can keep a 'live wallet' for easy access and accept the losses if you are compromised.  If I were storing more than a couple thousand dollars then I would want to know that I could trust that my client was not compromised in some easy to verify manner.  * that you know of * Also, when you do choose to update (say apply an OS patch to fix a security hole) how do you know that is *ALL* that patch does? I did pay the *one* 10 BTC bounty on an old version of BitShares based upon a design that did not work.  The bounty was well worth it because it led me to the current design.  The new design and white paper being discussed on the Invctus thread will work and the individual who won the original bounty (thezerg) said the new one is much harder to find flaws with.  And for the record, the attack I am suggesting here does not just mean 'delete' but could also mean modify your bitcoin client.Sure, everyone knows you *should* backup your wallet.  But that is beside the point because if they could patch the client they could steal your coins brain wallet or not.  Clearly hardware wallets would solve this, especially open-source hardware.   Building your own copy of Bitcoin does not solve it nor would encrypting it.   If I have root access to your machine (because I am a trusted software vendor in bed with the government) then I could easily modify and patch the copy that you were careful to build from source yourself.   You claim the government wouldn't be able to frame these companies...  I am not suggesting that the company would be framed (they are a partner in the crime via coercion).    The point of this isn't to be 'overly paranoid' but highlight a major security hole we all expose ourself to by 'trusting' automated updates.  All I know is that governments regularly approach companies and demand backdoors into their products (Skype).  The only thing that could keep a company honest is dealing with multiple different countries all of which depend upon their computers being secure from other countries.   If these governments use these commercial products then they must believe them to be secure.   All I know is that there is a reason top-secret computers are kept unplugged from any external network and no data is ever allowed to leave.  If you trust Apple, Google, and other tech companies not to cave to government pressure to sneak a patch to spy, tamper, or otherwise undermine your security then good for you.  Ultimately I am putting some trust here as well.   The more important question is can these companies really be trusted any more than the banking system we are trying to reform?   Ever heard of reading the whole post?  This can work, but do not declare bankruptcy as that invites judges to look into the situation.  Instead settle your debt for pennies on the dollar and be sure you are technically insolvent to avoid paying taxes on debt forgiveness. Note:  It is immoral to do this if you borrow the money from normal individuals who did not create it out of thin air.   If you borrowed it from a financial institution who committed fraud by creating fiat from nothing with no consideration then the debt is technically invalid anyway.  For a debt to be valid, both parties have to show consideration.   In this instance you created something of value, an "IOU" which you sold to them and they purchased that IOU with counterfeit dollars through accounting tricks.  One could claim that you were party to the counterfeiting by knowingly borrowing from them.    On the other hand, this same system has stolen far more from you via taxes and inflation than you could possibly recover by executing it so you could look at it as merely recovering stolen loot.Moral rationalization aside, I cannot recommend this course of action and will point out that there is NOTHING that can be done to stop it except to avoid un-collateralized lending in the first place.  Ok, you don't need all vendors to be compromised at once and who said anything about them being 'hacked'.   Governments can easily coerce any large company into signing anything.   Even with a wallet backup, you can have your client patched to steal your password and coins the next time you make a transaction.  Clearly this would only affect casual users, but I an assure you that most users are not being *that* careful with their wallets.  They may have a backup on multiple different drives but what good is a backup if the auto-update can patch the bitcoin client and transfer your funds the next time you unlock it?The point of this post was that your wallet and password is only as secure as the software you allow on to your system.  The solution is an open source hardware wallet that is never updated, never has network connectivity, generates all keys, and for which there is no means to get the keys off of the device.   Then this wallet must be made as easy to use as possible.    Ideally the entire wallet and hardware system is open source. Users should never have more than the cash they normally carry with them backed by any private key that has ever existed on a networked computer.  Note when I said exe it was short for executable which linux certainly has. Linux is better than most alternatives.  At least it should be possible to audit the source and validate checksums of exe.   Unfortunately, the other 99% of normal everyday users would be in trouble.I didn't say it would affect all users, I just said 'most users' and few would know how the virus got on their computers. 51% attack would be far less damaging and I do not believe is a real threat.  If you use OSX, Windows, or any Linux with 'auto-update' then the government has a ready-made backdoor through which they could delete all traces of Bitcoin and their wallets from most computers.They could send a 'stealth' update through normal channels, most computers would install it.  Then on some specified date all bitcoin related files would be deleted including the client.  It would probably be an 'unpopular' move, but the government would probably find a way to make it look like a security breach by hackers rather than an intentional attack by government.    They may even 'frame' someone and lock them up so people don't keep looking for the real attacker.Even if you were smart enough to have an off-line backup the vast majority would not.   All 'trust' in the safety of bitcoin wallets would be destroyed taking the value of bitcoin with it.What we need is an innovative and effective means at protecting our computers from backdoors through 'official' and 'trusted' channels and to make sure that everyone is aware of this backdoor through which the government can 'tap' all of our computers. Sure the blockchain would survive, and many users would still have their wallets.   But if the true 'source' of the hack was not revealed then it could occur over and over again and each time the government would blame some anonymous hacker that exploited a buffer overflow to spread the virus far and wide and completely ignore the fact that the 'buffer overflow' as intentionally put in place to allow such an attack.I am not sure how we solve this except by making paper wallet backups 'mandatory' best practices and really bring to light the nature of this threat so that people take it seriously.  When you consider the shear number of vendors we trust with 'auto-updates', each and every one of these vendors could be coerced into providing a backdoor. (MS, Apple, Adobe,Office,Parallels,Skype,...) Only one needs to be compromised.    Conclusion:  we need a system for vetting software updates from any source and a means to protect our wallets from malicious deletion.  Protecting wallets from malicious deletion could be achieved by 'storing' the private keys encrypted in the blockchain or some DHT.   Alternatively we could make 'brain walets' the norm.   The other strategy is to 'hide' the wallet data in some manner than a virus could not readily identify the wallet files.  Note this attack vector need not be 'global' but instead could be targeted toward individuals known to have large balances or anti-government.Even brain wallets can be attacked if the virus simply patches the bitcoin software to redirect funds the next time the password is entered.  Is there anything we can do to protect ourselves from this without making the software 'unusable'? If you didn't realize I had an exchange at the very heart of bitshares then perhaps you need to go over the white paper.  If it is not clear then I am a terrible communicator.  The very creation of crypto usd is a short position on th exchange.  Crypto-usd is not tied to the issuer.  There is 0 trust in my system except in the block chain margin covering algo.   More feedback on DEX:Upon closer look at DEX I can see that you have a 'good' approach but not the 'best' and can recommend some potential improvements.1) Place the backing BTC into an ESCROW output on the bitcoin blockchain where it requires two parties to spend it.  Then allow those who 'hold the bond' to transfer their signature rights to someone else.  As a result the bond is always 'valid' and you no longer have to trust the issuer not to run with the collateral.  If you can run with the collateral then you have a massive incentive to defect after issuing a large number of bonds.   This would require an update to Bitcoin to support.  2) Ratings systems are HARD and easily spoofed by Sybil attacks.  Ultimately they depend upon Web of Trust to avoid Sybil.   A Web of Trust creates a social network and ultimately the issuer IS NOT ANONYMOUS.  You would want users to 'mine' their identity to prove uniqueness. 3) Your bonds are not divisible nor fungible.  Find a way to enable this.Despite the merits of your idea which clearly has had much thought put into it, I think it is ultimately more complex for all users and provides no benefits over BitShares.   Lets assume that both systems were implemented and competing against each other in the market.   We are both creating ads trying to attract customers to use our exchange.   What would your pitch be?Mine is: Trade your dollars for crypto-Dollars and earn 10-15% interest (first few years).    Your crypto-Dollar will be backed by the full faith and credit of the blockchain which holds fully 2x collateral and will automatically cover before any losses are possible.   No need to trust anyone, rate anyone, or worry about anyone defaulting.   Trade in any 'volume' and make easy payments in any amount (event fractions of a cent).   Deposit your Bitcoins and earn interest on your Bitcoins!    Trade in your eTrade account and speculate in the EUR/USD market.    Buy call and put options and have risk-free escrow of all fiat transfers.Yours?     Regarding DEX:You provided some good replies, so let me counter.Using tools like TOR and VPN it would be impossible to identify that 2 clients are not actually the same person.Based upon your other description it seems like your bonds are actually backed by the ratings and nothing else.   So lets assume your 'ratings' system is better than Moody's and it accurately labels AAA vs B- then you still have a fragmented market for each bond type.  I suspect that this would be a fractional reserve heaven!   I would start out as an honest dealer and then earn a AAA rating.  Eventually people will stop redeeming them and just trade them at face value.  As long as I am always able to redeem the 10% that actually get turned in then I am good.     Now because I have a AAA rating, if I ever face pressure from heavy redemption I can simply 'print more AAA' bonds and use them to buy  AAA bonds from other issuers which I would then redeem to meet my demand for redemptions.Eventually everyone would catch on to this game and everyone would be playing the fractional reserve game until there is a bankrun on the whole system which would then come crashing down.  *EDIT*  I take that back.. they are also backed by BTC held in escrow which would then prevent over-issuance.   If BTC generally goes up in value then you will be good.  Having them post 110% would probably be better.  How does one find out where to redeem bonds?  Eventually all 'issuers' will be known and public because they either meet you in person or wire you the money.   Once their 'name' is tied to their 'bond' then it is quite clear that you have simply created a bearer instrument.  Without double checking all of your math, it looks like you have the right idea.  The only difference is that after each price calculation and before the trade is executed, all margin positions are checked and would take priority.It is entirely possible that as trades progress the margin positions get worse and worse.  I can only 'cover' a margin position by matching against a real bid so if the price (of BitShares) falls too quickly and thus the collateral is no longer enough to cover the position... then I guess it would actually be best to simply buy back as much crypto-Gold at the lowest price it can.   This would actually be better than my earlier approach of paying it out as dividends because it would still server to SUPPORT the price of crypto-Gold rather than further remove demand.   Here is Luke's latest DEX paper for those with DNS trouble: http://the-iland.net/static/downloads/DEX.pdfI will look it over for any changes and update my review accordingly. 
Working link: http://the-iland.net/static/downloads/DEX.pdf With all due respect to MarketCoin and DEX I think we really need to combine our efforts.   From what I know of DEX it will not work. Considering you stated that the largest 'bond' size would be about $1.55 (GBP) and have its own private key,  then that means that someone with $1000 in bonds would have to market/sell 1000 different securities on the exchange.   Just storing the value held in BTC would be 500GB of data.   I would guess you could improve things by offer $5, $10, $20, $50, and $100 bonds but that would just create more markets/instruments and thus increase the buy/sell spread as the market gets thinner.With respect to MarketCoin, it could be created as a separate currency or its critical features could be provided by BitShares.   I also do not like demurrage as the premise (to prevent hoarding) is not based upon sound austrian economics.   Any currency that 'taxes me to hold it' is a currency I want nothing to do with.   I see your point about only wanting it used for facilitating trade (like ripple XRP) but it could accomplish the same thing without demurrage.  Note: BitShares will not be a single chain, but a whole family of chains each with their own floating "BitShare" price where each BitShare floats against the other BitShares based upon the demand to trade among the sub-currencies on each chain.I still think MarketCoin suffers from the need for interactive trades where all users are 'online' and that it does not allow a buyer of 1000 BTC to be matched against 20 sellers at different prices in one ATOMIC trade.  So I propose we develop a team, where  XertroV focuses on cross-chain integration between BitShares and Bitcoin and I focus on the BitShare network and Luke can help wherever he feels he can contribute.   I highly recommend that you all don't attempt to develop your own chain 'just because' unless you are convinced that it can address something BitShare's cannot.           The domain name isn't resolving, so I will base my comments upon a couple day old draft: http://the-iland.net/static/downloads/DraftDEX.pdf   If anything has changed since we last talked, then my apologies in advance."Note: Like the matching engine, the escrow engine cannot be used on any orders as either the buyer nor seller on the same client."This is an assumption that cannot be enforced because anyone could modify the clients source code *or* run two clients on two different computers and control them both.  To the extent that this is a requirement of a functioning system the system will not work.If you can buy cyrpto-bonds from different people and then trade them all as if they were equal, then I would buy the junkiest bonds I could find and then trade them on the exchange to acquire less-junky bonds and then profit from the spread.   If the bonds are not fungible then the market would be fragmented.Because the bonds do not post margin greater than the initial value of the bond, any price volatility in the wrong direction would immediately compromise the value of the bond as some percentage of the bond would be unsecured and thus 'a junk bond'.    Junk bonds have higher risk of default.    If users can trade bonds at values other than par then you will create a million fragmented markets where the ultimate value of the bonds will approach the value of the Bitcoin backing it.    If you don't allow trading of bonds within your system, it will occur outside of your system, mean while inside your system people will be taking advantage of the price fixing until the whole system falls apart.  Lastly, issuing bearer bonds is 'illegal' and in order to redeem the bonds for actual fiat would require you give up your anonymity as the issuer.   Thus you would have tremendous risk from public operation.   What is the profit motive for someone to issue a crypto-bond?   There is no opportunity cost to maintaing the position and if you sell the bond at a 'premium' then the buyer takes an immediate loss and there is no longer any incentive for this individual to redeem his bonds.    The network wouldn't be able to detect the fraud until he failed to redeem the bond at which point it is too late, the fraudster has already profited from the sale even if he never sees his bitcoin again.   He can then create a new client ID and start all over.     The only way to prevent this kind of fraud is if the issuers are PUBLIC and not anonymous.  If they are public then they are in violation of the law and easily shutdown if they operate in any significant volume what-so-ever.   If they do not operate in volume, then they will have 0 trust and thus the value of their bonds will always and forever equal the value of the collateral.   In effect, the bonds simply become Bitcoins.If you attempt to fix these problems by simply requiring additional margin, you still will not have answered the following questions:  1) Where is the profit motive to issue the bond?  To go short USD vs BTC.  If this is the case, then it is a head-I-win, tails-you-lose kind of bet.2) What happens if the price changes more than the margin?3) All bonds will vary in price proportional to the margin backing them and thus approach the value of the bitcoin backing, why should they have any other value?I hope this feedback helps. The domain name isn't resolving, so I will base my comments upon a couple day old draft: http://the-iland.net/static/downloads/DraftDEX.pdf   If anything has changed since we last talked, then my apologies in advance."Note: Like the matching engine, the escrow engine cannot be used on any orders as either the buyer nor seller on the same client."This is an assumption that cannot be enforced because anyone could modify the clients source code *or* run two clients on two different computers and control them both.  To the extent that this is a requirement of a functioning system the system will not work.If you can buy cyrpto-bonds from different people and then trade them all as if they were equal, then I would buy the junkiest bonds I could find and then trade them on the exchange to acquire less-junky bonds and then profit from the spread.   If the bonds are not fungible then the market would be fragmented.Because the bonds do not post margin greater than the initial value of the bond, any price volatility in the wrong direction would immediately compromise the value of the bond as some percentage of the bond would be unsecured and thus 'a junk bond'.    Junk bonds have higher risk of default.    If users can trade bonds at values other than par then you will create a million fragmented markets where the ultimate value of the bonds will approach the value of the Bitcoin backing it.    If you don't allow trading of bonds within your system, it will occur outside of your system, mean while inside your system people will be taking advantage of the price fixing until the whole system falls apart.  Lastly, issuing bearer bonds is 'illegal' and in order to redeem the bonds for actual fiat would require you give up your anonymity as the issuer.   Thus you would have tremendous risk from sting operations.   What is the profit motive for someone to issue a crypto-bond?   There is no opportunity cost to maintaing the position and if you sell the bond at a 'premium' then the buyer takes an immediate loss and there is no longer any incentive for this individual to redeem his bonds.    The network wouldn't be able to detect the fraud until he failed to redeem the bond at which point it is too late, the fraudster has already profited from the sale even if he never sees his bitcoin again.   He can then create a new client ID and start all over.     The only way to prevent this kind of fraud is if the issuers are PUBLIC and not anonymous.  If they are public then they are in violation of the law and easily shutdown if they operate in any significant volume what-so-ever.   If they do not operate in volume, then they will have 0 trust and thus the value of their bonds will always and forever equal the value of the collateral.   In effect, the bonds simply become Bitcoins.If you attempt to fix these problems by simply requiring additional margin, you still will not have answered the following questions:  1) Where is the profit motive to issue the bond?  To go short USD vs BTC.  If this is the case, then it is a head-I-win, tails-you-lose kind of bet.2) What happens if the price changes more than the margin?3) All bonds will vary in price proportional to the margin backing them and thus approach the value of the bitcoin backing.I hope this feedback helps. The domain name does not appear to resolve.  If you send me the .pdf I can host it for you while you wait for it to resolve.   With respect to Dividend Calculation I would maintain a table which includes 'total dividends per share' based upon coinage going back 1 year.   Everyone would have to 'prove ownership' of an address once per year or lose 5% of their balance as the chain rolls the output forward.  This will prevent lost keys from accumulating dividends and prevent the network from storing worthless data for ever (outputs of lost keys).The result would be 100K blocks per year * 8 bytes or about 800K lookup table per currency to calculate dividend based upon coinage.  Once very 10 minutes I would have to update the entire table.  Easy, Fast.Dividends are then calculated and applied ONLY when the output is spent.  This prevents 'dust' dividends and minimizes rounding errors. With 64 different currencies per chain that would be a little over 50MB dedicated to managing the dividend calculation.Bitcoin is currently adding 1M new (net) unspent transactions per month.   12M per year at current transaction volume.   BitShares will probably be more efficient than BitCoin and generate fewer unspent-transaction for equal volume because there would be financial incentive (reduced fees) to combine inputs into fewer outputs and thus eliminate dust.    So lets assume that there would only be 4M year at the same transaction volume as Bitcoin.  Heavy trade volume does not affect this as each trade consumes 2 inputs and generates 2 outputs.   The trades and transactions do not need to be stored for more than a couple of days.  The size of a basic 'transfer output' would be about 40 bytes and therefore to support the same number of 'users' as bitcoin would only require a database of less than 200MB assuming they were just performing transfers.Bids, Asks, and Escrow transactions would require a more complex 'spend script' for the output and would probably require about 256 bytes (max) per output.  These transactions would occur far more frequently, but I doubt most users would end up with more than a couple of bids at different prices per currency.   Assuming 1 million users each with 1 bid per currency you would end up with about 1 GB of bids/asks at any given point in time.  I suspect most users will not be that active.  Therefore, that would be about 1M active traders which would imply a greater economy using crypto-currencies with 50M or more users.    By the time the data requirements for bitshares approaches those of Bitcoin today, BitShares would probably be several orders of magnitude larger.   Assuming the audit protocol is 'atomic' and thus all signed receipts are instantly valid in any audit then the data published to enable the audit could go into the blockchain and the blockchain could then release the funds if presented with a receipt.There would be no need for an escrow agent.  All that is needed is a secure 'anonymous' audit protocol that does not tie accounts together like the blockchain does.Then you could have instant transfers, 0 trust, and high-speed trading.  Only if you used the 'cash' feature would you have to trust the server and that may even be audit-able if all 'spent' tokens are published and the signature is publicly verifiable.  From what I have read, the audit protocol is not throughly defined (in detail) nor is it defined how one would keep it anonymous.   If that is defined somewhere I would be VERY interested in seeing it. You can never "prevent dark pools", but an OT transaction server acting as a high-speed exchange would be a dark-pool unless the trx server could be trusted to publish all exchanges.With bitshares, all trades, bids, and asks end up in the block-chain and thus a public. In summary:  the 'backing' of everything and ultimate price setting is public and is not a 'dark pool'.     Dark pools could exist outside the chain and the chain would *enable* trustless OT servers. Are there any developers on this thread that are interested in helping develop BitShares?   If so, please contact me to discuss how you can be involved. Since this thread seems to be where everyone serious about seeing Open Transactions succeed is posting and actively funding development, I wanted to present an enhancement to OT that could truly be the Holy Grail! Some of you may have been following BitShares, but you may not have seen the latest white paper:  http://the-iland.net/static/downloads/BitSharesWhitePaper.pdfIn this paper I outline an approach that integrates OT-like solution for enabling fast, anonymous, transactions and trades.   1)  All reserves in all currencies are held on the BitShare block chain.   The OT Server would no longer have to deal with issuer contracts.2)  An OT server can register with the blockchain by posting a surety bond with one or more escrow agents who are also registered in the blockchain.3)  Deposits are made to the OT server via the blockchain which will hold / control the funds.4)  The blockchain will honor the last-signed receipt from the OT server + User to withdraw funds.5)  Any user may 'challenge' any withdraw transaction posted to the blockchain, these 'challenges' will be performed by automated audit-bots.6)  When a transaction is challenged, the escrow agent (also an automated bot) validates the latest audit and determines who is at fault:       1) the server  (in which case the server's escrow funds are lost and all accounts are frozen at the last successful audit)       2) the person making the withdraw ( in which case the withdraw is denied and transaction fee kept)       3) the person challenging the withdraw (in which case they forfeit a deposit made with their challenge request)Escrow agents (bots) are anonymous and also post surety bonds with other agents.    They make money on transaction fees charged by all withdraws/deposits to many different OT servers and thus have a reputation to maintain to protect their revenue stream.  Escrow agents are also unable to steal funds because they can only deny withdraw requests AND they are also bonded and their actions can be challenged.   Besides, an OT server would probably have N different escrow agents that must all agree for a withdraw to occur.  Users would only deposit money with an OT server if they trust at least one of the escrow agents who in theory have a trusted track record serving many other OT servers. Transaction servers make money on transaction fees and are unable to 'steal funds' because the funds are controlled by the blockchain gated by the escrow agent. All that is needed is an automated audit protocol that keeps accounts 'anonymous' while they are on the server.    OT can then use the block-chain exchange for pricing information while enabling users to transact anonymously, instantly, and trade in real time.  I have found some significant backing / funding for the development of BitShares and am attempting to put together a budget / development plan / team.   If there is anyone on this thread that would be interested in a job integrating OT-like functions into BitShares and/or developing a trading GUI that has dual use for OT and BitShares then please contact me. Well I have funding for bit shares.    The bigger idea with bit postage is that you can pay for storage not just transmission.  End result is massively decentralized torrent of everything.  Clearly something that should be built.   After bitshares.   Bit shares and bit postage are two different ideas and chains.  I would not dream of combining them.    It was brought to my attention that I didn't detail the deterministic trading algorithm:Given the set of all unspent outputs as UnspentOutGiven a currency pair, say crypto-USD / BitShares.Given the same pair, find all crypto-USD issuance (short positions) and sort by margin.Find all bids and asks and sort them.While the HighBid >= LowAsk    Average the HighBid and LowAsk to calculate the current Price    if the price > margin threshold of lowest margin position       match bid against margin call at Price       push any left-over short position or bid to the stack    else       match the bid and ask at price       push any left-over bid or ask to the stack.The result of the above loop will be a single transaction of the following form:1) all referenced bids, asks, and margin calls as inputs2) the net result of all trades and margin calls as outputs.         * note a bid may be paritial matched against 100 different asks and there           would only be a single input from that bid and a single output of any           change.  All of the intermediate steps would not enter the blockchain. I wanted to clarify some things:1) crypto-USD is not a separate blockchain, but is a separate 'unit' used on the same blockchain as BitShares.2) Market Dynamics for mining will be interesting, and I think the result is that it will motivate people to start mining sooner.  After all, as the money supply increases the rate of return falls.   Miners who mine in the first year will end up seeing 100% dividend payments over the course of one year *if* they hold on to their bitshares after mining.   As a result, you want to mine as early and often as possible and hold on to the shares as long as possible.   This should cause the 'demand' for holding bitshares to be higher than the demand for holding bitcoins.  If you factor in time-value of money then the value of mining will probably be MORE than bitcoin even though the immediate payout is less. Where did everyone go?  Any feedback on the white paper? Why did we start a new thread?   I am attempting to pull the best ideas from across the web/forum into BitShares.  If the result is something bitfreak and I can both use, so much the better.  I will be developing in c++ though.  The bloat may not be a problem for you, but I am building a blockchain with built in exchange which means having as much data as possible in Ram to match bids / orders.  It also means an order of magnitude more transactions.  If you end up paging things out to disk that will be a problem.   I will also have clients that want to be on multiple parallel chains at the same time and thus what isn't a problem for one chain can become a problem when you start multiplying the problem. I just sent you the last .05 BTC for your latest update.  The merged-mining strategy and cross-chain trading would be useful for this and I do need a secure message system for BitShares escrow disputes. 
Updated White Paper on BitShares:  http://the-iland.net/static/downloads/BitSharesWhitePaper.pdf   Well, Bitcoin seems to think that 1 day is sufficient to handle chain-reorgs.There *is* one benefit for the long-tail proof of work is that it establishes the initial difficulty condition.  Which would then force all attackers to have 51% power with the ability to overcome 1 month of transactions. True, assuming the demand for such a service was steady and didn't fluctuate too much.But BitShares solves this particular problem in a better / more useful manner.  The hardware that you would have to specialize to improve my current algorithm would be RAM densities, bus speeds, and fast recovery from branch miss-prediction.   These are all general purpose improvements that would benefit everyone.  A GPU is data parallel and thus can gain by adding even more specialized (less general purpose) transistors.  Well, the value of 1 NMC would change over time and thus that wouldn't be price fixing.  Price fixing is attempting to force a particular relative valuation between two 'floating' goods.  If the network defines 1 NMC to be the price of a 1 month lease and there is NO OTHER way to purchase a 1 month lease then the unit of value that would fluctuate would be a 1 month lease and thus not price fixing. you cannot 'price fix' things and this system would not track the price of dollars or any fiat. Here is what this system would do, it would eliminate the need to 'price-fix' domain name storage and lookup like namecoin currently does.   Instead, the 'fees' demanded by the miners who have to store your domain records would go up.  You would know it was time to 'renew' when 50% of new blocks generated failed to contain proof they have stored your domain record.   You would then have to 'rebroadcast' a transaction with more fees to make sure people kept and distributed your domain record.    The end result is that the price of 'owning and maintaining' a domain name will approach the distributed cost of storage and be very 'cheap'.  Now the domain names would have to keep up with demands for other kinds of storage.  For example, you could store these forums and your posts to them.     Now this is where it gets interesting.   *other people* could pay to 'top up' your storage and as a result you could receive a commission.  If you divided all data chunks into 1MB chunks then what you would end up with is a GIANT paid-for torent-of-everything.    Every chunk would be 'encrypted' and thus the information about what data was in any chunk would have to be exchanged 'off-chain'.  The network could check ever 1MB chunk for 'randomness' and not allow any 'non-random' data to be stored.  This new chain would probably become known as 'PirateCoin'  due to these features... but it could be marketed as a legitimate P2P web-hosting service.Note:  All mining nodes would have to store all data in order to validate new blocks.  Users of the system wouldn't have to store anything other than the data they want to keep published and the transaction history of the coins.Now there is one bit of scalability to be concerned about:  to 'prove you hold all of the data' and thus collect the fees would require you to HASH your entire database just to mine a block.  This hashing process ALONE would become the entire proof of work because hashing 1 TB of data with sha256 would take over 3 hours.     You could scale it up a bit by allowing the fee to be collected only once per day, week, or month instead of every block.    This would cause all nodes to focus on the 'oldest profitable' unproven data instead all data.    With this approach I think the network could scale to store 1024 TB of data proved on average about once per month.    If the fees went up then I suppose it could scale to any amount of data by increasing the interval of proof.You could then organize the nodes in a KAD hash-table to facilitate rapid and efficient lookup of data without actually requiring all nodes to store all data except for the 'window' when they are competing to win the mining award / transaction fees.  Yes it would.    This would work, however, maintaining even the diffs of the entire account history would require GB of data for any large number of accounts.    I think the right solution is to not require anything more than 1 year. In other words the proof chain is worthless and the mini-block chain must have at least 1 month of history. My first optimization:  replace the final 'hash' of the entire 128MB buffer with CityHash128 instead of sha1.  This is 'secure' because you are hashing 'random data' seeded from a secure random number generator seeded by sha256 hash of the block header.   End result:  to create a valid collision, you would have to flip a bit in the block header that could survive sha256+blowfish and then collide with CityHash.Given that CityHash should be about 20x faster than sha1 and the final sha1 is the a large part of my benchmark time (~1.5-2 sec) to hash 128 MB, I should be able to significantly reduce the validation time from 7 days to less than 1.   Given my latest design for BitShares only requires 1 year of history, it could potentially be well under 12 hours to validate the chain.I could probably accelerate it more by 'spot checking' instead of hashing the whole thing. double-spending is not a 'global' attack on the network and could occur with less than 51% depending upon how many confirmations you require.  The only people motivated enough to attempt a 51% attack are those who want to DOS the network.   Define 'good' chains... all chains must follow the 'rules' so they are all equally good... but the chain that pays the highest dividends is 'best' provided it also has the requisite difficulty *and* didn't leave any potential dividends on the table.     If all of the nodes on the network *only* consider the hashing power in deciding which block to accept then the network is subject to 51% attack and a government could buy up enough hashing power to perform a DOS.   However, I think that BitShares has another means of preventing the 51% attack.Every node in the network has financial incentive to accept the block that pays the most dividends.   Because all transactions are 'broadcast' every node has an idea of how many dividends *should* be available in a published block.   Any block that doesn't contain 80% of the published fees could be rejected.   An attacker with 51% of the hashing power would no longer have the power to deny valid transactions with high fees.  They could only succeed in denying the bottom 20% of transactions which would push up fees and thus mining rewards/dividends and therefore increase the network security until there was an equilibrium between fees and security.In this way I have given all share-holders a financial incentive to reject forked chains even if they are not mining.  Miners would then realize they would be unable to spend their profits with these users and thus would not have any incentive to cheat the shareholders out of their dividends in an effort to manipulate which transactions are in or out. Bitcoin cannot change hashing algorithms without a 'fork' as the current miners would never go for it.  But new chains could benefit from a better algorithm and then the market will decide where to move the value.  I have a question about the proof-chain.The proofs are only valid if they are newer than the head of the chain because old proofs say nothing about new blocks.   Therefore, having a history of 'random proofs' for which you no longer have the block header used to generate the proof nor any of the data from that block that serves to confirm the initial condition of the oldest block in the mini-chain is actually worthless.   Any attacker could start building off of the proof chain at any point and ultimately 100% of your security comes from the mini-chain.  The only 'value' the proof chain could provide is to the extent that it enables new proofs to be performed *after* the most recent mini blockchain node.  Please let me know what I am missing and why I should care about the old proofs which confirm nothing about the initial state of the mini chain. I started a bounty for a better hashing algorithm that will keep things more decentralized: https://bitcointalk.org/index.php?topic=234611.0As long as changing the hashing algorithm is on the table, we might as well attempt to find the best one! Merged Mining is a CRITICAL aspect for scalability of many different block chains.   Unfortunately, merged mining requires a merkel tree as the proof-of-work and thus takes more space in the block headers that must be stored forever.   So if you want to create a system like bitshares that will ultimately have 1000+ chains each trading in a subset of the available securities then merged mining will be critical.   However, you do not want to 'artificially' limit the depth of the merkel tree nor do you want to allow merged miners to get a 'free lunch' at the expense of everyone else by including every chain under the sun in their POW merkel tree regardless of the potential value of that chain.   So, I have devised a new approach to allow BitShares to natively support merged mining with proper profit incentives to minimize the size of the merkel POW tree without placing any limits on the size.    If there are two BitShare chains (Red and Blue) and each chain is trading in a different subset of securities then a miner who is doing merged mining for both chains has 3 options, mine red, mine blue, or do merged mining.   If they opt for merged mining then both the Red and Blue networks experience a cost to accept the larger POW and yet the miner effectively doubles his payout.    So the new approach use the depth of the merkel chain that proves the work to discount the percent of the reward that goes to the miner with the balance going to the dividends.    Thus you can calculate your mining reward as  block-reward / 2^proof-depth.   The end result is that if Red and Blue BitShares have equal market value and difficulty then merged mining is equally as profitable single mining and in both Red and Blue chains benefit from the added hash power.If Red and Blue chains have different values and difficulties then miners will have to carefully choose which chains they mine based upon the expected growth of both chains relative to the division of their hashing power.   This would enable good and useful merged mining without the costs of unprofitable merged mining being foisted on the larger networks or creating a 'master / slave' chain setup.  I think the problem with any public backing of crypto-chains is a central point of failure.   These would effectively be a new form of bearer bonds and thus illegal.   So while in theory you could have many 'signers' and more 'transactions' with 'lower energy input',  I think the 'energy input' argument is entirely missing the point.   We waste far more energy and resources decorating our homes for christmas and manufacturing all of the decorations than energy would ever be put into mining.With BitShares mining and 'owning' are equally profitable and the algorithm is far more decentralized.  The profits from mining will approach the average profitability / interest rate in society and thus consume no more resources than the value provided to the consumers.   Ultimately transaction fees back all mining and people will not pay for more security than is necessary. I just wanted to inform everyone that I have started a 1 BTC bounty + 1000 BitShare bounty for the creation of the next generation proof of work to be used in the BitShares blockchain: https://bitcointalk.org/index.php?topic=234611.msg2478855#msg2478855    I am in need of a next-generation proof-of-work algorithm and my goal is to select the algorithm for BitShares.   The goal of the algorithm is to prevent the profitability of the development of specialized hardware that has an order of magnitude advantage over the hardware already owned by the masses.     I will pay 1 BTC to the best POW algorithm that I select for use with BitShares.   To kick off the ideas, I would like to present my draft algorithm:  https://github.com/bytemaster/bitshares/blob/master/src/proof_of_work.cpp           Now I want to encourage people to post ideas and cooperate, so I will divide up the bounty based upon whoever provided insights that are ultimately included in the final algorithm.   In other words, there is partial credit for contributing to the problem and NOTHING to gain by hiding your algorithm from everyone else to prevent giving away your insights.     The proof-of-work used by Bitcoin is double SHA256 and has resulted in the production of specialized ASIC chips designed to perform this function.  This level of specialization has caused mining to become a high-risk specialty business that is controlled by a small minority of the Bitcoin community.   This centralization becomes a liability on the network because these miners can be manipulated or shut down just like the exchanges.   Mining pools are another form of centralization that also serves to centralize power.  Taking out a single mining pool could disrupt the hashing power of the network to such an extent that it could delay transactions for days until the difficulty could adjust.   The first step toward keeping the proof-of-work more decentralized is to design a hash function that will perform best on a CPU and will not benefit at all from a GPU or even specialized ASIC.  There are several keys to creating such an algorithm.     First, it must be based upon utilizing the most transistors in the most efficient means available that is also widely available to all consumers.  RAM and cache are very dense, highly-optimized ASIC chips that are already distributed far and wide.   Historically RAM and CPU power availability have tended to grow at about the same rate; therefore, RAM usage is a requirement that specialized ASIC chips or even GPUs will not be able to optimize away via parallel operation.  This leaves all performance gains to be serial in nature.   Another characteristic of using RAM is that system bus speed will be far more important than CPU power as the CPU will be starved for data most of the time.  By keeping the CPU starved for data optimizations to the CPU processing will not affect the bottleneck and therefore even a 10 fold increase in performance will not result in an increase in throughput.         Second, it must be based upon sequential data processing with no ability to perform branch prediction.  This alone would prevent most data-parallel or pre-fetching optimizations from working which will make the GPU architecture perform far worse than a CPU.  GPUs also suffer from memory bus limitations and their performance drops significantly if the working set cannot be kept in the much smaller local caches associated with each core of the GPU.      My algorithm  so far should meet almost all of my criteria, the only 'problem' with it is that it takes about 1-2 seconds per hash on a Core i7 which means that it would take almost 7 days just to validate the existing blockchain.    This also means that a secondary 'proof-of-work' would be required to prevent spamming the network with bogus block headers and forcing everyone to perform a 2 second calculation.   One of the measures by which candidates will be judged is how quickly they can be validated while still preventing optimizations such as 'sparse memory buffers' or significantly reducing the RAM requirement.    Assuming this the winning algorithm is ultimately included in a deployed BitShare blockchain, I will also award a 1000 BS bounty payable within the first 6 months of BS launch in the same ratio as the 1 BTC bounty.   Obviously the BitShare portion of this bounty cannot and will not be paid if BitShares are never released.     Let the games begin!  BitMessage is great because it allows anonymous communication while preventing spam.  What it suffers from is an 'inability' to store proof of work.  So I was thinking of ways to make it 'profitable' to participate in the network and enable the creation of an interesting 'postage' chain.  Given 'postage' you would be able to send messages from devices without CPU power and without any delay.  The ability to send messages without delay is actually critical for may 'real-time' interactive uses.Start with a normal 'blockchain' that mines BitPostage and allows it to be traded on the chain.   Then allow messages to be sent for a fee proportional to their size.   The challenge is in making sure there is motive and requirement to send the ENTIRE message broadcast through the network.    If it simply operated like BitCoin then there would be no motive for forwarding a large message, after all only the miner can profit.    To solve this problem we have the BitPostage network pay dividends from transaction fees.    The second challenge is preventing nodes from cheating and 'only sending the hash' of the message so they could collect the dividends without actually including the message.   This could be done by making the mining reward dependent upon hashing the coinbase transaction as a prefix to the entire message and thus prove that the entire message was present at the time the coinbase was generated.Then there is the challenge of ensuring that the message is 'held' on the network for a certain length of time before being deleted.   This can be solved by allowing the same message to pay out fees over many blocks where the miner must *prove* they still hold the entire message.  Every other node in the network would also need to store the entire message in order to 'validate' the blocks.    The result will be that users could select how long they want a message 'stored' in the network based on the fee they pay.   All data would be on all nodes and all nodes benefit from keeping the data available and forwarding it on.  Once the message runs out of postage miners no longer need to keep it around to earn fees so they can delete it.
In what way do you see BitShares falling short of the ideal (particularly in light of the posts in this thread in the past 24 hours).   BitShares has absorbed the inter-chain trading of MarketCoin and expanded/enhanced upon it so I would like to know what else is missing so I can work to address it. To achieve higher speeds and greater privacy we will require a system like Open Transactions where you have an anonymous server that cannot 'forge' receipts and can destroy all transaction history while still providing a provable balance.      An anonymous transaction server can back 100% of its issued IOUs with collateral held in the blockchain and identifying a large number of trusted yet anonymous 'escrow agents' to handle any disputes regarding withdraws of funds from the server.  Now we can allow anyone to make deposits into the OT server by contributing to the escrow balance.   Anyone can also make withdraws from the OT server's escrow fund by presenting the last signed receipt as an input to the transaction.      At any time any party may open a 'dispute' regarding a withdraw from the OT server's pool which will immediately freeze all withdraws until a super majority of the escrow agents 'vote' to either  'halt' operation of the server or clear the server of wrong-doing after performing an audit of the server.    All withdraws have a 24 hour waiting period where they can be challenged. To open this 'dispute' you must post a good faith fee that will be forfeited if the signed receipt is proven valid.  To launch a new OT server you must post a surety bond that will be forfeited if the server is found 'guilty' to the individual who first reports the failed audit.    What is the end result of this system?   All parties have incentive to audit / monitor all withdraws for fraud.   The escrow agents collect a small 'fee' from every deposit / withdraw and thus do not want to risk losing their reputation over a single OT server as they will be providing their services for many OT servers and private transactions.  Depositors, traders, and others would all have interest in reporting fraud as well as the OT server itself.  Assuming a 'provable' audit could be performed on a OT server (which I think is possible) then we can achieve both high-speed and anonymous transactions in a secure, decentralized manner.   This would have to be supported by the block chain directly to automate the escrow, surety bond, deposit, and withdraw, and dispute process.  In the event that the server 'disappeared' then it will be up to the depositors to 'prove' the most recent audit / receipt which would allow the escrow agents to redeem receipts on behalf of the server.  End result:  high-speed, anonymous, secure, and fraud-free trading.      Scaleability issues that must be addressed:1) Every block must update the dividends per share of all bond types and this information must be tracked as far back as the oldest 'unspent' output.  Dividend calculations are required for every input and must either query every prior block's divided table or there must be a lookup table based upon 'coinage'.   2) The number of potential trades / exchanges grows with O(N^2) of the number of currency units thus for 8 units, there are 56 possible short/long combos each of which requires 16 bytes / block 'forever'. 3) Even storing just the 'unspent' outputs at under 50 bytes each would result in TB of data in short order assuming transaction volume similar to Bitcoin, but exchanges will probably have several orders of magnitude more trades than bitcoin experiences and therefore unspent outputs must be managed better than Bitcoin.Conclusion:   Transaction fees must be based more upon the net gain in unspent outputs rather than the total size of the transaction.  We can 'forget' all of the inputs after enough proof of work, but the outputs we will pay for forever.      We want to motivate people to combine dust and this can be done in two ways, reduced trx fees *and* not paying dividends below a certain threshold.     We must recover old transactions and force people to keep all outputs 'current' to limit the amount of 'dividend history' that must be maintained.  At the very least, any dividends that go unclaimed for more than 1 or 2 years could be 'forfeited' and thus all outputs must be spent every 2 years or they lose their dividends.   Though a more 'pro-active' approach of 'taxing' 2+ year old outputs and paying them out as dividends would serve to keep all outputs current and recover value lost to lost private keys.   This 'tax' can be thought of as an 'inactivity fee' that banks charge accounts and as a means of reimbursing the network for holding on to your unspent output for a very long time which has significant costs when you factor in the total number of nodes that must replicate and index that output.     The chain must support 'cross-chain' trading to allow parallel BitShare chains to develop that enable trading in a wider range of currencies, stocks, and commodities as well as higher volumes than could ever be supported by a single chain.    Thus when the transaction fees get too high on one chain, the market can create a new parallel chain that complements the existing chain.  Because every chain enables trading any asset type it is easy to synchronize value between the chains with only a subset of nodes performing arbitrage roles. While BitShares is the only proposal that I know of to have a dividend component, the unspent output scalability issue as well as the O(N^2) trading pairs and higher transaction volumes will mean that any block-chain based approach will need to have an efficient mechanism to 'go-parallel'.       Addressing these scalability issues is a critical component. Based upon some of the recent updates / additions to BitShares here is a summary of the 'changes' to Bitcoin. A BitShare is a new crypto-currency that has most of the properties of BitCoin.  They are mined into existence, transferred via a block-chain, secured by encryption and proof of work.  The primary difference between a BitShare and a BitCoin is that a BitShare will pay you dividends via 50% of the transaction fees and mining rewards. The BitShare block-chain introduces a few new rules and transaction types that turn it into a secure, multi-currency, bank, exchange and escrow service. Definitions: 1) BitShare        - Dividend Paying Crypto-Currency 2) CryptoBond      - An IOU secured by a BitShare or other CryptoBond 3) CryptoUSD       - An IOU USD secured by BitShares. 4) CryptoGold-USD  - An IOU Gold secured by CryptoUSD 5) CryptoBS-USD    - An IOU BitShare secured by CryptoUSD I will now go over these new transactions: 1) Short Sell    - A transaction that provides collateral as input and specifies an ask for a CryptoBond at    a specified exchange rate.  This transaction may be canceled. 2) Bid    - A transaction that provides a payment BitShare or CryptoBond and a request to purchase a BitShare or CryptoBond      at the specified exchange rate. 3) Call / Put    - A transaction that gives another party the right to claim the output at the specified price by the specified date (block).  The    output of this transaction represents two sides of the trade and both sides can exchange their position with other addresses.  Call    options come due once per month.   These instruments may be traded like CryptoBonds or BitShares via the exchange system.  The collateral    necessary to secure the position is held for the duration of the instrument. 5) Register Escrow Agent    - specifies the fee and surety requirement, term limits, hash of the arbitration agreement, BitMessage address, Surety bond, and a list of    other Escrow Agents that may release the Surety bond along with an expiration date.  The input to this transaction is    the surety bond and may be denominated in any CryptoBond. 5) Escrow Transaction    - A transaction that specifies an escrow agent and pays an escrow fee and surety requirement and a hash of the 'agreed contract' signed by both    parties.  If dispute is filed, this transaction automatically clears after a certain amount of time.  No new transactions may be issued    using a particular escrow agent if there is an open dispute 6) Escrow Release    - A transaction signed by a party to the Escrow Transaction to release their funds to the other party and the fee to the escrow agent. 7) Escrow Dispute    - A transaction signed by either party to lock the funds until they are released by the escrow agent.  Escrow Dispute Resolution    - A transaction signed by an escrow agent that divides the escrow funds among the two parties.  This transaction may be disputed as    well and will be resolved by whoever is allowed to release the surety bond. 9) Foreign Chain Trade   - A set of transactions that implement atomic cross-chain trading.Built-in Exchange Rules:   Every block the miner is responsible for deterministically pairing bids/asks that are already present in the chain.  The Miner is   also responsible for giving all margin calls priority over all other bids.  The process of pairing bids/asks and resolving   Margin Calls is deterministic.  Transactions matched by the miner may not be spent for 24 hours when the mining reward is released.   Between blocks, no transaction may exchange value between two CryptoBonds unless done at an exchange rate between   the bid and ask price of the prior block.  This will enable rapid off-chain negotiation and instant spending of the resulting   trade when it gets included in the next block.  This rapid off-chain negotiation can only occur between parties with an   active connection to the network and the ability to sign with their private keys.   The miner may collect a 5% fee anytime Margin is called.   Anytime a position runs out of margin, it is liquidated and the proceeds are paid out as dividends. All, I want to state that I support this effort, but will be withdrawing my bid to pursue any part of this bounty due to the progress and funding I am receiving for the development of BitShares.       Agreed with #2I originally agreed with you on #7 but only because I thought it was 'too difficult' and 'orthogonal' to the trading function.   But when you consider the #1 complaint against earlier versions of BitShares was that you 'still have to use escrow' you realize that the *primary purpose* of most exchanges is escrow.  The key thing to understand / avoid in creating a P2P exchange is how to avoid using 'escrow' at every time a bid/ask is matched because escrow and moving fiat is way to slow to be placed in this bottle neck.   Thus you want to create an escrow system that helps people get into / out of crypto-bonds.Why should escrow be built in?   Because money held in escrow faces exchange rate risk and therefore you want the 'escrow-funds' to be denominated in the same unit as the fiat funds.   Two, you want to avoid trusting a 3rd party at all if both parties execute a successful transaction and in the event of a conflict you want the escrow agent to be restricted in who they can send the funds to.   Third, you want the escrow agents to be anonymous, decentralized, and profitable to ensure they have profit motive for providing just arbitration services.   Fourth, you want the escrow agents bonded so that their decisions can be disputed by yet another 'anonymous' agent. All of these 'features' of escrow are best implemented via a blockchain and to avoid the blockchain synchronization issues it is best to integrate escrow into the P2P exchange chain as a simple addition of a few output scripts.   So in conclusion, the 'ideal' exchange seamlessly supports escrow and thus handles fiat.  The fact that it makes fraud almost impossible means that it will not be 'profitable' to attempt fraud and thus all users can trade confidently even with fiat without having to deal with capturing their SSL logs and potentially compromising their account information even on successful transactions.   It also avoids artificial limits on the means of performing the fiat exchange as (cash, check, money order, wire transfer, paypal, etc... ) could all be used provided evidence of the 'transfer' could be captured and presented to the 'anonymous' escrow agent.  #13  agreed.  PAID.   I was unable to open the .xls in keynote thus couldn't copy your address.      This also tells me that even going so far as to 'distribute' the outputs via a hash-table and then 'prove' the outputs are in the chain via a merkel tree wouldn't actually save any space.  Merkel trees would require at least 28 bytes just for the hash and the 'merkel tree' of the full set of outputs would be the same size as the outputs.   By block and not transactions but total outputs... ie, maintain a running total without subtracting the spent outputs.   What this graph tells me is that if we were to 'compress' the bitcoin blockchain with the simple approach of only 'storing' the unspent outputs where these outputs are 50 bytes each, that it would require a 350 MB output database + index or about 500 MB.    It is also growing by about 1 million new unspent outputs per month or about 50 MB / month and accelerating.   Thus if the only thing we did was to optimize the storage of the blockchain it would likely require over 10 GB in less than 10 years time.  I suspect that the number of 'unspent outputs' is greatly increased due to mining pools, sdice, and the perverse incentive not to combine dust.   Suppose we were to charge based upon the number of new unspent outputs instead the total transaction size?   Suppose that transactions with more inputs than outputs were 'free' and we somehow reward miners for including these transactions?    Perhaps reduction in storage size would be all of the 'fee' required?   Now suppose that funds that are not spent for a few years start to be 'charged' storage fees?       Why should the entire network incur an ongoing 'cost' to store these outputs forever even when people have lost their private keys or generated 'dust'?   I suspect that with a few incentive changes we could reduce the number of unspent outputs by 50% or more.  The other thing we can conclude from this is that the total number of bitcoin users is WELL UNDER 1 million if we assume that the average wallet contains a mere 10 unspent outputs.  What I also conclude from this is that if every user only had a hand full of accounts (checking,savings, business, etc) on the same order of magnitude that they currently manage in the banking system then the network 'at maturity' would have 10 * 10,000,000,000 accounts * 50 bytes  and require about 5 TB just to store the 'unspent' outputs.    If bitcoin doesn't do something it will hit that number long before 'maturity' and thus long before technology will enable the average computer to store it and access it in reasonable times.  The primary argument for lots of addresses per account is the theory that it increases privacy.    The reality is that most of that privacy is an illusion and that some other solution (zero coin, open transactions) should be used instead.       Also, if you could export it as a .csv because I don't have .xls and Numbers will not open your .xls file because it has too many rows. Could you send me your bitcoin address in a form I could copy and paste vs in your graphic? Criteria of the Ideal P2P Exchange 1.  It must be without any central points of failure. 2.  It must present a deep market with a large number of bids and asks. 3.  It must enable orders of any size to be filled in a single transaction (provided there is reasonable market depth at a given price) 4.  It would enable all forms of financial transactions including: long, short, put and call options. 5.  Trades must be atomic and not subject to failure after a bid and ask have been paired. 6.  It must lock in all trades in minutes and finalize those trades within 24 hours. 7.  It must enable secure escrow of fiat transfers between parties. 8.  It must be easy enough for anyone who can use Bitcoin and an existing centralized exchange to understand. 9.  All trade data must be public to enable the creation of charts necessary to facilitate trading. 10. It must be scalable 11. It must not depend upon 'external' price sources of price information (tickers, voting, self-reporting, etc) 12. It must shelter as many users and transactions from legal liability as possible. 13. It should address known scalability issues with Bitcoin He could post it because I already gave him credit for the bounty (conditionally) and thus no one could steal it.bitspill:  I will throw in an extra 0.05BTC to rerun your script and include the 'total outputs' in addition to 'unspent' outputs.    Regarding requirements on a P2P exchange...    should we add the ability to take out short positions?   More Details on P2P Escrow:1) all communication would be done via bitmessage.2) all escrow agents would get to pre-define their terms:  (fee, surety rate (20% above) time tables, bitmessage address, required evidence, etc) in the block chain3) The escrow agent does not collect the fee until the transaction settles and can only divide the funds between the two parties.4) Escrow agents could place their bond with another escrow which will create a 'web' of trust, only a few of the escrow agents would have to be 'public' or 'known' to enable all escrow agents to function honestly.5) The block-chain would then automatically enforce the fees, time tables, and other aspects of the escrow contract.6) When funds are released by the escrow agent, it may be 'challenged' in the block chain for 24 hours.  If a 'challenge' transaction is placed into the chain then a new dispute is raised with the agents bond on the line.    7) This process of appeal can continue until you reach a non-bonded agent (presumably the trusted public figure) or 3 consecutive appeals result in the same decision. Because all communication occurs over BitMessage it can all be integrated into the BitShare client app which will be able to 'track the progress' of the dispute, confirm payment, etc.   Because all escrow agents, transactions, and dispute decisions are logged in the blockchain, it is easy to discover and follow which escrow agents have been used the most, have resolved the most disputes, what their fees / schedules are, and how long it takes them to resolve disputes.   It would also give you insight into how often one agent is involved in a dispute and which side of the dispute they side with (normally).  All of this information would make the 'outliers' stand out and help people choose anonymous escrow agents.End result?  Cheap, 'trustless', escrow with anonymous dispute resolution necessary to facilitate fiat-trade. Regarding long-distance crypto-USD.   This could be done in an anonymous manner via a P2P escrow system where the crypto-currency side of the transaction places their funds in escrow with an 'bonded' escrow agent with a pre-signed arbitration agreement.   This escrow agent would then control the release of the crypto-currency provided both parties confirm receipt of fiat.   Only in the case of a dispute would the escrow agent have to know the financial details of the transaction, especially if the 'hash' of the agreement was encoded into the block chain. The escrow-agent only gets involved if there is a dispute and does not have to take any actions at all if there is no dispute.    Failure of either party to communicate with the escrow agent (in a dispute) will be considered 'default'.   The escrow agent could be used without any pre-arranged agreement with the escrow agent *provided* the transaction includes a hash of the arbitration agreement and pays a small fee to the agent. The sender of the crypto-currency would actually place 120% in escrow.  If they claim they didn't receive the fiat and the sender of the fiat can prove otherwise then the sender wins 120% to cover the cost of the dispute.  If both parties agree then 100% is forwarded on to one party and 20% is returned to the other.  Why can they trust the escrow agent?  Because the agent is bonded and has a large amount of BTC in escrow with one or more other agents.  If there is a dispute with the escrow agent then it can be taken up a level.  Why would an escrow agent post a bond?  So they could earn fees on every transaction that uses their services.   Why would they be fair?  Because it is more profitable to be fair than to cheat as you could only cheat once.   If all escrow agents are 'bonded' with many other 'escrow' agents then it would be easy to trust them provided even one of the escrow agents was had a known and trusted reputation.  Based upon this, the blockchain should support this kind of 'escrow' arrangement built in. Definitions:BitShare -  A 'dividend paying, bitcoin-like, crypto-currency'. crypto-bond - an IOU denominated in one asset and backed by either BitShares or a crypto-bond denominated in another asset.crypto-USD -  a crypto-bond denominated in USD with collateral in the form of BitShare's held by the block chain.crypto-EUR-USD  - a crypto-bond denominated in EUR and backed by crypto-USD. crypto-BS-USD  - a crypto-bond denominated in BS and backed by crypto-USDUse Cases:1)  Grandma wants to earn a 10% return on her dollars, but is unable to use a computer.   Her grandson decides to help her out, so he receives the dollars from his grandmother and then uses them to buy crypto-USD.   He buys his crypto-USD by posting an ad on craigslist saying that he is looking to buy some.    Someone responds to the add and they meet up to exchange crypto-USD for paper dollars.  The grandson then prints out the private-key and gives it to his grandmother to hold on to.2) A year later Grandma wants to get her dollars back, so she contacts her grandson and gives him her private key.  The grandson then gets on crags list and sees an ad for someone near by who wants to buy some crypto-USD.   They meet up and trade and the grandson then gives the money to his grandmother.3) George lives in the middle of nowhere and the nearest person with crypto-USD is over 2 hours away.    Fortunately, he has family who live in a major city, so he calls up his brother and offers him $10 to buy $1000 worth of crypto-USD from another local.  His brother agrees, so George sends him $1010 and his brother then buys 1000 crypto-USD and then transfers (via BitShare) those crypto-USD to George in the middle of nowhere. 4) Sam is a trader who specializes in crypto-currencies.  He has been watching the market and sees that BitShares are 'undervalued' relative to crypto-USD and so he decides to 'short' crypto-USD by selling it into the market.  To do this he is giving up his dividends.   If he was right, the value of crypto-USD will fall (relative to BitShares) and he will be able to buy back the crypto-USD for less and make a profit greater than his dividends.    If he was wrong, then the value of crypto-USD could rise and the network could cover his position causing Sam to lose money.    As a result, it is only profitable to short if you expect the price to fall at a rate faster than the dividends you give up!5) Alex is an early adopter of BitShares, he has mined 100 BS and believes that they will triple in value in the months ahead.   He could simply hold his position, but instead he wants to leverage up.   As a result, Alex shorts crypto-USD.   If he is right, then he will gain more from this short position than the dividends he might have earned by simply holding BS.    In this way Alex is creating crypto-USD for the 'risk-adverse' in the early days when BitShares are already appreciating rapidly and paying a very high dividend.  6) Alice is a currency trader who wants to play the EUR/USD market.   Alice mines some BitShares and then uses them to buy crypto-EUR.   She then uses her crypto-EUR to short crypto-USD (creating crypto-USD-EUR) because she expects EUR to go up relative to USD.7) David thinks that BitShares are overpriced in a new bubble, so he buys crypto-USD then uses it to short BitShares creating crypto-BS-USD.   Andrew, like Alex, believes that BitShares will go up in value; however, he doesn't like the exposure of going short USD, Gold, or anything else.   Instead he deciders to go long crypto-BS-USD.   Because crypto-USD pays 2x the dividends (in BS) as the equal value in BS, and crypto-BS-USD requires 2x margin held in crypto-USD to back the crypto-BS-USD, then Andrew can earn 4x the dividend rate by purchasing crypto-BS-USD without having to expose himself to any other currency. 9)  Fernando runs an online store and wants to accept payments via a crypto-currency.  Unfortunately, all of his suppliers price things in USD.   Fernando instead opts to price things in crypto-USD.  As a result his customers get price stability, Fernando avoids all exchange fees that would be incurred if using something like Mt.Gox merchant services, and Fernando gets to earn interest while he waits to cash out.10) Luke has some Bitcoins and wants to buy crypto-USD, using the BitShare exchange.   First, Luke must acquire some crypto-Bitcoins so he finds Charles who has crypto-BTC and is looking to get real BTC.    So, Luke and Charles use this algorithm: https://en.bitcoin.it/wiki/Atomic_cross-chain_trading   to exchange Crypto-BTC for BTC without having to worry too much about the 'exchange rate' as it should be about 1:1.     This 'feature' for cross-chain-trading would be 'built-in' to the BitShare client where Luke and charles would only need to specify the 'addresses' in each chain and the exact exact exchange ratio.   The clients would support 'broadcasting' bids/asks to negotiate 'real-time' counter-parties and all transactions would 'expire' within 20 minutes.   Because the trading range on BTC to crypto-BTC is very small the market should be very liquid and very quick and can easily require all nodes to be alive and interactive without having to worry about a 'thin' market.  It would likely work even if only 2 people were online at the same time.Given the above 'cross-chain' trading algorithm, I believe that it would be entirely possible to allow much faster trading between all of my crypto-currencies provided all users involved in the trades are 'online' and are not taking out a 'short' position.    Only the process of creating a new short position would require going through the built-in exchange.   Any trades outside of the 'slow' multi-block process would be restricted to valuations between the current bid/ask price in the block chain.Conclusion:  I believe that BitShares would enable all of the above interactions without the need for 'market coin'.  When dealing entirely with crypto-currencies, no escrow would be required to get BTC,LTC,NMC,etc in/out of BitShares.    Once you have crypto-BTC it would be easy to do a lot of exchanges between any other crypto* sub-currency without having to always find a real-time counter party (like MarketCoin would require).   With this latest setup I believe I have 'unified'  MarktCoin, BitShares, and BTC Luke's crypto-bond system.   I have significantly simplified the ability to find local people to trade with by minimizing the buy-sell spread between crypto-USD and USD and demonstrated how someone like Grandma can use a trusted (decentralized) 3rd party to gain benefits from the system without even having to use a computer.    The only peace missing from this system is 'escrow' for long-distance trades between crypto-USD and USD.   As this piece doesn't involve a 'trading engine' I think it falls outside the scope of a p2p exchange.   I suspect that companies like BitInstant which already are licensed would enable such a service to complete the overall solution.  BitInstant would not be a requirement, but would serve to help while they are legal.  Please enlighten me on these more productive uses?   Would the 'bitcoin' foundation ever sponsor an alt-coin if it looked to solve problems that couldn't be added to or directly integrated with Bitcoin? This is my primary concern with MarketCoin.    Assuming we had it built today it wouldn't provide that much value to the current system.   It also assumes that all alt-coins will be compatible with bitcoin-style RPC api and scripts.   Therefore, any alt-coin that wanted to integrate with MarketCoin would have to use some kind of 'plugin' system or be designed specifically for MarketCoin.So my question is this:  suppose you were to create a new Alt Chain, what features should this chain support for best integration with MarketCoin?
That graph looks interesting, could you tell me how you calculated the numbers (only so that I can be sure these are the numbers I was looking for).Right now I will assume you have won the bounty provided your methodology is accurate and you provide me that XLS sheet.   So don't worry about anyone else trying to copy it. I think that all of these ideas are great approaches to the escrow problem.    My ultimate goal would be to make local exchanges as easy and simple as possible by eliminating exchange-rate spread/risk from the local exchanges.   I think that you could eliminate the need for escrow entirely with the following setup:1) A trusted company will certify someone's identity (Name, Address, Government ID)2) Both parties will digitally sign an arbitration agreement with someone like judge-me with their crypto-graphic identity. 3) Both parties then sign the 'exchange terms' with this ID.4) Now they can trade with the knowledge that even without escrow they will end up with a court-enforceable judgment. 5) This arrangement could be made even more 'secure' if the trusted company would 'insure' the transaction for a small fee. The result is that for most people, once they have a signed ID they can 'trust' others with a signed ID and therefore avoid escrow.   The 'trusted company' wouldn't actually have to accept any fiat or crypto-currency except as payment for the 'service' of signing/certifying their ID and agreement to arbitrate.    This will solve many of the 'legal' issues associated with operating as an escrow agent.    I have thought about this recently and from a 'revenue stream' perspective, crypto-gold is worth 2x BitShares, however there is also a risk component and exchange rate fluctuation.     Based upon the 'bid-ask' price used to establish the initial exchange, I would expect it to trade at a slight premium to gold simply because it pays interest.    The point is that the premium fluctuate with the average margin and thus always be 'correlated to gold'.   In effect, any premium is a 'constant' offset and generally predictable.    You could perform a thought experiment.   Suppose the exchange rate between gold and Bitshares was 100 BS to 1 G, then 1 G would pay dividends equal to 200 BS and if the dividend rate were '10%'  then that means 1G would pay 20 BS  / year.    Now if the exchange rate changes by 20% then the 'risk' of holding 1G vs BS is greater than the dividend advantage.   As a result, I concluded that despite 2x the dividend rate it would not have 2x the value in the market except for those playing short-term trades.   The conclusion I draw is that the dividend advantage would serve to generate liquidity.  We are looking for the best combination of ideas  A take back my 'always' comment, the one exception I can think of is Nash Equilibrium where both parties require an initial amount of crypto-currency that they can 'lock-up' as backing for the exchange.*if* you have something that works for BTC to USD without requiring a 3rd party ... then that would be awesome    All,    I would like to takes some time to get some basic understanding about the 'nature of fiat' because there is some kind of belief that there is such a thing as 'perfect representation' when even bank accounts are not a 'perfect representation'.   1) All modern fiat is actually a defaulted gold certificate.  They continue to trade at slowly depreciating values, but this is the true nature of fiat.   2) USD at Mt.Gox is different than USD in Bank of America is different than USD at JP Morgan.   USD at these banks are not perfectly fungible and they trade (in a very small) range based upon the supply and demand for 'credit' at various institutions.   Ask anyone who wants to get money into or out of Mt.Gox if a $1 in Gox is really worth $1 in your hand.  Sometimes it is more, sometimes it is less.   As a result, even something as traditional as Mt.Gox, Banks, etc are not 'perfect representations' of currency.   3) All that exists in the current banking system is dollar denominated IOUs that are exchanged against one another at prices near par.  Ultimately these IOUs have no backing and the primary difference between them and bitcoin is that a central authority can create new IOU USD with no backing.  With that out of the way, lets step back from focusing on a 'solution', namely a p2p exchange, and grab a clearer understanding of the 'problem' where the problem is not the lack of a p2p exchange.   The problem is the market demands a money that combines the best properties of Bitcoin and fiat.   So, I am going to define our problem in terms of creating a 'better' money than bitcoin.  'Money' *is* the ultimate P2P exchange through which all other goods are bought, sold, and compared.   So, lets define why money has value.Money is 'valued' because of its ability to move 'purchasing power' through time and space with minimal losses and risks.       Fiat money suffers from counter-party risk and inflation.  Bitcoin solves those problems but suffers from exchange risk.   Real-time exchanges like Mt.Gox can mitigate the exchange risk by offering 'instant exchanges' and 'real-time' price discovery at the expense of re-introducing counter-party risk.    With that said, what is the logical result of a P2P exchange in the extreme?  Every individual *is* an exchange.   You could say that the free-market is the ultimate P2P exchange!  Why do centralized exchanges exist?  Because out of the billions of people in the world only those at the 'margin' can agree on a price and these people are hard to find and trust and unlikely to be local.  Because the market demands efficiency, particularly with money, any exchange based upon 'trust' tends to concentrate the 'trust' into LARGE organizations with sufficient common trust to produce an internal exchange with sufficient liquidity and small spreads.   A P2P system that only serves to facilitate trading among a larger number of smaller 'trusted' organizations... say issuers of crypto-USD-bonds will only serve to create a large number of dollar-denominated bonds that all trade AGAINST one another with some amount of spread.  'trust' in 1000 different 'anonymous' individuals cannot be aggregated any more than 'trust' in 1000 different fiat-currencies can be aggregated into a basket while allowing each 'currency' to claim that it *is* the same as all of the others.  In effect, simply aggregating many bank notes from many 'small' banks does not cause all notes to have equal value despite the desire of the banks for this to be so.   Trustworthy banks would subsidize less trustworthy banks.   With all of that said, we can then conclude that any IOU system must be backed by crypto-currency collateral sufficient to maintain the purchasing power of the IOU even in the face of exchange rate fluctuations between the IOU and the backing crypto-currency.   All that is required is to define the set of rules for issuing, backing, and covering IOUs that does not depend upon a trusted 3rd party to assess defaults or arbitrate collateral payouts.   I think there currently 4 categories of exchanges:  1) those like local-bitcoins or OTC  2) those like Mt. Gox  3) those based upon decentralized issuers of 'dollar-denominated crypto-currency'  that can be traded / exchanged via systems like MarketCoin or even anonymous exchanges. and last but not least, dollar-denominated crypto-currency without any specific issuer and that has value *independent* from any individual backing it.  Assuming you can have a dollar-denominated crypto-currency with no issuers *then* you have already achieved the ultimate P2P exchange where *everyone* is an exchange you no longer require a system to 'pair' the highest USD/BTC bidder against the lowest 'ask'.   Everyone who wants into a dollar-denominated crypto-currency is a match against everyone who wants out of it and back into paper dollars.  Therefore, it is as decentralized as possible.  Only once you have dollar-denominated crypto-currencies does it make sense to have a decentralized trading platform that allows you to convert between currencies denominated in other units like gold, silver, EUR, or bitcoin.     I am going to go one-step further and claim that BTCLuke and I both require a nearly identical blockchain based trading platform.  We both require collateral with a crypto-currency.  All that remains to be solved is:    1) how are new dollar-denominated crypto-bonds issued?    2) how is the collateral requirement determined?    3) how is default detected and the collateral paid out?    4) how is the bond fulfilled?  Both BTCLuke and I require a 3rd party escrow when trading crypto-usd-bonds for USD (except in person).  I submit that 3rd party escrow is ALWAYS required when exchanging with 'untrusted' parties when one side of the transaction involves something physical.   The only way to avoid the escrow step is if the crypto-usd-bonds were issued by a PUBLIC, trusted, and 'centralized' company.      I have answers to the 4 questions, and would like to see what answers BTCluke has.       You want to follow the pattern used by the LMAX Disruptor which will do what you want to achieve low-latency, redundancy, and backups, and fast fail-over. To prevent Sybil attacks have users mine their identity.   Then you can use this mining to weight nodes.  Make it more beneficial to mine your one identity than many fake friends.   This way indents are not throw away.  I have thought about this a lot and will post more when I am not on my phone If I was mining for Namecoin and Bitcoin I would create an accumulator that included the hash of the block-header for both.  The block-header for each chain would contain the previous node in that chain.Then when I found the work, I could submit  accumulator + namecoin header hash + key  as the proof of work for the namecoin chain and accumulator + bitcoin header hash + bckey to the bitcoin network.  Thus I solved 2 blocks at once, but each block still has a unique previous hash.Of couse if the two chains have different difficulties it may only work for namecoin and not for bitcoin unless the resulting hash was good enough for both. Like I said in other places, it is impossible to add the features I need to bitcoin even with new custom scripts.  The 'market making' function must be performed by all nodes as well as collateral enforcement.  There is no way to have a 'public' / 'automatic' dispersal of collateral held in the bitcoin block-chain and therefore the best you can hope for is some anonymous centralized service that operates the private keys. The unchecked in code has more implementation, but you are correct the current checkin is mostly high-level but then again I only started it less than 1 week ago! I decided not to use Bitcoin as the base because my changes were quite extensive and the bitcoin base is  a mess, new code is found here:git@github.com:bytemaster/bitshares.gitI have a large block of code that has not been checked in, but never the less expect to have a functional alpha within a month. THis would be for the proof chain and would allow people to search for proof of work on multiple chains at once without requiring any chain to be overly bloated.   I have contacted the ZeroCoin author attempting to get his implementation for ZeroCoin and creating such a library.   Even without a full implementation, this chain could be designed to potentially work with merged mining by moving the nonce but just use a simple non-merged-mining hash for initial versions.  Great insight, except these slots can be reused if the balance reaches 0.  To safely use just offsets would require that the slot be empty for 24 hours or so before being reused.  I recently stumbled across these two papers which show that it is possible to prove a 'hash' exists in a fixed sized accumulator.  This is the basis behind ZeroCoin.http://www.cs.stevens.edu/~mdemare/pubs/owa.pdfhttp://spar.isi.jhu.edu/~mgreen/ZerocoinOakland.pdf I think we are all making progress... at the very least I am writing code every single day to bring BitShares into reality.   What I think the OP is really after is getting everyone on the same page and working together.    Also, most of our ideas have some weakness and they all need to be vetted properly and tested for holes before significant development effort is put into place.  To that extent I have offered a 0.5 BTC bounty to anyone who can 'hack' my latest BitShares algorithm and cause me to introduce a rule change.   I will also offer a 10 BTC bounty to anyone who can convince me to adopt their approach over mine.  This bounty will then serve to help get the project funded and going.   That said, I think it would be amazing if we could all schedule a combined skype call to discuss this topic in real-time and get a feel for where everyone is.   At this point I am simply trying to understand the systems and establish criteria / break down the problem.   Any references to BitShares or MarketCoin is merely to demonstrate a design criteria, motivations, and potential solutions.    So, what I think we have gleamed from the discussion of MarketCoin is a need to define how fast 'instant' is.  1) It could be within 24 hours.2) It could be within 5 minutes.3) It could be less than 1 minute.MarketCoin brings up a new dimension to the problem:  requiring 'interactive' support for bids to clear.   What I mean by this is that if you place a bid well below market, then leave for vacation and while you are gone the market drops and your bid gets accepted you are SOL and so is the counter-party.   The 24 hour timeout would occur and both parties lost out on the transaction.   This occurs because the trades depend upon private keys which requires interaction with on behalf of all parties for trades to execute.   What I can conclude from this is that all bids on MarketCoin should require some kind of 'freshness' and thus should expire after 24 hours if they are not accepted.   Assuming MarketCoin can automate integration with all other chains then the user experience will be seamless from the perspective of managing the transactions.   The only problem is that the experience will be UNPREDICTABLE as some times trades will happen quickly, other times trades will fail and you have to start over the next day.  When you start over the next day you are still subject to failure.   Lastly, there is still an attack vector here by placing bids but not following through.   One solution to this problem is to have one side of all bids be MarketCoin and thus controlled by the network.   To place a 'bid' you give control over your money to the network which can then prevent fake bids and ensure that trades happen in a timely manner with only 'one' party having to be 'interactive'.  When I suggested earlier that trades be ATOMIC I meant it in the since of making multiple updates to a shared resource without any 'contention', ie they either all happen or none of them happen.   A trade that 'starts' at 8 AM and doesn't close until 8 PM and might fail *depending upon the counter party* is not atomic.  Two people that make identical trades at 8 AM will get very different results depending upon their counter-party.    A potential solution to this is to reduce the window to 30 minutes and include a 'fee' assessed to the defaulting party and paid to the other party in the event the transaction fails.   This would require all nodes to be online and active and provide predictable results. Conclusion:  MarketCoin with a few tweaks is a very suitable piece in the puzzel for decentralized exchanges and certainly some problems BitShares does not.   In fact, MarketCoin might be a part of the solution of allowing people to trade any alt-coin for any BitShare or related fiat-coin and in a sense complement one another.What we are left with is how to deal with Fiat and I believe BTC Luke's proposal is similar to BitShares in spirit if not in specific approach:1) All parties must post collateral held in crypto-currency.2) Parties issue fiat-bonds backed by crypto-currency that can be traded like BTC.The only question becomes how do we value these fiat bonds, how do we manage the collateral, and how do we handle defaults.  Can we at least agree that 'escrow' and 'exchange' needs to be separated into two different jobs?   We need a crypto-fiat that can be traded/exchanged by something like MarketCoin or BitShares and then we need a separate 'escrow' system for either backing the crypto-fiat (BTC Luke) or exchange crypto-fiat for fiat (BitShares).   It looks like the solution posted on the wiki is the same solution I came up with, so we are all on the same page!    I have done Java, though c++ is my primary language.    I think that we need to solve some of the design details that are language independent first and if there is a solid java implementation then I could be tempted to go that route.   I have a strong need for many parallel chains with combined proof-of-work as a means of providing scaling beyond what a single chain could do.   So off of the top of my head some small changes I would make:1) move the nonce to the proof chain and replace the block-hash with an accumulator (see ZeroCoin), this would allow all mining efforts for all chains using the same 'proof of work' to support as many chains as possible with almost no extra work.   The nonce would only add 8 to 12 bytes per proof header and thus would not really affect the result.2) Define sector sizes and what goes in each sector.  Assuming you use something like sha224 you incur 28 bytes of overhead for each level in the merkel tree.  If you have a deep tree, then to 'address' a particular change would require 28 bytes per layer.   If you have a 'flat tree' then recalculating the root hash would require hashing your entire data set.    From a purely big-O stand point you want a hash tree that grows in depth as your data set grows.   The only question you have to consider is the 'branching factor' with 2 being the lowest and something on the order of 1 MB of accounts being the 'largest'.   From a network perspective, having each 'sector' of the dataset fit in a single UDP packet may be the right sector size.   Assuming each account is 48 bytes this means about 32 accounts per sector and each node in your merkel tree would in turn contain about 32 hashes 'children'.   The end result would be log32( total accounts size ) * sizeof(sha224) to prove a prove a particular 'account' has membership in the root hash.       Something to consider regarding making the sector size too large is the probability of a random transaction causing a change to a sector.   If 1% of all addresses see changes in every block and your sector size is 128 then chances are *every sector* will change every time and thus you have little savings.      To counter this 'random' behavior, free slots should be deterministically selected from the most-frequently changed sector first.   In fact each block should not just update/replace certain sector, but instead should 'sort' the addresses by least-recently accessed.   So, assume 5 addresses change in 5 different sectors resulting in 5*32 addresses that are part of a changed sector.   Users would have to fetch entire sectors at a time anyway so we might as well use the fact that these sectors have 'changed' to re-sort all 5 sectors moving the 5 changes into the same 'new sector' and moving the least recently changed into other sectors.   This will result in a 'hot set' and a 'cold' set and thus minimize the total number of sector fetches that must occur.     Ultimately you need all accounts to be accessed via a hash table and to validate that you have the 'entire hash table'.   Moving addresses around within the sectors would cause significant overhead in updating your hash-table index that allows you to find the addresses quickly.  This might be 'unavoidable' if you want to minimize sync overhead as you would be trading CPU time for network time.  3) Identify how splits / remerges will be handled.  I think the white paper fails to properly handle this issue along with handling multiple transactions from a single account in a single block. The challenge here is that in the event of a chain split, this transaction could not be applied upon re-merging of the forked chain.  It also limits transactions to 'one per account per block' where as bitcoin could in theory have many different transaction per address provided they were all based upon different outputs and incoming transactions would not interfere with outgoing transactions. To address this issue transactions will need to include an 'initial and final' block number that they may be stored in, then the hash of the transaction must be stored until the 'final' block number in which it will expire to prevent double-spends.   Otherwise you assume all transactions make it into the account any other changes to that account and no one person has control over all changes to an account (after all someone else could send the account funds at the same time you send your trx).  Conclusion, all transactions must have an expiration block number and must be stored until that date.  This could be as simple as including all transactions in the 'mini-block-chain' until they fall of the end, though I suspect they would only need to be kept around for 48 hours or so.
I have read a lot of different papers on this forum, so I may have gotten some parts confused.  I went back to re-read the white paper to check to see what I thought I rememberd and what I was actually thinking of was the 'proof-of-work chain' in this system.   I was suggesting that it could be updated to use the accumulator method to allow any number of 'proofs' to be stored in the same proof-of-work chain and therefore it would be usable by every blockchain out there without increasing the size.The account tree structure and mini-block-chain approach is 100% the way I think things need to go.   I am attempting to implement a new blockchain and started designing something very similar to the white paper.   So on closer look, I have to give this approach strong backing.    The only way to create a 'peg' is via market forces and thus the 'peg' must fluctuate +/- a couple of percent around the actual market price.  Any "fiat" peg to 'fiat' would have to be backed by a central issuer and could be taken out if the right people were hit by busses.   Like I said in my prior post, I am able to integrate a crypto-currency that tracks the purchasing power of 'fiat' without having any 'trust' except in the backing crypto-currency and automated margin covering rules.   I think this is the only approach that is viable, truly decentralized, and not subject to failure due to busses.   New Requirement for P2P Exchange:  It must not have failure-due-to-random-bus killing someone.I agree.  Markets are more meaningful if people are making 'value plays' based upon outside information.   If there is only one exchange, then there is no need to play the differences between two exchanges in 'real time'.  Besides, I think it is technically impossible (due to the speed of light) to implement sub-second trades in a P2P manner.   That said, the "best" and in my opinion "fairest" approach is to have all parties broadcast their bids and have them included in a block.  The following block can then deterministically make all trades.  If you want 'high-speed' trading, then you can broadcast multiple times including a higher-fee each time in an effort to get the miners to include the proper bid in the block.    If you want 'highest-possible speed' trading then you must mine the blocks yourself so you can select what *new* bids get into the block, but you cannot do anything about old 'unfilled' bids from prior blocks.   If you assume everyone is attempting to prioritize the bids and a large number of miners simply want the fees, then it is clear the difficulty would increase and decentralization of the mining process would occur as there is a new 'profit' motive for mining.  One thing about 'block-chain' style trading is that a fork that lasts even a few hours could undo a large number of trades.  In other words, you cannot trade on the 'minority fork' at all as there would be no way to integrate those trades back into the main fork.   This means it is critical to detect a minority fork ASAP and stop all trading until it merges back.    This also means that the proceeds of all trades cannot be spent (or used in new trades) for say 24 hours.  If you are integrating with other alt-coins like MarketCoin is then it must also handle the potential for forks of the alt-coin.  I suppose you could put the onus on individuals doing the trading to take that risk.      Here is one question I have about MarketCoin... does it require users to manually participate in the trades by taking action on the 'alt-coin' network?   Or does MarketCoin come 'bundled' with a set of alt-coins that it supports and automatically executes trades on all networks?    It would seem that no trades could occur while a node was 'off-line' because the private keys on that node are required to complete the trade.  Therefore, your 20 minute trade time is only true for 'active users'.  This means that either the network needs to 'know' that the user is ONLINE and thus harm privacy and reduce the number of participants *or* some users might get paired with 'hung' trades that are unable to go through until the other user comes back from a 3 week vacation.   *or* the transaction times out and the user missed a buying / selling opportunity.   This creates an interesting attack vector where people place bids and then never respond and thus make the exchange unusable.   I think a requirement of a P2P exchange is to allow 'off-line' and ATOMIC trades between currencies.  This last requirement is perhaps the hardest of all to satisfy, and yet is something that my approach does solve. We have had this discussion in other places, but I think the problem needs to be divided into several distinct areas:1) Escrow Services:         The purpose of these services is only to facilitate already agreed upon trades over a long distance as in-person trades in theory require no escrow.  Escrow exchanges are almost by-definition multi-day events due to the slowness of traditional banking.              * The challenge posed by escrow is that all banking transactions are 'reversible' and therefore simply confirming a wire transfer, bank transfer, credit card payment, paypal, or dweller transfer is not enough.               * The third party is in theory subject to various laws if they actually hold fiat to facilitate the trade.  This third party also risks being brought into any investigation the government may have regarding that transaction.       * The most decentralized version is NashX, though NashX only works between two people who already own crypto-assets.      I would submit that the P2P exchange system should not attempt to solve the escrow problem because 'traditional' escrow services that are entirely legal and 'not exchanges' nor 'money transmitters' could be used.   There are other approaches that could be taken as well.   1) Both parties could have certified identities with a signed arbitration agreement with Judge.me or something similar.  2) Both parties could post and maintain a surety deposit that is entirely independent of the 'escrow' transaction.   These approaches would probably be sufficient for anyone involved with a lot of trades but the 'setup time' would make the 'first transaction' the most difficult.    This approach is also not as 'anonymous', but then again if you are transferring money through the traditional banking system it isn't really anonymous anyway.   Lastly, do you really want to 'trade fiat' for 'bitcoins' with a random stranger via direct bank transfer in an environment where governments are cracking down on all such exchanges? 2) Digital/Crypto Currencies             - These carry value and can facilitate trade and be used as collateral.  If a crypto-currency could be created that maintained near parity with actual dollars or gold then it could be used as part of a P2P exchange and enable in-person trades without having to worry about the exchange risk.  I think this is probably the biggest part of establishing a truly decentralized exchange. 3) P2P  Exchanges             - Ripple already covers this in a manner that is relatively fast, unfortunately Ripple depends upon people publicly publishing their 'trust' for others.  The ultimate result of Ripple is that all parties are public and ultimately they end up trusting a 'centralized' gateway which will almost certainly require all of the same licensing as Mt. Gox.    If Mt. Gox is not viable then neither is Ripple.            - A true P2P exchange would have to deal with digital crypto-equivalent of various currencies and ultimately not depend upon any 'public' issuer.  If there is a 'public' issuer they would be breaking laws, represent a 'concentration of wealth' and thus a profitable target for government action.   Therefore if there are issuers they must be anonymous.         - Any 'IOU' is only as valuable as the person standing behind it or the collateral they post to back it.  As a result, IOUs are not perfectly fungible unless the collateral has sufficient margin and is held in a decentralized manner.   The conclusion here is that short of 'ripple without gateways', all decentralized exchanges will require a means of holding collateral in a decentralized manner.   The challenge then becomes how do you resolve disputes regarding collateral?  Can it be managed by an algorithm?  If the collateral is 'held by a 3rd party' how can we trust that 3rd party?     I conclude from this that all collateral, margin, settling, and trading must be performed by some kind of crypto-currency with pre-defined rules that does not require trusting any 3rd party to hold funds nor settle disputes.           - Lastly, any P2P exchange will suffer from the 'speed-of-light' problem synchronization overhead.  If it truly is a global order-book, then all orders must be matched, confirmed, and settled in a defined order.   These exchanges will never be able to have Mt.Gox like performance until faster-than-light communication is possible.   The closes we could hope for is something along the lines of many Open Transactions servers that run behind a 'BitMessage' like anonymous system with the backing of the OT servers being held in an anonymous, peer-to-peer manner.  OT currently depends upon non-anonymous issuers who must be trusted and who ultimately could be shutdown by the government.     4) High Speed Exchanges                      - These are 'centralized' but anonymous.  They have to be 'trusted' in some manner, perhaps by having a surety bond posted somewhere to back all trades on their exchange.   I do not think that 'high-frequency' trading is a *requirement* for a P2P exchange because as long as a low-frequency trading P2P exchange is available someone can and probably will set up anonymous high-frequency trading sites.   The key to making high-speed exchanges decentralized is to make them so easy to setup and run that it could be done in an afternoon.   Unfortunately, part of high-frequency trading is having a large market and the more 'decentralized' you make these exchanges the fewer people will exist at any one.  As a result, we can conclude that high-frequency trading will always tend to be centralized with perhaps 1-3 major players in each jurisdictions as the upper limit to what the market could support.To conclude, I believe that the requirements mentioned here:   http://bitcoin.stackexchange.com/questions/11116/what-is-the-definition-of-a-p2p-exchange  are mixing too many different and logically incompatible systems.  So, instead we should attempt to break these requirements down into individual 'parts' and decentralize each part as much as possible given the constraints. So here is my approach:First we must establish that the *goal* is to exchange 'value' or 'purchasing power'.  You don't actually need gold or silver so long as you have purchasing power that enables you to buy gold or silver without exchange rate risk.   With this concept in mind we need to focus on moving and exchanging purchasing power without exchange rate risks in a decentralized manner.  To move purchasing power does not mean a decentralized system must move the underlying asset.1) We need a crypto-currency to back all trades and serve as collateral.  If you want 'trustless IOUs' then the IOU must be collateralized in a 'trustless' manner and that implies some kind of crypto-currency block-chain that holds the collateral *AND* distributes it without needing to trust any party.  No voting, disputes, or requirements for 'outside' information.   These IOUs must not depend upon any action taken by any specific individual to 'fulfill'. 2) To be without any central points of failure, no-one must publicly back the issuance of any IOUs whether in the form of colored coins or new alt-chains.  As a result, all debts must ultimately be settled via crypto-currency even if the debt was denominated in gold or silver.   If an IOU requires a debt to be settled in actual gold, silver, or dollars and the person dies then you have a 'defaulted IOU' and thus a failure.   These kind of negotiable digital bearer instruments are already 'illegal' in many places and there is no way for a decentralized system to force someone to make good on this kind of IOU or even be able to tell that they defaulted on it!   The solution here is to have an 'IOU 1 $USD' backed by 2x that value in crypto-currency that will automatically be sold to cover the position and therefore no one is ever out the 'value of a dollar'.  3) All IOUs involve risk and in any sane would would have an opportunity cost associated with not paying them off.  In effect, all loans must pay interest to the lenders in order to motivate both parties to take part in the transaction.   What incentive does someone have to 'lend' a $USD to someone else while taking risks in gray areas of the law?Given the above we can create a decentralized bitcoin-like crypto currency that pays dividends.  We can then use this dividend paying crypto currency as the collateral for IOUs where the dividends serve as the 'opportunity cost' to the borrower and the reward to the 'lender'.    A P2P exchange can be encoded into the blockchain that allows people to trade these collateralized crypto IOUs and establish a market price from which automatic covering via block-chain rules can be applied.    The result will be a P2P system with trust-free IOUs denominated in Gold, Silver, USD, etc that also pays dividends.  This P2P system can then be the foundation upon which anonymous centralized exchanges can offer high-frequency trading and by which 'local-bitcoins' can facilitate much larger local markets for trust-free in-person exchanges.   It would still be 'difficult' to move over $5K at a time as you would have to meet up with various people, but it should still be possible with a proper 'trusted' escrow agent.    I believe that merged-mining was part of this next-gen crypto-currency,  I would like those following this thread to consider a new approach to scalable merged-mining that allows a 'fixed-size' proof-of-work regardless of the number of chains involved in merged-mining.https://bitcointalk.org/index.php?topic=230120.0 I recently stumbled across these two papers which show that it is possible to prove a 'hash' exists in a fixed sized accumulator.  This is the basis behind ZeroCoin.http://www.cs.stevens.edu/~mdemare/pubs/owa.pdfhttp://spar.isi.jhu.edu/~mgreen/ZerocoinOakland.pdfBased upon this, I would like to consider a new approach to merged-mining that is scalable to 1000's of chains.  Normally you would have to include the entire merkel tree for all of the subtrees and then provide the 'index' in the tree that includes the hash of the alt-chain header in order to prove the work.   This approach does not scale well as the size of the merkel tree quickly dwarfs the rest of the block-header with only 4 to 8 merged-mining chains.    If instead of using a merkel tree to 'prove the work', we first combined the hashs into the accumulator.  Then calculate the proof-of-work on the accumulator, then submit the accumulator + key as the proof-of-work.  The end result is that the block-header would only need to include,  1 nonce, 1 accumulator ( 160bit) and 1 key (160bit?) + normal block-header items.Would such an approach be a better alternative to all existing merged mining strategies?  Would it be as 'secure'? I would like to see a graph (and data table) on the total number of 'unspent outputs' over time, perhaps once per block.It seems like every time there is a transaction with change, there is at least 1 input to 2 outputs, but how often does the number of inputs 're-combine' the outputs?  How much would the blockchain compress if we only had to store the unspent outputs?I would guess that the number of unspent outputs will grow proportional to the user base.    I'm in!     I want to clarify how this works:  Why you short crypto-USD you are 'creating' crypto-USD.  To 'cover' you must buy back crypto-USD with BitShares and thus 'destroy' the crypto-USD.   End result, no fiat ever had to exchange hands and yet someone was still able to take a position in USD.    Thus trading paper-fiat is entirely outside the scope of this exchange, but the presence of this exchange makes it easier to trade paper-fiat for crypto-fiat. First of all, the exchange does not deal in "dollars" but "dollar IOUs"  that are backed by BitShares with a 2x margin.   Therefore, when someone 'shorts' dollars they 'owe the network' the dollars and so long as they do not cover they are incurring opportunity cost in lost dividends.   Likewise, if the exchange rate moves against them the network will automatically cover their position.  The end result is that the exchange never has to confirm any fiat transfers.  The 'fiat' is exchanged for crypto-USD either in-person, via Nash X, via OTC, or via Escrow.  The *purpose* of this exchange is not to facilitate actual fiat transfers so much as to create crypto-USD that tracks the value of USD and thus enables people to exchange it without risk and thus increase the viability of 'local-bitshares' as well as the demand for the currency.   Once you have crypto-USD you can trade it for crypto-Gold, BitShares and BitCoin. Yes the bounty is still good.  It does have a json-api, but you still need to deploy the app.  I suppose if you used it without the GUI it might be easier to deploy. I know that OT uses 'mailboxes' for unsigned transactions and even invoices / messages etc.  Is the idea to replace the mailbox infrastructure with BitMessage?Or would all messages be directed to a specific OT server identified by a BM address and thus simply replace the HTTP protocol for communicating with an OT server? Lets just say I have dual use for BitMessage integration and I will leave the GUI to you.  The annoying thing about bitmessage is that it depends upon PyQt is and is a pain to deploy.   It would be nice if there were a Qt GUI for bitmessage that integrated at the protocol level... but I suspect that would require a bigger bounty and is outside the scope of this. I am interested in BitMessage integration.And if there is a 'market' GUI potentially that too. Suppose there was a blockchain that allowed an 'OpenTransactions Server' to 'checkout' some currency to use on their server.Now suppose that every time the server signed a receipt it also published a transaction to the network to update the hash of the last signed receipt in the blockchain.The blockchain could then honor requests to withdraw money even if the server went away by simply presenting the receipt.Then all that would be required is a means to AUDIT each OT server to make sure that it never issues more receipts than are valid, which I believe there is already such a system in place (or at least designed).Now connect all of these OT servers together through BitMessage.The end result is that you could have entirely secure anonymous transaction with complete destruction of your transaction history.   The existence of the OT servers could even be hidden from the user.Now combine this with something like BitShares and we will have pulled it all together in an amazing way! I am interested in working on this if we can divide up the bounty in advance.   It seems like there are a lot of parts here, so if we can organize who is doing what and for what bounty then I can help take this on.At the very least I can provide the OS X port / testing / support.    I have created a much more complete white paper that should answer your questions: http://the-iland.net/static/downloads/BitSharesWhitePaper.pdfYou can update your collateral at any time by creating a transaction that takes your position + extra collateral and generates an output with additional collateral. From the white paper:Economics of BitShares   BitShares attempts to arrange for all actors to act proactively to ensure that collateral requirements are met even during the most extreme market fluctuations.  To illustrate how these market forces will interact with the BitShare block-chain rules lets consider some example market situations.Rapid Fall in BitShare Value   If the value of a BitShare starts to fall rapidly against crypto-Gold, then all shorts in the system will be faced with a squeeze which will force them to buy proactively before their margin is called.  If their margin is hit, then they will suffer a 5% fee or worse, complete loss of their collateral.   The result of this short-squeeze is that the value of crypto-Gold would rise dramatically above market value causing even more shorts to face margin calls.  This would create an opportunity for new shorts to enter market with full collateral backing their new position.  These new shorts would profit when the price settles down after the short-squeeze is over.    As a result all market participants will be pro-active about monitoring the price and their collateral which should result in the minimal amount of volatility.  Rapid Rise in BitShare Value   If the value of BitShares rises rapidly against crypto-Gold, then all shorts would have an opportunity to cover their positions at a profit.  If they fail to cover their position then the result will be opportunity costs associated with maintaining more than the required margin and crypto-Gold paying even higher dividends.Connecting Gold to Crypto-Gold Price  All market participants have something to gain if a common understanding can be reached that crypto-Gold is an IOU for a 1oz gold coin.  However, initially there will be no trust in what crypto-Gold actually means.  As a result market participants will start out placing orders with a wide spread.  As the market depth increases the spread will also decrease until a price is reached that has market consensus and is near parity with gold.  What happens if a sub-currency goes no-bid?  The first thing that must be understood is that a sub-currency always has value proportional to the dividends backing it.  Therefore, the short-position incurs a constant opportunity-cost by not covering.   Likewise, the long is still receiving a revenue stream that has value independent of the value of a BitShare and therefore above-market interest rates will attract new buyers to that sub-currency which means that all sub-currencies are always liquid based solely on relative interest rates.   As a result no sub-currency will ever go no-bid.     For this reason the early adopters face limited (if any) risk in being the first to purchase crypto-Gold.  They would be trading BitShares at 10% APR for crypto-Gold that paid twice the BitShares-per-block and therefore profit even if they are the only buyer.  When it comes time to unwind this one trade, the price will be determined by whom ever wants the liquidity more.  If the short wants to stop the bleeding opportunity cost, they will be forced to buy back at a higher price.  If the long wants to convert to another asset then they may sell at a lower price.   Either way, it is unlikely that there would ever only be two players in any given sub-currency market based only on the opportunity to profit from higher interest rates.What happens if there is a market crash that causes margins to be insufficient?   In this event the longs will be paid out via dividends with the capital from the defaulted short positions.  The market would then re-establish at the lower price with new collateral.   Only the most severe crash in the value of BitShares could trigger such an event as it is unlikely that any other asset class could rise in value relative to a stable BitShare value that fast.   Market participants will select margin requirements based upon their estimate of volatility and as a result receive sufficient interest to justify their risk.  If BitShares lose all value it would be a complete collapse of the entire system and everyone would lose.  This would be a very unlikely event barring an breach in the block-chain algorithm or encryption.    Early adopters would receive higher interest rates due to the smaller monetary base and therefore be compensated for taking a greater risk.   Those who come later will have much more confidence in the algorithm and therefore receive a lower dividend rate. 10% will be the rate after 2-3 years, early adopters will see 100%+ rates as  50 BS per block will be a much larger percentage of the initial money supply.Clearly if you are big enough to be a gate way then AML laws will apply, but I suspect many people will just do it casually when they want some extra money.  Large number of informal arrangements can add up. Investors:      I have decided to no-longer pre-mine the shares because I believe it will undermine trust.  I have also decided to stop taking direct investment and only seek to work with those who value the idea on its own merits.   Everyone will have equal opportunity to profit from this when it goes live.        So, instead I would encourage everyone who wants this to succeed to help find bugs and/or fund bounties and development for its own sake and not for pre-mined shares.       Those who have already invested I will personally mine the required shares for you.      Bounty still exists for bugs in algorithm. The DS proposal was a bad first step forward and was complex and flawed.  I have suffered from having a hard time explaining my original ideas.This new idea is simple to explain and is not 'bug fixes' on the old idea... if it were merely 'bug fixes' I would not have paid out 10 BTC to TheZerg.   The new design is based entirely upon the model used by traditional brokerages and simply uses a crypto-currency as backing.  I am moving forward with a team of people who have come to understand the idea and will attempt to explain it to anyone who will listen.  I have flushed out many new 'rules' for the block-chain based upon vectors of attack identified by TheZerg in the prior chain.  The economics behind the new system is essentially the same as a brokerage that allows people to 'naked-short' with collateral.    Naked-shorting is generally considered bad in traditional markets because those engaged in the naked shorting have a license to print the USD backing that position and therefore can manipulate the price of gold/silver without limit.   Under BitShares there is significant opportunity cost for holding a short position AND the backing of that position cannot be printed out of thin air.   
Assuming it is illegal to operate a bitcoin bank that issues digital cash?Who says there has to be just one such bank or that the bank couldn't just be a single node in the network?  You deposit a small amount that you are willing to 'lose' with an anonymous bank and then use that anonymous bank to handle transactions for all of your connections.  For this to work, the nodes on the network need to 'batch' redeem the tokens they accept AND the anonymous bank must have enough volume that redemption patterns do not reveal your channel.   All nodes on the network would have to 'trust' one or more banks to some extent and periodically withdraw actual BTC to actually collect on the value.Nodes could operate on a basis of constantly exchanging tokens with the bank, regardless of how much traffic they have coming through and therefore prevent the bank from detecting the path.  You would have to *trust* the nodes not to collaborate, but you are already doing that with TOR.  Nodes could be dynamically promoted to 'bank status' after a certain amount of successful business with others.   Sure, there is always some risk that someone could set up a bank and then 'walk away', but if the rules allowed the bank to 'make money' by being honest then it will be more profitable to operate the bank than to 'run with the money'.   This is why you do not use bitcoin directly, but instead digital cash with blinded tokens. This is certainly a growing pain issue and adoption will be slow at first.   But lets make some assumptions:  assume that crypto-USD ends up tracking actual USD within a small range for 6 months.   Assume that crypto-USD is actually paying a 10% APR.    Now, ask yourself this... how many people will be 'interested' in trying that out?   How many people will create a business out of accepting 'deposits' of USD for a small fee and selling crypto-USD?   Perhaps just as a hobby?    Watch as this starts catching on and people realize they can make money.  All of a sudden it goes viral and you can deposit / withdraw cash with just about anyone for a small 'ATM' fee.    Sure, it may take a while to catch on, but it will. Here is a basic video that introduces the concept:  http://www.youtube.com/watch?v=-8ZJ3xTDwbI  The target audience is people who do not even know bitcoin so it includes a minute or introduction to Bitcoin that you may just skip.More to come. What is the difference?    You are entitled to your opinion, so I am going to create the centralized version of this exchange first because that will prove the model.    If it works in a centralized manner where the central 'authority' is merely simulating matching bids / asks, then do you agree that it would work in a blockchain? So here is a challenge, how can a group of people decide in a decentralized manner what currencies are represented by what crypto-Currency?Lets start with a simplifying assumption:  the first version of the client only enables support for a dozen well known currencies.  These currencies arehard-coded into the client and therefore everyone knows what they should represent.The first users of the system would have to establish precedent by buying and selling USD, Gold, and Silver.  Theses early adopters would be takingsome risks, but these risks could be mitigated by observing the bid/ask spread prior to placing their bid.   For example, the first 'bid' might be extremely low, andthe first ask would be very high.  Eventually the market will negotiate a price because it is in everyones interest to reach a consensus.  Every party to the exchange "wants" consensus that crypto-USD represents an agreement to pay USD.   No one wants to 'go first', but then again someone, like me,might just go first because I know the market will eventually converge on an understanding.  I also know that there are out-standing bid/asks that wouldallow me to reverse my position at a "known" loss.   The real question is this:  how would the participants of the system sabotage the consensus building effort?  Do they place a bid out-of-line with theUSD or Gold label?   Do they bid too low and no one accepts?   Do they bid too high only to risk losing money?  They would have to 'bet' the market woulddo something other than come to an agreement.   There are only two safe ways to 'play' this market:  assume it will reach consensus *or* assume no one will try to reach consensus.    Fortunately, this consensus building effort would probably settle out within the first day or two of operation, if not almost immediately.  Once it has momentum,every party will be investing according to what they thing everyone else will do.  There is only one *safe* assumption and that is to assume everyone else will bidaccording to the actual exchange rate. Before a trade can occur a Buyer and Seller must *know* what they are buying / selling.  Therefore, unless there is some sort of 'understood contract' of what a crypto-USD is there would be no trading.  If there *is* an understood definition of what a crypto-USD is *then* the market can handle the rest.  Anyone who trades contrary to the consensus would lose money.   I think that any block chain will be too slow for high-speed trades and the two chains would have to be synchronized.   The marginal improvement of having a separate bid/ask chain would still not yield a system with enough performance to justify the cost. Yes, I am responding to myself... I couldn't help but notice how beautiful and elegant these market forces are!  Because shorts are forced to automatically cover once their margin reaches 50% this short squeeze could result in the price of cUSD being bid UP by up to 50% creating a huge selling opportunity.   Shorts would then anticipate this squeeze and thus provide additional collateral to avoid taking a loss during the squeeze!   Elegant! If the value of Bitshares falls in half, then all cUSD will bid up in a short-squeeze.   This will causes holders of cUSD to sell for BS and take a profit.  New players will come on the market and short at the short-squeeze high and provide the new collateral.  They will then profit when the price falls back to parity where they may cover their position in order to free up their collateral.  Ok, I dug deeper into wikipedia and have concluded that your analogy is very apt and much appreciated.    There are many ways in or out.   You could only ever deal with $USD and cUSD provided you could trade with people who have cUSD balances.   Welcome to the new thread!   I am not sure what that wiki link has to do with with this design.      Like I stated in my other thread, premiums above / below parity are to be expected based upon the relative demand for deposits and withdraws.  I am fairly certain that the nature of interest-bearing USD deposits will cause there to be a slight premium over actual USD, but perhaps the 'market' will factor that into the exchange rate between cUSD and BS.  I am looking forward to your attacks on this new design!      Lets get one thing straight, what would have to crash in value would be BitShares and not $USD.   Ultimately Long's are still trusting in BitShares they just don't have to worry about the volatility.  If BitShares appreciates like Bitcoin does then there is no problem.   The one way to mitigate this risk of 'crash' is to have early adopters post more collateral.  You could actually have  cUSDx2  cUSDx3 and cUSDx4 depending upon how much collateral the various cUSD had backing them.   The cUSDx4 would pay much higher interest rate and thus command a premium price in exchange for USD compared to cUSDx2 which might trade closer to actual USD if not at a slight 'discount' depending upon whether the interest rate justified the risk or not.    If the market crashes by more than the available margin, then the 'longs' will get to split the collateral.   There is *nothing* I could ever code that would insulate people from market crashes beyond a certain point.    Dave has $150 worth of BS and then short-sells cUSD worth $75 (100% initial margin requirement).  The network will not allow him to spend his $150 worth of BS.   When the exchange rate changes and now his BS is only worth $100 and thus no longer has sufficient backing for $75 cUSD, the exchange will purchase cUSD on his behalf converting his cUSD short position and leaving Dave with BS worth $100. This system does not replace escrow for exchanges of fiat.  You even need escrow for exchanges of Bitcoin.  This system replaces the need to use a 'bank' to actually store your money and gives you freedom of movement without the need to worry about exchange rate changes.  Paid, please confirm. Ok Zerg.  I will pay the bounty to you and respectfully request that you *choose* to contribute the funds back to this project in exchange for 9500 BitShares.In the future I will be more careful about my bounties.   Note:  most of what I post on this forum is based upon me being very open and honest about the development process.  I have nothing to hide and often 'brainstorm in public' so that we can generate new ideas.   I am posting bugs, airing incomplete ideas, and seeking investment all at the same time because I want to encourage everyone to join in the process of creating an amazing new system and *not* because I want to get rich off of investors money.  I would be happy to be an early miner on this new chain.    Any investor who wants concrete terms can negotiate it and the result would be a signed contract between people.   Clearly before any *serious* money poors in there will be a new business started which will handle all of the invested funds.  I have been talking with some legal experts on how to handle this in the safest manner possible.   In the mean time, this is more of a kick-starter idea.   Join have fun, and earn some pre-mined BitShares.   If you want to accelerate the process donations are welcome!
Here is how it works, you can send money via the banks, dwolla, or any other system.  You could use gold/silver if you like.  The point is the exchange does not depend upon it.  Keeping money in the exchange will actually yield a higher return and because businesses no longer have to worry about 'exchange risk' they will be far more likely to accept it.   The end result is that the existing banking system will become increasingly irrelevant. Here is the deal, I can pay someone else to do the work and keep my current job.  I can give the idea away and let the VC pay someone else to do it.  Unfortunately, I am not independently wealthy and have to eat.   So the question is am I paying myself above market rates for the work I am doing?   The answer is no, I would have been my self 50% less than I am currently making.    In what country?  If you were to do it centralized (behind a Tor node) then I suspect you would be subject to all SEC regulations regarding naked shorting unless the crypto-currency was considered 'play-money' in which case it would just be an advanced "just-for-fun" betting system.   The reality is they will make what ever regulations they want apply to the system. All,   Here is the list of block-chain rules under active development.  I will payout a 0.5 BTC bounty each time someone finds an 'attack' on this rule set that results in me changing the rules.  Note, I may change the rules at any time in response to my own efforts at finding bugs.    I will then kindly request that everyone who finds bugs re-invest their 0.5 BTC bounty into the project and receive 500 BitShares instead. 1) Anyone may sell short any asset on the exchange provided:       a) there exists a buyer who is willing to take the other side of the trade *at built-in market price*       b) after the short sale, they have 3x the value of the short sale as collateral. (actual collateral requirements subject to change)2) Any short position may be redeemed by the market when the value of the collateral falls to 1.5x the value of the short.       a) half of the position is sold and the proceeds are used as collateral for the other half of the position (unless collateral would still be insufficient, or the balance would be 'dust')       b) there is a 5% fee paid by all shorts which force the network to cover their position. The goal is to           encourage any short to keep their margin sufficient or close out their position early. This fee also          motivates miners to give closing out of short positions priority over most (all?) other transactions.4) All 'short' positions must be closed in full before any of the collateral may be spent.       - as the price of an asset falls, the effective interest rate paid to longs will go up as the ratio between short and collateral grows.       - this will cause increasing opportunity costs for the short position which will motivate them to cover the entire position         and re-open their position at a new base.      3) Dividends paid on BitShares held as collateral are redirected to individuals who went Long (taking the other side of the trade).       a) As a result, crypto-USD pays 1.5x to 3x to dividend rate rate as BitShares.4) Users place their bids / asks into the blockchain as 'outputs' that can be canceled by spending them, or accepted by       spending them as part of a transaction that satisfies the bid and market requirements.  5) No block may execute a trade below the highest bid or above the lowest ask in the block chain.      -  The order in which trades are executed is based upon 'price' first, 'fee' second, and otherwise up to the miner      -  If the highest bid is greater than the lowest ask, then the transaction occurs at the *bid* price.6) No transactions that contain multiple currency units are allowed outside of the bid/ask system.      -  This requirement may be lifted after a careful audit for potential attacks by circumventing the 'market'. In the event that the price of an asset changes so rapidly as to blow through all 'margin', the Longs will eat the losses.      - this is the justification for the higher dividend rates paid to the longs and the opportunity cost incurred by the shorts.      - No system can gurantee 0 losses and BitShares is no different.9) All trades on the built-in exchange incur a 0.05% transaction fee that contributes to mining fees / dividends.  This fee is   designed to minimize the profitability of 'rapid trading' and generate profits for the BitShare holders.      - minimum transaction size limits will also be imposed (like Bitcoin) to prevent dust spam.      - minimum transaction fee just like bitcoin also applies.10) All dividends paid to 'transaction outputs' in the last 120 blocks are recaptured as mining fees, spending these unconfirmed dividends would result in chain-splits invalidating the tranaction.      - as a result, those who spend money rapidly will receive no dividends, while those who save will receive the dividends.11) Users may transact in any currency just like they do Bitcoin (provided all non-market transactions only deal with a single currency).      - this includes trading of their short position.12) No block may clear out more than 5% of the value of all open bids/asks for a particular asset.      - this prevents certain classes of attack in 'thin' markets.13) A maximum reduction in exchange rate of 5% per block.  The goal is to give market participants time to add collateral or buy thedip.  It would also prevent certain types of attacks based upon 'rapid manipulation' of the price.14) No trade may occur unless there are at least N? bids/asks capable of 'reversing' the position.      - this aims to prevent attacks on new issuance and insures that there exists a deep enough market to justifiy creating      a new asset class.  It also 'halts' trading when the market gets thin.      - the definition of 'capable of reversing' is still TBD15) You must wait 10 blocks before spending the output of a trade.      - if we allow people to immediately spend with the proceeds of a trade then, chain forks could be exploited to        reverse trades, manipulate prices, and cause losses. All of the rules above ultimately mean that trading can only occur at 'human speed' and all high-frequency trading will beforced off-chain.  Trading is not 'free', but cheaper than any current exchange.   In particular I am looking for ways that the market can be manipulated that do not also apply to traditional markets.  Some avenues ofattack that must be considered:1) What would happen if someone had 51% of the hashing power?   - they could control what bids made it into (or out of) the blockchain.         * prevent people from canceling bids.   - they could control who got want bids.         * play favorites    - they could do anything they could do with Bitcoin.2) What would happen if someone had 1% of the hashing power?   - they may gain some advantage in picking/choosing bids.   - would this motivate professional traders to invest heavily in mining?   - would the competition ultimately be good for the network?3) What weaknesses would be exposed by having all short positions and margin available as public information?       * Somone with significant capital could 'trigger' a short-squeeze by bidding up the underlying asset.           - is this mitigated by not allowing uncollateralized shorting?       * The short-squeeze would then enable new shorts to sell at higher prices (offsetting their attempt to push it up)       * In theory someone could take advantage of such moves... but only if they could move fast enough between         short and long positions to 'head-fake' the network.  Because all positions require 6 confirmations before they can be adjusted does it         make it difficult or impossible to benefit from this kind of manipulation?4) In theory all 'shorts' are naked, but backed, and are ultimately settled in BitShares.  What are the implications?   - don't trade in illiquid, rare, or non-fungibile/divisible items.  It would be up to the Longs to assess this risk.   - the total 'short' position for any asset class is public and therefore can be audited.  If the total short position   is too-large the market will respond by discounting the 'long' position from face value.   - how does 'naked' shorting enable manipulation?  In theory, someone with a large amount of capital (BitShares) someone    could keep selling into a market.  This would result in pushing the price down but would also drive the dividends paid   to longs up.     - Because longs are not buying with leverage, short-selling to push the price down CANNOT trigger margin calls and further selling.   - another way this can be viewed is that the 'shorts' are 'borrowing' the USD from the longs and are posting collateral and   paying interest to do so.     - any naked-short is ultimately has to cover and thus 'unwinds' his position.  He can only profit if supply and demand   actually creates a fall in prices independent of the action of the short-seller.5) Why would anyone go 'long' against someone known to be naked-short?   Perhaps you can think of the short-long market as  a betters market where the winner takes home BitShares.  All market participants are attempting to manipulate the price and  predict which way it will move.  50% think it will go up, 50% think it will go down and the result is a tug-of-war.  What  are people really betting on?  They are betting on what *other market participants* will do!  How do you know what the   other participants will do?  You have to assume they are all expecting the price to follow real market prices. Anyone who  is out-of-sync with the emergent consensus opinion about what a price should track will ultimately end up making losses   in this market. TheZerg,     You have convinced me that I would owe you the bounty if I gave up on the project and decided not to invest money in creating a distributed peer-to-peer exchange based upon dividend paying BitShares.  As such, I will commit to pay you the 10 BTC bounty as the only person who stuck with it once I actually do give up; however, I gave up pre-maturely and because 'rule changes' in how the system *could work* were part of determining when a 0.25 BTC bounty would be paid out and I have paid out a 0.25 BTC bounty for each rule change you forced me to make I will now present a new set of rules that will solve the problem.  As a result of these new rule changes I am accelerating my investment in the exchange and ultimately you only convinced me that one particular set of block-chain rules was unworkable.        I would now like to offer you the following settlement and open new opportunities:  1) I will issue you 10 BTC worth of pre-mined BitShares (1000) if I continue with the project through to completion *or* I will pay you 10 BTC - in addition to any bug-fix bounties paid in the event I fail to follow through.   Either way you should win and either way you would have a clear-case in arbitration that is no longer subject to impossible to prove claims.  Furthermore, everyone on this forum will be able to judge whether you are owed the bounty in non-ambiguous terms and I will therefore not even bother with arbitration and simply pay you.So, here is the deal, I am re-opening the bug-finding process with 0.5 BTC bounty per rule-change you can find.  I still value your efforts.  For starters you should consider this thread: https://bitcointalk.org/index.php?topic=223747.0  which explains the works of the system.   I will be releasing a video update describing the process as well.  1) Anyone may sell short any asset on the exchange provided:       a) there exists a buyer who is willing to take the other side of the trade *at built-in market price*       b) after the short sale, they have 3x the value of the short sale as collateral.2) Any short position may be redeemed by the market when the value of the collateral falls to 1.5x the value of the short.       a) half of the position is sold and the proceeds are used as collateral for the other half of the position (unless collateral would still be insufficient, or the balance would be 'dust')       b) there is a 5% fee paid by all shorts which force the network to cover their position. The goal is to           encourage any short to keep their margin sufficient or close out their position early. This fee also          motivates miners to give closing out of short positions priority over most (all?) other transactions.4) All 'short' positions must be closed in full before any of the collateral may be spent.       - as the price of an asset falls, the effective interest rate paid to longs will go up as the ratio between short and collateral grows.       - this will cause increasing opportunity costs for the short position which will motivate them to cover the entire position         and re-open their position at a new base.      3) Dividends paid on BitShares held as collateral are redirected to individuals who went Long (taking the other side of the trade).       a) As a result, crypto-USD pays 1.5x to 3x to dividend rate rate as BitShares.4) Users place their bids / asks into the blockchain as 'outputs' that can be canceled by spending them, or accepted by       spending them as part of a transaction that satisfies the bid and market requirements.  5) No block may execute a trade below the highest bid or above the lowest ask in the block chain.      -  The order in which trades are executed is based upon 'price' first, 'fee' second, and otherwise up to the miner      -  If the highest bid is greater than the lowest ask, then the transaction occurs at the *bid* price.6) No transactions that contain multiple currency units are allowed outside of the bid/ask system.      -  This requirement may be lifted after a careful audit for potential attacks by circumventing the 'market'. In the event that the price of an asset changes so rapidly as to blow through all 'margin', the Longs will eat the losses.      - this is the justification for the higher dividend rates paid to the longs and the opportunity cost incurred by the shorts.      - No system can gurantee 0 losses and BitShares is no different.9) All trades on the built-in exchange incur a 0.05% transaction fee that contributes to mining fees / dividends.  This fee is   designed to minimize the profitability of 'rapid trading' and generate profits for the BitShare holders.      - minimum transaction size limits will also be imposed (like Bitcoin) to prevent dust spam.      - minimum transaction fee just like bitcoin also applies.10) All dividends paid to 'transaction outputs' in the last 120 blocks are recaptured as mining fees, spending these unconfirmed dividends would result in chain-splits invalidating the tranaction.      - as a result, those who spend money rapidly will receive no dividends, while those who save will receive the dividends.11) Users may transact in any currency just like they do Bitcoin (provided all non-market transactions only deal with a single currency).      - this includes trading of their short position.12) No block may clear out more than 5% of the value of all open bids/asks for a particular asset.      - this prevents certain classes of attack in 'thin' markets.13) A maximum reduction in exchange rate of 5% per block.  The goal is to give market participants time to add collateral or buy thedip.  It would also prevent certain types of attacks based upon 'rapid manipulation' of the price.14) No trade may occur unless there are at least N? bids/asks capable of 'reversing' the position.      - this aims to prevent attacks on new issuance and insures that there exists a deep enough market to justifiy creating      a new asset class.  It also 'halts' trading when the market gets thin.      - the definition of 'capable of reversing' is still TBD15) You must wait 10 blocks before spending the output of a trade.      - if we allow people to immediately spend with the proceeds of a trade then, chain forks could be exploited to        reverse trades, manipulate prices, and cause losses. All of the rules above ultimately mean that trading can only occur at 'human speed' and all high-frequency trading will beforced off-chain.  Trading is not 'free', but cheaper than any current exchange.   In particular I am looking for ways that the market can be manipulated that do not also apply to traditional markets.  Some avenues ofattack that must be considered:1) What would happen if someone had 51% of the hashing power?   - they could control what bids made it into (or out of) the blockchain.         * prevent people from canceling bids.   - they could control who got want bids.         * play favorites    - they could do anything they could do with Bitcoin.2) What would happen if someone had 1% of the hashing power?   - they may gain some advantage in picking/choosing bids.   - would this motivate professional traders to invest heavily in mining?   - would the competition ultimately be good for the network?3) What weaknesses would be exposed by having all short positions and margin available as public information?       * Somone with significant capital could 'trigger' a short-squeeze by bidding up the underlying asset.           - is this mitigated by not allowing uncollateralized shorting?       * The short-squeeze would then enable new shorts to sell at higher prices (offsetting their attempt to push it up)       * In theory someone could take advantage of such moves... but only if they could move fast enough between         short and long positions to 'head-fake' the network.  Because all positions require 6 confirmations before they can be adjusted does it         make it difficult or impossible to benefit from this kind of manipulation?4) In theory all 'shorts' are naked, but backed, and are ultimately settled in BitShares.  What are the implications?   - don't trade in illiquid, rare, or non-fungibile/divisible items.  It would be up to the Longs to assess this risk.   - the total 'short' position for any asset class is public and therefore can be audited.  If the total short position   is too-large the market will respond by discounting the 'long' position from face value.   - how does 'naked' shorting enable manipulation?  In theory, someone with a large amount of capital (BitShares) someone    could keep selling into a market.  This would result in pushing the price down but would also drive the dividends paid   to longs up.     - Because longs are not buying with leverage, short-selling to push the price down CANNOT trigger margin calls and further selling.   - another way this can be viewed is that the 'shorts' are 'borrowing' the USD from the longs and are posting collateral and   paying interest to do so.     - any naked-short is ultimately has to cover and thus 'unwinds' his position.  He can only profit if supply and demand   actually creates a fall in prices independent of the action of the short-seller.5) Why would anyone go 'long' against someone known to be naked-short?   Perhaps you can think of the short-long market as  a betters market where the winner takes home BitShares.  All market participants are attempting to manipulate the price and  predict which way it will move.  50% think it will go up, 50% think it will go down and the result is a tug-of-war.  What  are people really betting on?  They are betting on what *other market participants* will do!  How do you know what the   other participants will do?  You have to assume they are all expecting the price to follow real market prices. Anyone who  is out-of-sync with the emergent consensus opinion about what a price should track will ultimately end up making losses   in this market. I will be offering shares for work contributed as well.    The rule of thumb will be that I will pay 'market-rates' for labor done at my direction, and then convert those 'rates' into BitShares on the same terms as everyone else.  Any labor performed at your own direction you will have to recoup via mining or purchasing shares. $30K budget is to enable me to quit my high-paying job and still pay child support.  I will be supporting my family of 3 on $1500 / month and paying $2000 / month in child support.  Everything else will be going into legal fees,  bounties, and hiring others to accelerate development.   Needless to say, I am not looking to 'live rich' on other peoples money, I just want to get this thing built.     Of the $30K, I am holding $15K as reserve and plan on operating on a $5K/month budget.   So in reality I have 6 months of development covered, but my wife insists I only treat it as 3 months because this will take about 6+ months from launch of continuous support, testing, and marketing to realize some return.If I can raise $100K I will hire additional developers and grow the team as funding permits. I have a meeting scheduled with a VC firm that is very interesting in my idea as well.  One member of this firm has already invested $5K personally, but he did not have authority to speak for the entire firm.   This is a NEW take at solving the same problem.  This is not the same approach I was talking about in my old thread (though I kept the name the same).I offered to return the investments and everyone has decided to re-invest in my new approach.  Old Approach:  Complicated, Depending upon unproven economics and some wishful thinking.  Even I suspected I was missing something and was right.New Approach:  Using proven 'brokerage structure' with crypto-currency as collateral and block-chain implementing margin requirements, automatic covering, and the exchange.The new approach is so sound and based upon such a well-known practice in the industry that there are no mysterious forces at play. Investment Update:So far I have lined up $30,000 investment into making this happen.  This $30,000 will get me through the first 3 months of development.  Right now I am looking for people willing to pledge follow-on investments necessary to keep me cash-flow positive while I bring this idea to market.   Because I know it is very 'risky' to invest money with someone at this early stage, I am asking only for pledges that will pay out on alpha-release of the new test-chain.  All investments will result in pre-mined shares in the new chain (1,000,000 limit to pre-mining).   Granted, receiving the money up front would put my wife at ease for this reason the first investors get the most pre-mining.      Ideally, I would like to set up a company to handle the legal issues and hire additional people to accelerate development, find bugs, and otherwise do things that are not my strong suit.  The first 500 BTC of investment I receive will be issued 1000 BitShares per BTC.   After that point it will be $1 per BitShare up to a total pre-mining limit of 1,000,000 (about 5% of the ultimate total money supply).  Also remember that owners of BitShares receive dividends equal to 50% of all mining fees so if you *never* sell then you could own a percentage of the total money supply proportional to your initial investment.   In other words, early investors will not be entirely debased by miners.  Granted a forum post is not a 'contractual obligation', so if you would like more detailed terms and conditions on your investment or pledge then drop me a PM. Unfortunately, it does require another alt-coin for 3 reasons:1) The collateral rules must be enforced by the network.  There is no way I know of to 'lock' or 'force the sale' of bitcoins without the private key being kept secret.  That said, this system could work in a 'centralized manner' behind a Tor server using Bitcoin as-is.  You would still have to trust that Tor server and if it was ever found you could lose all of your deposits.   If you know a way of 'controlling bitcoins' while keeping the private key public (on the p2p exchange), then it may be possible...  It may be possible to implement something similar using Open Transactions and the bitcoin voting pools but that approach seems less robust and would take longer to develop. 2) There is no way to pay dividends with Bitcoin.3) It is very easy to move value between chains.  Those who don't want to use the 'exchange features' enabled by BitShares could just keep Bitcoin.  Eventually people will realize that Bitshares have all of the qualities of Bitcoins + more AND most of their existing infrastructure that uses JSON-RPC to talk to Bitcoin will still work with BitShares.  This creates a smooth, natural, market-based migration path. I hope to simplify the process of getting into/out of BitShares by allowing people to trade crypto-USD directly at face value without exchange risk.  This way no one has to worry about finding someone locally with 'reasonable' margins for buying or selling BitShares. You can exchange deposits on the exchange for cash.Imagine you had $100 in Mt.Gox, you could meet someone locally, give them $100 cash to send you $100 on the exchange. When you open a brokerage account you deposit $1000.   Then you want to sell some stock short, so you 'borrow it' and sell it on the market.   Your account is now 'short' the stock and you must maintain enough money in your account to buy back the stock even if the price of the stock jumps by 50%.   If the stock does jump the the broker may use your margin to buy-back the stock and cover your position.If we consider your 'deposit' owning Bitcoins, then you can 'borrow' USD and sell it on the market provided you maintain enough BTC in your account to repurchase that USD even if the price of USD goes up 50%.As a result of your margin the person who lent you the USD can be relatively sure they will get their USD back even if the price moves against you.  The question is 'who' actually lent you the USD that you sold?   The answer is anyone who will give you real $USD in exchange for your digital USD.   Why did they lend you that $USD?  Because they know it was backed by enough money to any changes in the price and that the brokerage firm will liquidate your account to make sure they get their $USD back.As a result the entire system can operate without any central planner so long as there is a means to enforce some simple margin requirements and a mechanism to exchange.  *EDIT*  I have posted a white-paper explaining this process here: http://the-iland.net/static/downloads/BitSharesWhitePaper.pdfI will payout a 0.5 BTC bounty each time someone finds an 'attack' on this block-chain algorithm that results in me creating a custom rule to address.Imagine you wanted to open up a new exchange that did not accept USD deposits but still allowed people to trade USD vs Bitcoin.  How would it work?First I would have them deposit Bitcoin.  I would let them 'short' dollars by selling them into the market provided the result of executing the tradewould leave their account with  - 1 USD   and  2 * Exchange Rate BTC.   I would then force them to 'cover' once 2* Exchange Rate == 1.5 USD.  We can then be sure that they will *never* be able to walk away with a negative USD balance unless the exchange rate fell "instantly" by over 50% and even then the losses would be limited.I would then allow users to 'transfer' USD balances between eachother provided any negative balance maintained sufficient collateral. This means that someone could exchange paper-USD outside the exchange and receive a positive USD balance inside the exchange.  For this to work someone has over 1.5x the collateral posted backing that USD.Then at the end of the day I would allow them to withdraw only via Bitcoin.The net-result would be an exchange with no ties to the traditional banking system, yet still minimal risk to those who participate.  All priceswould have to be honest or someone will lose their collateral.  It is a kind of Nash Equilibrium backing all exchanges.I would charge transaction fees and use those fees to pay interest to those with net margin in excess of 1.5x. I would also charge a one time feefor short selling that would be paid as interest to the holders of USD.   You could only short-sell when there are no longs selling and everyone must compete to win the short position with the highest fee winning.This would be a VERY traditional margin-based exchange supporting short-selling.   The cool thing about such an exchange is that all of the 'rules' could easily be encoded into a Blockchain and require no 'outside parties' to manage the exchange.As a result this new structure solves all of the pricing issues with BitShares.   Market participants would all understand that their $USD balances are all backed by collateral and relatively safe.  There is risk involved if the price swings too quickly (USD going up, Bitcoin/Shares going down) and it would have the effect of generating 'short squeezes' that would tend to keep prices in equilibrium with less volatility.So the question becomes, would you use an exchange based upon these principles?  What if it was entirely encoded into a blockchain? Anything that uses the block chain would tie your wallet to the exit node.   Unless you are VERY CARFUL (more careful than I think I could be) this would compromise the entire purpose of TOR. So how much compression does this actually give you?The most compression I can think of is:20 bytes   trx hash1 byte      output idxint64        balancestring       scriptOut~50 bytes * total unspent outputs.If you got really fancy, then you can reduce it to perhaps 30 bytes by compressing the scryptOut field.All of this could be implemented with the existing blockchain.  Unfortunately, the system will not keep price parity because it is possible to issue more crypto-USD than exists even if it is all 'at-market-value'.Imagine how this system would work with something like art or rare base-ball-cards and you will quickly see that it will not track It took me over a week + a large bounty to get discussion going on this topic before I could see and explain the flaws in very understandable terms.That said, BitShares will still be created as an interest-bearing alt-chain with a new proof-of-work designed to require 128MB of ram and therefore be ASIC + GPU 'proof' andhopefully keep things far more decentralized.   It was an amazing idea, but Friday night I discovered the flaw with its economic model and as a result the crypto-Gold would never be able to track actual gold.Imagine you were trying to make it work with crypto-art.   Only one painting exists, yet people could issue as many 'crypto-paintings' that were 'in theory' the same price as the one and only crypto-art... but of course they could not all purchase the crypto-art on the market. You cannot use bitcoin directly to pay for it.  It would be too slow and not anonymous enough.   The minimum transaction fee would be greater than the cost of a 10 minute connection.Instead what I have proposed is to pick several "trusted" nodes to serve as a bank for blinded cash tokens.  You would have Bitcoin deposit ~ $1.00 at a time and then simply pay by sending thetokens across the network to each hop.The trick is to make sure that the nodes do not reveal the circuit by 'cashing in as you build it', they would have to make requests to the bank at regular intervals and 'trust' the tokens in the mean time.If someone is getting paid for an 'exit node', the 'exit node' itself could use one or more proxies / VPNs.There is also the potential of white-listing safe sites. I have the technical ability and desire to pursue this project provided the requirements can be defined:1) I need a digital cash system with wallet and was already building one.2) I already fully understand the entire design behind OT (having implemented a 'clone' just for fun)3) I need a digital cash system for my P2P network designs.So my 'proposed' easy to use system would focus on maintaining a wallet with digital cash tokens and allowing them to be spent.  It would also allow the deposit/withdraw of Bitcoin into such an account.  I would implement it with Qt and C++ because they provide a better user experience and more native feel without a lot of the hassels of dealing with the JRE.If I were to pursue this, I would need the following promises from those who are backing this bounty:1) All competitors must develop "open source" on github so I can tell where they are.  (No surprises winning the bounty after I have done 99%)2) How will the bounty be divided if there are multiple good contestants? 3) What are the minimum subset of features required to win the bounty?4) Who will judge the usability and by what objective criteria? I will have to look into how DevCoins works as I would be working on this in excess of 20 hrs / week. This is what convinced me this system will not work:Assume I issue  $1,000,000 of crypto-Gold at todays exchange rate.Tomorrow Gold goes up by 50%.Where does the extra $500,000 of value come from to back the already issued crypto-Gold?If I simply issue another $1,000,000 of crypto-Gold at the new exchange rate... it would still be diluted.Therefore, there would be no profit to back new crypto-Gold with *MORE* backing than existing crypto-Gold.DO YOU KNOW WHAT THIS MEANS??? The only way to make BitShares work anything close to what I had dreamed would require users to post collateral in excess of the current exchange rate to create crypto-GLD (closer to Version 1.0)Why didn't I see this before?  I was looking at small 'incremental' rises that would push it up and then extrapolating wrong.  I was thinking that individuals who 'wanted interest bearing USD' would pay apremium to get the return, and therefore cover losses.  It might work for small movements, but certainly not for large ones.Why couldn't anyone convince me before?  Because no one could explain it in such simple terms.Lessons learned?   It was incredibly valuable to have input from those who hung around and the bounties I have paid have been well worth it.  I also learned that my arguments were very convincing to everyone around me and to multiple investors who also couldn't see what I was missing.  Even TheZerg whom I paid 2 bounties to was resorting to using more and more arcane attacks that required very expensive attackers.    When I re-read some of the arguments against my system in light of my new perspective, I see that indeed I am lacking outside pricing information.  -------------------------------That said, what I do know for sure is that I have created a system that enables 'short-selling' of bitcoins.   Assume we ignore all of the crypto-Gold/USD stuff, and focus just on 'mortgaging' 1:1.   It would allow you to receive $USD today 'selling' your mortgaged shares... and then buy back your shares in the future when they are cheaper.   The ability to short-sell bitcoins would enable people to hedge their bets and 'reduce' volatility both of which would be incredibly useful and potentially worthy of investing in on their own.So, if anyone wants to talk about the potential uses / benefits of a crypto-Currency that supports trust-less short-selling then I am open to discuss it.--------------------------------Regarding the Bounty:I do not believe anyone here *convinced* me.  If you believe that it was your input that convinced me, then I will listen to your arguments, and if I still disagree then we can have it arbitrated via judge.me then I am game.Those who did help me and provided constructive feedback received tips or were paid for their exploits/time.Regarding Investors:All investment funds will be returned, unless you want to pursue a short-selling crypto-Currency.Thanks everyone, I hope you found this discussion / idea had some redeeming value on its own even if it was a dead end. BitShare Dividend AlgorithmDividends are generated with each new block as 50% of the transaction fees and mining rewards.Because Dividends are generated via mining, they cannot be confirmed nor spent for 120 blocks. If we were to attempt to pay out dividends sooner than that then a chain split would invalidate all transactions on the bad chain and the dividends could generate a lot of 'dust' (aka: outputs to small to spend).As a result the following algorithm will be used to claim dividends:1) Whenever an output is spent, it may claim all dividends from blocks with more than 120 confirmations as part of the balance.2) All dividends from blocks less than 120 confirmations become part of the transaction fee. This will serve to aggregate all of these 'unconfirmed' dust dividends into a single fee that will be 'recycled' once the next block reaches 120 confirmations.3) The end result is that high-frequency transactions generate more dividends for those who hold!4) 'inter-day-trading' by rapidly minting will result in 0 dividends and thus no profit opportunity.5) For high-speed trading, do that off chain where you can speculate with sub-second timing if you like.
BitShares = 21M mined like Bitcoin.Dividends = 50% of mining fees + Trx Fees.coldcoin?   BitGold is left in a "Bitcoin" address as a balance in a different unit.BitShares can be thought of like BitCoin + Dividends + Minting/Melting. If this is bitcoins war against the competition, then I am here to provide it with some:   http://www.youtube.com/watch?v=RPbSaznUbg8&feature=youtu.beIf this works as I think it does ( and there is a 10 BTC bounty to convince me otherwise) then I will have just replaced Bitcoin, Mt.Gox, savings accounts, and the commodity / stock exchanges.    Bitcoin's biggest competition  isn't the old IOU based economy, it is the potential for the development of an entirely trust-less economy based off of Bitcoin derived technologies. See the following video explaining bitshares: http://www.youtube.com/watch?v=RPbSaznUbg8&feature=youtu.be Hello everyone, I have finally gotten around to producing the first draft of my introduction to BitShares video.  Hopefully this will be easier to follow than some of my posts!http://www.youtube.com/watch?v=RPbSaznUbg8&feature=youtu.beRemember, there is a 10 BTC bounty out to convince me that it will not work.   There is also a 0.5 BTC bounty to find bugs in my block-chain algorithm that will open it up for attacks.  So far my bounty campaigns have helped find and fix many shortcomings of earlier versions.  A special thanks to thezerg for his help in finding these bugs.*edit*The system does not work except to enable trustless short selling of crypto-coin. The source of our problems is establishing the minting rate... right now it is entirely one sided with no market forces to push it to the proper rate.  This occurs because the exchange was based upon trading existing crypto-Gold for BS and attempting to 'tack' minting onto an entirely un-related exchange.   So, here is my new strategy for controlling mint rates:1) It is entirely pointless to have an exchange between BS and crypto-Gold because we know the exchange rate 'exactly' based upon the dividends... thus my old exchange was 'pointless'.2) What we really want is an exchange between 'minting' and 'melting', thus when you melt you reverse the process of minting by turning crypto-Gold into BS at some 'rate'.    So instead you turn the market into an 'mint' vs 'melt' market...     - when I melt...  I want the highest possible ratio that allows me to buy the most gold.     - when I mint.... I want the lowest possible ratio that allows me to sell the crypto-Gold for gold.    - the two market participants must agree to the mint/melt price.    * note * the minter is no longer given an option to cover at his mint price, thus there is no longer a 'short' position to be covered.So how would this work?     - Initially there is no crypto-Gold... thus, you can mint at any price you want you are creating a new currency     - This creates new crypto-Gold which the holder does not want to melt for some time.     - When there are no melters, you can only 'mint' at the same or higher ratio (no debasing)     - Once there is an offer to melt, that is the highest (and lowest) you can mint at (melter/minter just exchange).     - When there are no minters, just melters, then you can melt at the current rate.Why would someone mint in the first place?     - to create a new peg and establish a new crypto-Gold.  Those who have crypto-Gold know they paid 1 gold coin for it, and it was at parity, they are not going to take a loss if they can help it.     - If the value of gold goes up it requires more BS to back it, thus you can always mint at a new higher rate.     - If the value of gold goes down, then crypto-Gold will be 'over-backed'.  No one will want to 'mint' at the old backing... and any crypto-Gold holders will not be able to 'melt' over the mint price,          both parties realize that the only price they can 'agree on' is the current market price of gold.   This would allow 'one in' and 'one out' of the crypto-gold market.Why would someone melt from a high-yield (over-backed) crypto-Gold balance into BS?        After all they could just trade their crypto-Gold balance at full value without melting!  No one will melt unless they are forced to melt and thus we need to find a way to force melting.  I think the way you do that is to only allow transfer between addresses while in BS form.  Thus, you can only transfer value through BS, but you can store it as crypto-Gold.    If we ignore the technical challenge of turning every gold wire-transfer into two market orders... this approach should work.So, how would eGold operate?      - initially they would Mint as much crypto-Gold as they could sell for gold with a fee.... thus they have acquired a lot of gold.    - if the price of gold goes up... egold would sell some of their gold for BS and offer to mint for anyone willing to melt.. there would be a spread (egolds profit)    - if the price of gold goes down... the crypto-gold would now be backed by too much BS... so the holders are earning a lot of interest... this causes a rush into      the crypto-gold market with everyone wanting to 'mint'... but they could only mint at the lowest melt price.. this forces them to mint high and for the melter to melt low sothey can agree on a price... thus parity will be established with supply and demand. The purpose of having an anonymous peg was merely to simulate the 'invisible hand of the market' that was confusing the debate, the idea being that there is just 1 eOil company, but 1000's of them all competing to provide goods to the market.  The purpose of making it anonymous was to make sure there was no 'trust' or 'contract' between eOil and the users of crypto-Oil.   So, the biggest problem you have forced me to face (whether you realize it or not) is that my pricing mechanism either forces everything above parity until there is no longer a connection or to 0 with most of the dividends going to the attacker.   Clearly my pricing mechanism is broken... but never fear bytemaster is here.. and he has a new pricing strategy that is far better!The source of our problems is establishing the minting rate... right now it is entirely one sided with no market forces to push it to the proper rate.  This occurs because the exchange was based upon trading existing crypto-Gold for BS and attempting to 'tack' minting onto an entirely un-related exchange.   So, here is my new strategy for controlling mint rates:1) It is entirely pointless to have an exchange between BS and crypto-Gold because we know the exchange rate 'exactly' based upon the dividends... thus my old exchange was 'pointless'.2) What we really want is an exchange between 'minting' and 'melting', thus when you melt you reverse the process of minting by turning crypto-Gold into BS at some 'rate'.    So instead you turn the market into an 'mint' vs 'melt' market...     - when I melt...  I want the highest possible ratio that allows me to buy the most gold.     - when I mint.... I want the lowest possible ratio that allows me to sell the crypto-Gold for gold.    - the two market participants must agree to the mint/melt price.    * note * the minter is no longer given an option to cover at his mint price, thus there is no longer a 'short' position to be covered.So how would this work?     - Initially there is no crypto-Gold... thus, you can mint at any price you want you are creating a new currency     - This creates new crypto-Gold which the holder does not want to melt for some time.     - When there are no melters, you can only 'mint' at the same or higher ratio (no debasing)     - Once there is an offer to melt, that is the highest (and lowest) you can mint at (melter/minter just exchange).     - When there are no minters, just melters, then you can melt at the current rate.Why would someone mint in the first place?     - to create a new peg and establish a new crypto-Gold.  Those who have crypto-Gold know they paid 1 gold coin for it, and it was at parity, they are not going to take a loss if they can help it.     - If the value of gold goes up it requires more BS to back it, thus you can always mint at a new higher rate.     - If the value of gold goes down, then crypto-Gold will be 'over-backed'.  No one will want to 'mint' at the old backing... and any crypto-Gold holders will not be able to 'melt' over the mint price,          both parties realize that the only price they can 'agree on' is the current market price of gold.   This would allow 'one in' and 'one out' of the crypto-gold market.Why would someone melt from a high-yield (over-backed) crypto-Gold balance into BS?        After all they could just trade their crypto-Gold balance at full value without melting!  No one will melt unless they are forced to melt and thus we need to find a way to force melting.  I think the way you do that is to only allow transfer between addresses while in BS form.  Thus, you can only transfer value through BS, but you can store it as crypto-Gold.    If we ignore the technical challenge of turning every gold wire-transfer into two market orders... this approach should work.So, how would eGold operate?      - initially they would Mint as much crypto-Gold as they could sell for gold with a fee.... thus they have acquired a lot of gold.    - if the price of gold goes up... egold would sell some of their gold for BS and offer to mint for anyone willing to melt.. there would be a spread (egolds profit)    - if the price of gold goes down... the crypto-gold would now be backed by too much BS... so the holders are earning a lot of interest... this causes a rush into      the crypto-gold market with everyone wanting to 'mint'... but they could only mint at the lowest melt price.. this forces them to mint high and for the melter to melt low sothey can agree on a price... thus parity will be established with supply and demand.I am re-opening the bounty on this thread!  I have been doing some very heavy thinking recently and have concluded that what I have here is NOT crypto-USD or crypto-Gold  I have simply created a market for shorts / longs which can then 'hedge' by placing opposite bets.Imagine you have 10 bitcoins, you think they will go up against $USD so you mortgage your bitcoins to create  mBS to create crypto-Q where the exchange rate is 1:1 Someone else believes that bitcoins will go down relative to dollars they buy crypto-Q.If the value of BitCoins goes UP       - then the person mortgaged them will be able to buy them back cheaper than they sold it and thus profit.If the value of BitCoins goes Down  - then the person who mortgaged them will not be able to repurchase crypto-Q except at a higher price than they sold it.In effect, crypto-Q is just the opposite end of a short position.  So now take someone who has $USD and they want to buy into Bitcoin but don't want the risk of Bitcoin falling and as a result losing their value.   They can offer to buycrypto-Q at a discount to full up Bitcoin.   Lets take an extreme example, they could buy crypto-Q for 50% of the bitcoin price.  The individual who went 'short' wins because they get to get cash now and recover their Bitcoins in the future.The individual who purchased crypto-Q wins because they have some margin, if bitcoin goes down they can still sell at a profit.These are the building blocks that we have to work with.   I believe what I created was a market for one-way USD where the losers in that market were those who went short (withdrew USD).    Therefore, you could deposit USD and never have to worry about it going back down.   The only side effect is that when prices go the other way a new currency ie: crypto-Oil-2 must be issued as a new 'base' for one-way movement. I will have to figure out how to get the price to auto-correct in the other direction or BitShares will not work as I had originally envisioned, BUT I still believe that it is worth investing into because it offers great hedging / leveraging potential without counter-party-risk.   As a result of this new understanding I am temporarily suspending the bounty to find bugs until I can figure out what I have here. Not quite because cash is a revenue stream of 0...  I am trying to come up with an analogy.  The only thing that increasing the minimum bid size does is increase the capital the attacker would require and introduce an 'arbitrary' number into my system.  Instead, I think that a minimum 'issue' size that is allowed to consume all of the highest bids until the issue size is 'filled'.   Therefore, you can always issue 1 BS worth of ANYTHING using the top 1 BS worth of bids.   To maintain a peg, eGold would have to maintain at least 1 BS worth of bids at market price.  The attacker would then be left with nothing to gain because he would have to fill bids with his stash which would quickly be gone.I think this is a simpler and more flexible rule, hopefully it doesn't have unintentional side effects... I am sure TheZerg will find them... updating the rules now. Reposting my response to keep it in-line:Just because it goes up due to momentary scarsity does not mean you broke the peg (remember my +/- 10% trading range).The margin between crytpo-Oil and oil is what provide profit motives for people to bring goods into/out of crypto-Oil based upon supply and demand.So all you did is partially fill one order ABOVE MARKET VALUE.  Because there exists bids above market value we can assume the following:0)  While eOil has crypto-Oil they will sell at a profit.1)  eOil will not buy nor issue ( you stopped nothing they wouldn't have done anyway )2)  Everyone else has profit motive to sell and bring the price down.3)  You have opportunity cost by not selling the full amount.So the only way you can claim that you are a rational, profit-seeking, actor is if you have some way to profit from this which is greater than the opportunity cost.NOTE:  Those who purchase crypto-Oil have only one requirment:  its value shall not fall below parity by more than a couple of percent.  Therefore, breaking the peg tothe up side actually means they profit.  You cannot hurt someone who owns crypto-Oil by pushing the price above parity and keeping it there.  You would be losing moneyevery day you held the peg due to transaction costs.  So, lets look at what it would take to ACTUALLY pull off this attack:a) you would need to purchase crypto-Oil above market rates and hold it at opportunity cost.b) you could drive everyone to sell their crypto-Oil for BS at a profit as the value of oil falls.c) you would discourage / prevent new people from trading their oil for crypto-Oil.d) you would cause eGold to issue crypto-Oil 2 which was cheaper than crypto-Oil yet also would never fall below parity.e) everyone with crypto-Oil would trade into crypto-Oil 2 at a profit.f) market will continue as normal with no one taking any losses except the attacker.g) the attacker would then have to sell crytpo-Oil at a potential loss, and then start buying crypto-Oil 2 above market rates...h) eventually the attacker will be bankrupt while everyone else is receiving higher dividends thanks to all of the transaction fees   the attacker is racking up to no real effect.So you have failed to put eOil out of business or steal any money from anyone.  You did succeed in disrupting the market, forcing it over to another crypto-Oil 2 which would cause ineffeciencies and confusion.Your attack would only work once you had cleared out all other sellers, and thus would be very innefective in any large market like gold, usd, etc.Your attack takes advantage of the fact that you can issue 'dust' orders.Your attack is not profitable, and is more along the lines of DOS.Your attack would not be possible if you could not place 'dust' orders because you would run out of capital too quickly by filling orders above market rate.Therefore, you would need rules like bitcoin has to prevent 'dust' transactions from propagating or being included.Therefore if we had the following rules:You can issue against multiple bids at once provided they are at the same price.All bids must be a multiple of 2x the minimum transaction fee. This forces grouping of bids in the same 'range' to be the same effective price.Define a minimum 'order amount' to prevent dust orders... this order amount could be defined by 'miners' and therefore subject to 'market forces'.The block chain is clearly not an effecient datastructure for micro or high-speed transactions, so lets assume that there are a number of'spam filters' that the clients could run to detect this kind of DOS attack.Given that assumption we can conclude that when it comes to 'trading' the blockchain will only be used by those who can trade in multiples of $100 and anyonewanting to trade in smaller lots would have to do so 'off chain' on a Open Transactions server. Does your attack work if you don't have access to dust?Considering you failed to drive eGold out of business or steal money from anyone *and* your attacker was not motivated by profit and took constant losses, technically I don't think you should win the 0.25 bounty.That said, this was a good attack and provoked thought and rule changes so I will award you 0.25 because it was still valuable (and found prior to upping the bounty). PAID 0.25 BTC Correct.Just because it goes up due to momentary scarsity does not mean you broke the peg (remember my +/- 10% trading range).The margin between crytpo-Oil and oil is what provide profit motives for people to bring goods into/out of crypto-Oil based upon supply and demand.So all you did is partially fill one order ABOVE MARKET VALUE.  Because there exists bids above market value we can assume the following:0)  While eOil has crypto-Oil they will sell at a profit.1)  eOil will not buy nor issue ( you stopped nothing they wouldn't have done anyway )2)  Everyone else has profit motive to sell and bring the price down.3)  You have opportunity cost by not selling the full amount.So the only way you can claim that you are a rational, profit-seeking, actor is if you have some way to profit from this which is greater than the opportunity cost.NOTE:  Those who purchase crypto-Oil have only one requirment:  its value shall not fall below parity by more than a couple of percent.  Therefore, breaking the peg tothe up side actually means they profit.  You cannot hurt someone who owns crypto-Oil by pushing the price above parity and keeping it there.  You would be losing moneyevery day you held the peg due to transaction costs.  So, lets look at what it would take to ACTUALLY pull off this attack:a) you would need to purchase crypto-Oil above market rates and hold it at opportunity cost.b) you could drive everyone to sell their crypto-Oil for BS at a profit as the value of oil falls.c) you would discourage / prevent new people from trading their oil for crypto-Oil.d) you would cause eGold to issue crypto-Oil 2 which was cheaper than crypto-Oil yet also would never fall below parity.e) everyone with crypto-Oil would trade into crypto-Oil 2 at a profit.f) market will continue as normal with no one taking any losses except the attacker.g) the attacker would then have to sell crytpo-Oil at a potential loss, and then start buying crypto-Oil 2 above market rates...h) eventually the attacker will be bankrupt while everyone else is receiving higher dividends thanks to all of the transaction fees   the attacker is racking up to no real effect.So you have failed to put eOil out of business or steal any money from anyone.  You did succeed in disrupting the market, forcing it over to another crypto-Oil 2 which would cause ineffeciencies and confusion.Your attack would only work once you had cleared out all other sellers, and thus would be very innefective in any large market like gold, usd, etc.Your attack takes advantage of the fact that you can issue 'dust' orders.Your attack is not profitable, and is more along the lines of DOS.Your attack would not be possible if you could not place 'dust' orders because you would run out of capital too quickly by filling orders above market rate.Therefore, you would need rules like bitcoin has to prevent 'dust' transactions from propagating or being included.Therefore if we had the following rules:You can issue against multiple bids at once provided they are at the same price.All bids must be a multiple of 2x the minimum transaction fee. This forces grouping of bids in the same 'range' to be the same effective price.Define a minimum 'order amount' to prevent dust orders... this order amount could be defined by 'miners' and therefore subject to 'market forces'.The block chain is clearly not an effecient datastructure for micro or high-speed transactions, so lets assume that there are a number of'spam filters' that the clients could run to detect this kind of DOS attack.Given that assumption we can conclude that when it comes to 'trading' the blockchain will only be used by those who can trade in multiples of $100 and anyonewanting to trade in smaller lots would have to do so 'off chain' on a Open Transactions server. Does your attack work if you don't have access to dust?Considering you failed to drive eGold out of business or steal money from anyone *and* your attacker was not motivated by profit and took constant losses, technically I don't think you should win the 0.25 bounty.That said, this was a good attack and provoked thought and rule changes so I will award you 0.25 because it was still valuable.  It will be paid in a few hours. Not quite how the dividend payments would be implemented.  Clearly it would be unsustainable to create actual transactions for all dividend payments due... that would be 1 transaction per output and the fractions would bebelow the size of .0000000001 bitshare. The miner would only ever start out with 12.5 Bitshares + 1/2 of the fees, the matching part that is paid as dividends is simply 'noted'.Now when a user wants to collect the dividends on a particular output, they must create a new transaction that 'spends the dividends' froman existing output.  The software will look at the 'coin-age' of that output, total up all dividends for all blocks solved since the blockthat included that output and calculate a 'total dividend payment'.  This dividend payment could then be transferred to any other address.You can only 'spend' the dividends from an output with over 120 confirmations.   Even though you can spend the 'balance' at any time, just like in bitcoin,    you can still go back and collect your dividends later.Now this is where it gets interesting, because all transactions have a fee, it is impossible to redeem dividends that are too small.  Therefore,    if your turn-over on an output (say 1 BTC held for 1 block) would result in a potential dividend of   12.5 / 21,000,000 and thus be 'unspendable' until    the value of a BS rose dramatically.As a result if you want to collect dividends you want to concentrate your balances and hold them for a long time.Some more design work may need to be done to effeciently distribute dividends.  Another alternative is to have dividends accumulate separately in every output andthen follow spends.  Dividends would have to be expressed as Average Coin Age + Amount because I cannot convert them to balances until they reach 120+ confirmationsor else a chain split would invalidate a ton of transactions.  Clearly there is some R&D on how to effeciently distribute dividend payments, but I believe that is solveable as it is just math and book-keeping.   Lets try to clean up your example:   Assumptions:   1 BitShare = 1 BTC   1 BTC = $100   X ==     I will assume a $10 dollar bill.     User wants to create a crypto-X share, they can only create a crypto-X share in response to the highest bid for crypto-X that has at least 6 confirmations... so   presumably somewhere in the blockchain there exists an output of the form:   Output:  [BID]        10 BitShares  spendable by any transaction that pays 1 crypto-X to address A   User then create a new 'issue' transaction based upon that Output:      Inputs:          [BID] 10 Bitshares  (from bid)   Outputs:         1 crypto-X payable to address A         10 mortgaged BitShares paying dividends to all crypto-X shares (not just the 1 we created), redeemable with 1 crypto-X   To doublecheck out math:     Value In:   10 BitShares     Value out:  1 crypto-X  worth 10 BitShares                 10 Mortgaged BitShares redemable with 1 crypto X                      No value created or destroyed.   The person who made the Bid received 1 crypto-X, and paid 10 BS, the person who issued the currency received 10 mortgaged bitshares. If 1 BS pays a dividend of .01 BS per block and one crypto-Gold pays .10 BS per block, which one is worth more to own?   Clearly crypto-Gold pays 10x as much as BS and is thus worth 10x as much despite all payments being made in BS.    I think the disconnect is that you are comparing worth by looking at 'absolute' dividend rates instead of 'relative' dividend rates.  Given two revenue streams paid in 'undefined' good X, one pays 3x the other 1x, which revenue is worth more and by how much assuming x != 0?   The value of X is entirely factored out of the value comparison and thus irrelevnt.        The dividend rate paid to early adoptors will indeed be high, but don't forget there will be One Million BitShares issued to those who invest pre-launch and help make it a reality, so the initial dividend rate will be 25/1,000,000 every 10 minutes. Also, like any new business those who recognize the value and buy in first see gains.  Those who 'wait' until it is safer have opportunity costs associated with being less risk-adverse.Ok, the usability by the average user is HUGE and is actually VERY simple.  They will have a user interface that displays the current 'price' of all crypto-X in terms of BitShares by pre-calculating   crypto-X dividend rate / BS Dividend Rate and therefore users never even have to 'see' the dividend rates, instead they see relative prices derived from those dividend rates.   Thus they can tell when crypto-Gold is over-valued compared to crypto-USD without ever having to think about BitShares or Dividends.  The only people that really need to understand the dividend rates / etc are the early adopters / investors who care about where the value is coming from.  Once they understand the machanics they can 'trust it' and start trading based solely upon absolute prices drived from interest rate ratios.   Thus all of the complexity is only present *now* when I have to show everyone why prices track as they do.   Even if you only sell the smallest dust amount (similar to bitcoin's rules...so not new)... you will not be able to prevent others (not eOil) from selling to fill at a profit.Eventually you either own all crypto-Oil, sell all of your crypto-Oil, or everyone else switches to crypto-Oil 2 with no losses. Let me try to summarize the primary flaw in your attack:  you cannot force eOil to buy, thus you cannot force them to take a market position that would cause them to loose money.What you can do is buy up all crypto-Oil (presumably at above market rates that profit eOil or someone else).Once you own it all you must sell to prevent someone else from minting.You are not actually earning any more dividends due to bids on crypto-Oil going higher and higher.  The only time dividends change is as a result of minting or covering.. therefore the attacker has constant 'opportunity cost' (violating the profit seeking rule).The only people who "suffer" from your attack are those who hold oil and want to buy dividend-paying crypto-Oil.   You will have set the cost of dividend-paying crypto-Oil so far above parity, that they will not buy from you.  You are the only one left owning any, everyone else has sold to make a profit.This will create demand for a new crypto-Oil which could be started by anyone.  The new crypto-Oil2 would be issued by eOil at parity and offered for sale at 1% above market price.  All of your customers would 'flee' and purchase crypto-Oil2 and use that until you lowered your prices... to parity.  Thus itcost you a lot of money, but otherwise didn't harm anyone else.If eOil refuses to buy above parity (why should they?) then the only thing your attack can do is increase the value of crypto-Oil.. something everyone who wants to withdraw crypto-Oil cannot complain about! I think your attack is invalid even without the new rule changes I just proposed:If you are filling every order with your crypto-Oil, then eOil has no need to aquire any crypto-Oil to provide to the market, presumably you are able to satisfy demand and thus keeping the price pegged.If I were eOil, I would just sit back and watch because you are keeping the price stable for them.If you attempt to fill "just a little" that is also fine: eOil will make profit on what it fills until it runs out and you make profit on what you fill.Once eOil runs out of crypto-Oil, they can place a bid to buy it at market price (1% below what you are selling for).  They would be buying for less than they sold so this would be sustainable, of course theirbid would not be accepted by anyone until *you* satisfy all demand above parity.   In the mean time other people (not the 'attacker' nor eOil)  who own crypto-Oil could also sell at a profit. If there is no-one else,    then the joke is on the attacker who continues to own crypto-Oil which is paying dividends below what he could receive by accepting the highest bid and thus he maintains a constant 'opportunity cost' and thus is not seeking profit but an arbitrary increase in the value of crypto-Oil.From the market's perspecitve, having crypto-Oil valued so high above market price will bring in other sellers until there were no more holders of crypto-Oil.You, the attacker, will have 'cornered the market' for crypto-Oil but to maintain your control you would have to 'refuse to sell' despite bids above market value... thus you have an opportunity cost (are losing potential dividends),   that you could be making by converting your crypto-Oil to BitShares.   You will continue to lose money until the market price of crypto-Oil falls to the point where eOil can now buy profitablly (at parity).If you decide you just want to 'destroy' crypto-Oil and never sell, 'just to spite' them.   Then those looking for crypto-Oil will just issue crypto-Oil2 which you will have none of and crypto-Oil2 will carry on following the price.   No holders of crypto-Oil lost money by your actions and you had a ton of opportunity cost.  eOil aslo did not lose money. I *think* this is a variation of an attack I thought of in the shower this morning (posted and fixed (without rule change) in the new bounty thread)...  so let me first rephrase the attack how I understand it and then offer corrections.The goal of the attack is to prevent eOil from issuing new crypto-Oil.  The result of not being able to issue new crypto-Oil is that crypto-Oil would diverge UP from the value of oil as more and more 'demand' for crypto-Oil must be met by the same 'supply' of existing crypto-Oil.To execute this attack all that must occur is some trade of crypto-Oil for BitShares at the highest bid price to BUY crypto-Oil.So the attacker who has some nominal amount of BS and crypto-Gold places an offer to buy and then accepts his own offer, or he must simply sell his crypto-Gold for the highest Bid.If all he is doing is 'selling' crypto-Gold then he will eventually run out.  Because he would be selling at the highest-bid and taking them out, he would be increasingly selling below market value (at a loss).If he is attempting to 'sell to himself' and thus never run out, then there are some other challenges he would face.How would the market participants respond:1) the attack wouldn't be 'free' due to transaction fees (2 of them, bid + acceptance)  (this isn't a rule change, it works just like bitcoin)2) the issuer could offer a higher transaction fee to make their issuance take priority  (miners would ignore the sale with 0 fee in favor of the issuer with some fee)3) the other holders of crypto-Gold could sell into the attack and thus claim the attackers above-market bid before the attacker could.         * they could get priority by offering slightly higher fees than the attacker (made possible by above market bid)         * if the attacker compensated by increasing his fees... it would make the attack cost more and thus unsustainable.If the attacker wasn't placing bids, just 'filling' existing bids to buy cyrpto-Oil by providing crypto-Oil, then eventually he would runout of crypto-Oil.All of that said, there could be some clarifications / tweeks to the rules that may make this attack 'clearly' non-profitable.1) To issue a new higher bid, it must have a value greater than the old-highest-bid by 2x the transaction fee included.   I don't like this rule because 2x could be seen as 'arbitrary',   but considering the value of 'x' is decided by the market it isn't as bad as it could be.  Like Bitcoin, there would have to be a min trx fee that most miners require.     - net result is that the attacker exposes themself to a loss of 2x the transaction fee     - the attacker creates a profit opportunity for someone else to make profit by accepting his above-market bid (selling him crypto-Oil) with fees up to 1.99 times the transaction fee used to create the bid.     - therefore, the attacker would require 3x the normal transaction fee to achieve this attack:   1x  for creating the bid and 2x for accepting his own bid without the risk of losing to someone else.2) I suppose the attacker does not need to issue a higher bid, they could simply match the current high bid.     - this could be mitigated by processing bids of equal price in a first-come-first-serve basis which means he would have to use his crypto-gold to fill everyone elses order first.     - presumably the highest un-accepted bid is also 'below market rates' and thus he would be selling his crypto-Gold at a loss.3) I suppose he could 'fill' .00001 of the highest bid and thus tie up the network legitmately for a long time with only a small amount of crypto-Gold.     - this could be mitigated by requiring all fill order amounts to be some multiple of the transaction fee.  It wouldn't make sence to pay a $1 trx fee to buy $1.01 of crypto-Gold unless you were          attempting to 'attack' as cheaply as possible.     - this multiple could probably be on the order of 10 x... though I hate to introduce random 'magic numbers' to the rules.  But I suppose this is no different than       what bitcoin must do to prevent spam and dust in Bitcoin. I'll tell you what, if you can raise more funding for the TOR network then it will get done first.   As it stands I have several orders of magnitude more investment money behind BitShares.   Now if you want me to switch back to the TOR project, then I can provide the details of my design and let someone else implement it or you can attempt to collect the 10 BTC bounty to get me to abandon BitShares and I will come back to this.*note*  I still want to see this happen as I think it will be critical!   But I have also recently learned of a new p2p network that is soon to be released (from one of the BitShare backers) that *might* make my work on this redundant.  Are bitcoins IOUs as well?   Would a dividend paying Bitcoin be an IOU?   Do Bitcoins have no value?   Do they only have value because of a pump & dump scheme?   Who 'says' bitcoins have value?   If bitcoins have value then BitShares could develop the same value, (proof: Litecoin), if enough people thought they had added benefits of Bitcoin.   Even without the support of crypto-Gold, some people may prefer the dividend paying model to the existing model.If my currency allows the creation of an anonymous 'peg' then it clearly has much more value.   Ok, if you attempted to use a SSD for mining you would quickly wear it out, they have read/write limits and every hash attempt would completely change every sector.Sure, big data centers can have huge amounts of ram.  They cannot purchase that ram much cheaper than anyone else can.   What is the total amount of RAM in the largest data center?   Compare that to the total ram in ALL home PCs.  Now do the same comparison with mining SHA256 ASICs...  I'm an idiot... anyone who places a bid so high would immediately find a current holder of crypto-Gold willing to sell at insane profit and then clear out the bid.  This wouldn't slow down issuance at all.I am so on my edge to find bugs before Zerg that I am making up non-existant bugs!
I could modify the rules to allow issuance against up to 25% of active bids, provided they are the top 25% of the bids.  No one would be able to afford to do the over-priced attack with any significant value/quantity.............Actually, they could propose to buy .0000000001 crypto-Gold for 10BS and that would force someone to issue at that rate... and they would never be able to back-out of that position....Back-to the drawing board on fixes...  I have just discovered a new avenue of attack.... working on a fix (0.25 bounty) offered to someone who can propose a fix that I find acceptable. Given the rules, I could prevent the anonymous peg from re-issuing at a higher price by placing a bid buy a 1 satashi of crypto-Gold for a VERY high price.  This would effectively prevent all new issuance and cost me next to nothing.Without new issuance, the price of crypto-Gold would diverge to the UP SIDE from actual gold. I think I have laid this out fairly clearly in my latest posts that describe how an anonymous peg could make crypto-Gold always equal the price of gold and operate at a profit.  Because the 'peg' is anonymous no one could *ever* hold that peg on the hook to honor an IOU, instead you are trusting their profit motive (and that of everyone competing against them) to keep the VALUE peged.  I would gladly explain more later, but I think you could benefit from reading a few more of my existing posts (or ree-reading them). You clearly don't understand the order of magnitude difference between RAM and virtual-RAM in terms of performance.   You also have no understanding of Bitcoin because every one of your arguments could be levied against Bitcoin + Mt.Gox. All transaction history would be there for 'full nodes', but 'light nodes' could drop as much as they want.I could care less about laws so long as there is no theft or fraud... lets focus on technology to enable fair trades, not how to be in compliance with laws. First of all there are no IOUs in my system.  There is no 'broker' and at all times all parities are trading two assets that have value at parity on their own with no 'backer'.Now I am using an 'anonymous peg' to replace the much harder to grasp 'market forces', but even if my system required a real anonymous peg, it would still be better than anything else.So I suggest you focus on showing me how you would make trades to send my anonymous peg into the poor house. What is that 'security deposit' for (in theory, not in practice).    The only logical reason to require a security deposit is *if* there is an IOU involved as part of the transmittal service.   If that is the case, then what logical reason would remain for a security deposit if you only deal in digital goods that have 0 counter-party risk?   The only one I can think of is:  so we know where you are, have you by the balls, and can force you to comply with money laundering regulations... They will do what they want, find ways to ignore and work around them! With BitShares (https://bitcointalk.org/index.php?topic=219717.msg2314427#msg2314427  BOUNTY)  we can have a decentralized gold-backed bank with one-or-more anonymous issuers with 0 counter-party risk and receive interest on those deposits.    Why would anyone continue using a regular bank if they could earn interest on gold denominated deposits with 0 counter-party risk?     After considering the business plan of the Peg... I theorize that a single individual with only a hand full of very divisible coins would be able to maintain the peg and profit from it assuming they could be efficient enough with their off-chain buying/selling of gold for BitShares.   I then theorize that everyone in the market would be competing to make profits using the same model as the peg, and thus whoever was most-efficient with off-chain BitShare/gold transactions would make all of the money.  Because of the efficiency gains of the most profitable peg, it would drive down the spread between buying and selling crypto-Gold. Attacks that I find do not collect bounty...:Assuming I have 50% of the hashing power... what can I do?  I can delay all transactions...   I can delay potential bids from being placed into the chain...  I can pick winners / losers for matching bids... half of the time.   The market response:  increase bid/ask spread to account for the delays.  Attacker benefits:   they could have better arbitrage opportunities.   Trader Response:   add more hashing power so you can gain the advantage.  Net Result:  Arms race among professional traders to add hashing power to gain an advantage... thus making 50% attack even harder.Assuming there is someone out there attempting to peg crypto-Gold to gold.. how can I screw them up?  1) To issue new crypto-gold I would have to out-bid them, thus pushing the value of crypto-gold up... no real complaints from the holders and selling opportunity for the peg who would profit from it.  In theory there is no limit to how *high* I could push crypto-gold above the gold price.   The peg would make a ton of money from the extra dividends he was receiving from the attackers over-priced issuance.   The attacker wouldn't be able to redeem their 'short positions' for a profit and thus face an ongoing opportunity cost until they admit their losses.    2) To cause the value of crypto-gold to fall below parity they would have to sell crypto-gold.  To sell crypto-gold they must first acquire it and the only way to acquire it is to mint above market price or have bought it from the peg.  If they bought from the peg, then they paid 1% above market price.   I suppose the peg would have to 'buy' at market price or it would give the attacker an opportunity to mint below market price.   * I will have to change the business plan of the peg * as a result... this doesn't change the rules of the block-chain though.   Attacks that I find do not collect bounty...:Assuming I have 50% of the hashing power... what can I do?  I can delay all transactions...   I can delay potential bids from being placed into the chain...  I can pick winners / losers for matching bids... half of the time.   The market response:  increase bid/ask spread to account for the delays.  Attacker benefits:   they could have better arbitrage opportunities.   Trader Response:   add more hashing power so you can gain the advantage.  Net Result:  Arms race among professional traders to add hashing power to gain an advantage... thus making 50% attack even harder.Assuming there is someone out there attempting to peg crypto-Gold to gold.. how can I screw them up?  1) To issue new crypto-gold I would have to out-bid them, thus pushing the value of crypto-gold up... no real complaints from the holders and buying opportunity for the peg who would profit from it.  In theory there is no limit to how *high* I could push crypto-gold above the gold price.   The peg would make a ton of money from the extra dividends he was receiving from the attackers over-priced issuance.   The attacker wouldn't be able to redeem their 'short positions' for a profit and thus face an ongoing opportunity cost until they admit their losses.    2) To cause the value of crypto-gold to fall below parity they would have to sell crypto-gold.  To sell crypto-gold they must first acquire it and the only way to acquire it is to mint above market price or have bought it from the peg.  If they bought from the peg, then they paid 1% above market price.   I suppose the peg would have to 'buy' at market price or it would give the attacker an opportunity to mint below market price.   * I will have to change the business plan of the peg * as a result... this doesn't change the rules of the block-chain though.   Legally speaking, words mean nothing or anything depending on how you look at it. I will use this thread to publish the design and discuss it.  Ideas are welcome.BitShare User Interface:-----------------------------Because BitShares and the resultant sub-currencies are based upon variations in dividend revenue streams, it can be very hard for the average grandma to understand what is going on and what something is actually 'worth'.   After all, to determine the actual price of crypto-Gold relative to BitShares requires dividing two constantly changing dividend rates.  Therefore, the user interface will require the following tweaks:1) It will display the current dividend rate on BitShares so the users can see.2) It will display the sub-currencies price as multiples of a BitShare calculated by dividing the sub-currency dividend rate by the BitShare dividend rate.  Thus all sub-currencies are 'priced' in terms of BitShares.3) It will allow the user to specify an exchange rate between BitShares and any other real-world-good and the parallel crypto-Currency and then update all pricing in terms of that arbitrary good.4) It will then allow the user to specify an exchange 'ticker' to subscribe to.The end result is that the user of BitShares will be able to see all crypto-sub-currencies priced in their 'native' currency based upon any exchange.At this point it would be very easy for the user to identify which sub-currencies are over/under-priced relative to one another and trade between them without having to worry about the mechanics of relative revenue streams. Thanks for joining the discussion with some very good problems that could also be an improvement over BitCoin.   I have thought about ways to address some of those issues in the new blockchain, but the point is really moot if someone can prove that the fundamental purpose of BitShares (crypto-Gold) does not work.   That said here are some of the other 'updates' I would am considering to solve your issues:0) Include a hash of the 'currency contract' in the genesis block that outlines what things the developers *may not change* without forking a new crypto-currency.1) Define the block-chain to be a fixed-bandwidth / block-size maximum.  The result of this change would naturally limit the available transactions and thus make 'transactions' more valuable.  This would drive up dividends and push more transactions 'off-chain' where they belong while keeping things decentralized.         - ideally most transactions will move to OpenTransactions servers hosted behind BitMessage and OT servers would use BitShares to bail in / out of crypto currencies.2) Native support for transferring value to and from a parallel chain.  This would allow many 'sub-chains' to interact with one another through nodes that join 2 or more chains, but no node would have to join more than 1 chain.   This would allow non-linear scalability with automatic load-balancing between the parallel chains based upon transaction fees / dividends.     - BitShares makes support for parallel chains workable based entirely upon transaction fees.  The smaller chains would have lower transaction volume but require a trade to move value between the two chains.  Thus if BitShares ever became 'overloaded' it would just split and HARM NO ONE.   In fact, because the values in any one BitShare network track 'gold' or 'silver' then it doesn't matter what the price of a BitShare is and multiple BitShare networks could be set up provided there was market demand for it.  This would scale much better and far more decentralized than BitCoin ever will be.3) Block-chain history compression by including the hash of a list of all unspent outputs in the merkel tree.  Nodes could drop the complete transaction history and only hold the unspent outputs.  This would greatly reduce the size of the block chain.4) Define a new hashing algorithm that is RAM intensive, ram is already a very expensive specialized asic (transistors) and thus asics would only be able to optimize a small percent of the transistor count required to perform the hash algorithm.  Thus hashing power is controlled more by transistor count than processor architecture. 5) Cause each transaction fee to reduce the mining reward by 50% of the fee.  Thus as transaction fees increased the mining reward would naturally fall toward 0, combined with the fixed block size and ability to fork off new chains once one chain reached capacity would probably eliminate the need for 'arbitrary' mining reward reductions.6) Reversibility is a no-go... it requires a central authority.  If you want that there are off-chain approaches or multi-sig support already. **  deleted **  Rules of Operation for the Anonymous Peg Company:They only sell their crypto-Oil for a 1% premium above current market price.They only buy their crypto-Oil at 1% below current market price.They only 'issue' new crypto-Oil at market price. Until I post otherwise, the offer I made to thezerg is open for all takers.If you also propose a 'fix' for your attack at the same time that you present the attack, and I accept the fix then I will double the reward and pay 0.5 BTC instead of .25 BTC. Ok, the introduction of 'Q' is only confusing the issue.   As a result I would like all further discussion to *assume* that there exists a company (eOil) that holds 10,000 barrels of oil as well as enough BS to buy 10,000 barrels of oil.   eOil wants to generate a new currency called crypto-Oil and thus wants to peg the price of oil to crypto-Oil.     I chose oil only because it is more 'divisible' than gold, but you could also assume an infinitely divisible supply of gold.   Next, assume this company is attempting to peg  crypto-Oil to the price of Oil... now drive this company out of business. I will accept your terms because you seem to be very competent at finding things with a few, minor, tweaks to the clauses.1) I have discussed many rules and sometimes your attacks violate an existing rule or a rule that you did not understand.  Pointing this out or clarifying an existing rule shall not count as a new rule.  If any other poster on this thread will agree with me that it is not a new rule, then I win, if no one will agree that it is an old-rule that you misunderstood... then you win.2) Working the system with only transactions between yourself (no other people) is the only way to collect on #5, otherwise you would just be playing the market spreads to make money.3) crypto-Q and Q will vary in price as the ratio of depositors / withdrawers changes and this is expected behavior.   You must show that given an honest anonymous 'backer' with a large fixed supply of Gold and a matching supply of BS and no new infusions of cash that has the intention of maintaining a peg of crypto-Gold within +/- 10% can be driven to bankruptcy provided they are intelligent about managing their spreads/margins.   4) you must zero the value of crypto-Gold backed by the anonymous 'peg'.5) you must mint enough crypto-Gold to get the lions share of the crypto-Gold dividends from the anonymous 'peg'.  6) Your attack must assume all actors are rational profit-seekers.7) Your attack must not be something that Bitcoin is also vulnerable to (51% etc). * edit *   I want to clarify that I may choose to stop paying you without giving up on this idea.  It just means I do not believe your attacks are valid. Thus not paying you does not entitle anyone to the full bounty.The purpose of the anonymous peg is simply to avoid the SIDS attack issue which is an entirely different area of discussion.   Therefore, I will send you 0.25 BTC for your most recent attack.   Thanks for hanging around and helping out. How to create a crypto-Gold with an anonymous backer:First we need a dividend-paying crypto-currency like Bitcoin, which I shall call BitShares, the dividends can be paid from 50% of mining fees.Next we need the ability to 'short' BitShares to issue a new crypto-Gold at the current exchange rate.Next we need the ability to cover the 'short' by reversing the process by turning 1 crypto-Gold back into BitShares.Next consider the business of eGold (shutdown in 2009), they allowed direct instant transfer of gold between accounts.  They made their money on transaction fees.  The problem they faced is that they were not anonymous and thus accused of supporting money laundering.    What if eGold could have issued a crypto-Currency that could be backed anonymously.  They could still make their money on transaction fees and as long as crypto-GOLD tracked the value of actual gold then people could trust it.   They wouldn't have to trust it as a 'promise to pay', but could trust it because they could see that its current 'dividend rate' was the proper multiple of the dividends paid to BitShares and therefore crypto-Gold was actually worth the same about as physical-Gold.So how would eGold operate?   Step 1: Acquire 1000 oz of Gold.Step 2: Check the exchange rate of Gold vs BitSharesStep 3: Issue new crypto-Gold at the proper ratio of Gold vs BitShares.Step 4: Anonymously promote that you will maintain the peg of crypto-Gold to Gold.Step 5: Let others exchange crypto-Gold for Gold because it is currently at parity.Step 6: When the value of Gold goes up in terms of BitShares by 10%                  -  Sell 100% of your Gold and buy BitShares at the new exchange rate.                  -  Use these new BitShares to issue new crypto-Gold at the new exchange rate.                  -  Cover your old crypto-Gold shorts using the new crypto-Gold thus giving freeing your old BitShares                  -  Buy gold with your old BitShares, you will end up with 10% less gold than you started with.                  -  Everyone gains more faith in crypto-Gold... Step 7:  When the value of Gold goes down in terms of BitShares by 10%                  -  You can now use  9 BitShares to purchase crypto-Gold and free 10 Bit Shares of collateral.                  -  You net 1 BitShare which you will hold incase the price goes back up.                   -  Parity is maintained.Step 8:  Maintain buy / sell orders between BitShares and crypto-USD on the market with enough spread to make a profit any time there is deviation from market prices.Profit!  Because BitShares can be thought of as a claim on future Revenue.  The reason eGold could maintain a 'peg' is the same as traditional hedging works.You decide you are going to mine Gold and that it will cost you $100 and 1 year to get it, so you 'pre-sell'  (aka short) your gold at $100 and then cover a year later when you produce it.If the price of gold falls over the course of the year, then you just buy it at market price and keep your profits.  If it goes up, you have no losses. Thus BitShares allow you to 'hedge' your position in BitShares and because you have a hedge, you are able to eliminate the effects of exchange rate changes over time.
No, that is not what I am assuming.   Even if the BitShare supply were constant, the price would fluctuate relative to Gold.   And earlier I showed how regardless of the price fluctuation between Gold and BitShares, eGold could peg crypto-Gold to gold (within +/- a few percent transaction fee).As a result, it does not matter what BitShares do relative to Gold whether due to mining or a scary news article, eGold could maintain the peg.  I never said the price would track perfectly,  I said it would track within a range of +/- a couple of  a percent.  The change in BitShare price create a profit opportunity to correct the crypto-Gold price. All mining can do is affect the value of BitShares and as I have already demonstrated, if BitShares go 'down' then they can sell some gold to increase the 'backing'.If bitshares go back up, then they can repurchase their crypto-Gold  to free their mortgaged BitShares with enough profit to repurchase the gold the previously sold.This, mining is irrelevant to the price of crypto-Gold.  When BitShares go up the interest paid on crypto-Gold goes up.When BitShares go down the interest paid on crypto-Gold goes down.So clearly, price changes in BitShares to result in changes in crypto-Gold... the question becomes what is the opportunity to profit. Clearly if BitShares go down in value then eGold would have to up the BitShare backing behind their goldcyrpto-Gold.  Do they have the money to do so?  Yes, they can sell some of their gold at the new exchange rate and re-issue crypto-Gold at the new price.What if BitShares go up in value?   Then the value of crypto-Gold goes up to!  They can then buy crypto-Gold with less BitShares than it took to create it.  Then, redeem their mortgaged bitshares and the result will be enough BitShares to allow the to purchase more gold!  End result is that as long as they charge a slight 'spread' or 'transaction fee' they can make a profit with 0 risk. Hold on buddy... you skipped some steps and created colored coins instead of crypto-Gold.   First step, what is the current value of Gold in BitShares.At what rate of exchange did they convert BitShares into Crypto-Gold.When the price of gold changes, what is its new price in BitShares?How many BitShares can they buy with the gold they have in their vault? Is it more or less than the number of BitShares required to buy crypto-Gold? This is where BitShares will entirely demolish their plans.1) no more exchanges2) mining is far more decentralized.3) all assets that are traded are 'final' sales, no IOU, no deposits.  Equivalent to barter.4) no currency exchange risk.Combine the properties and the only thing they could do is outlaw the direct acceptance of Bitcoin or BitShares for goods as being 'money transmittal'.    If we get them 'on the record' saying that using crypto-currencies for buying and selling goods is acceptable and legal, then they are stuck! Slight clarification, the BitShare revenue stream backs the value of crypto-Gold, eGold would just peg the exchange rate (prevent over-issuance). Ok, so in addition to having a large amount of CPU power, the attacker also has enough existing capital to buy up all bids.    It is good to know that we are getting to attacks that are now very expensive to carry out instead of just attacks that anyone could do.   The act of buying up all bids also means those with open bids didn't lose money they didn't "agree to".  Lets look for counter-measures:1) Everyone who holds crypto-USD could place a 'fail-safe' bid at say 90% of face value.   In this case the attacker would effectively do a hostile take-over of the currency but ultimately wouldn't be able to steal very much (less than 10%) .  Everyone else would then just switch to a new crypto-USD.2) You could place a limit on the % of the order book that may be cleared by any one block.   I don't like this approach as the % is arbitrary, but it would probably be acceptable.  3) With a hash-algorithm resistant to GPU and ASIC you would have to rely on pools to begin with (or have a bot-net).Anyone else have any creative ideas on how to mitigate this rather 'expensive' attack? Note, I didn't say eGold would back the value of BitShares... BitShares can fluctuate all they want.  I said eGold would back the value of 'crypto-Gold'.   The interest payments in my system come from transaction fees.  My money supply is ultimately fixed just like BitCoins.The 'interest' on the 'gold deposits' is paid in BitShares and comes from the 'revenue stream' backing the crypto-Gold, not from 'eGold'.  Thus, the only thing eGold is interested in is that the peg remains *and* that it doesn't end up costing them money.   If you can show me how they would go out of business maintaing a peg then that will be a problem. Zerg, you haven't convinced me things are unworkable, but you have provided the most challenging and innovative attacks that cause me to put on my thinking cap.  Thanks for hanging in on this discussion, send me your BTC address and I will drop you a 0.05 BTC tip for your efforts, you deserve one even though you haven't yet convinced me. Yes, I represent market demand for this to exist.  I suspect that others in this thread would experiment with $20 to buy some 'just in case' and in which case they also represent demand.  So, there is demand for BitShares among those who believe it works and therefore they have value today simply because we believe they have value.Everyone has profit motive to see the peg hold, but lets assume it is only 1 party:1) eGold was in the business of providing backing to digital gold.  They made their money off of transaction fees.  If they could have pegged crypto-eGold to gold they could still make their money off of transaction fees while not having to even be public about their promise to peg.  This is a profit-motive, self-interest based reason for them to peg it.2) Assuming eGold was trying to peg crypto-eGold to gold and they had the reserves 'backing' their peg, could any other market participant 'break the peg'?If you can show me how eGold could be cheated out of their business by a 3rd party attempting to devalue crypto-eGold then you will probably have the key to convincing me this will not work.  If no third party can break an intentional peg, then I have shown you the profit motive that ultimately drives the two to parity. Lets continue this debate on the other thread in the Project Development section so everyone can benefit from our exchanges. Sure I can, a mint transaction would consume the same output as a bid transaction and thus ONLY ONE could get into the block chain.   If the block-chain had a rules such as:Does this block contain more than one minting transaction for crypto-Q?  Reject Block.Does this block contain any trades of crypto-Q for BS in addition to the minting transaction?  Reject Block.Does this minting transaction occur below the price of the highest bid from prior blocks?   Reject BlockThis would prevent the mining attack you just proposed. Fair enough, I have also spent 10 BTC of my time debating you and everyone else. These are all good arguments regarding the 'scalability' and transaction rates that are possible on a blockchain.   But ultimately transaction rates don't matter to much as long as they can happen.  If it is 'slow' it just means the spreads will be slightly higher.  There are 'off-chain' exchanges that can be anonymous and fast with lower spreads, but BitShares solves the problem of getting value into and out of those anonymous exchanges without 'exchange risk'.So, how fast can 'in-chain' transactions occur?  I could trade at the same transaction rate as Bitcoin's transactions provided both parties signed the transaction.   It is only the 'open-orders' that are 'slow' and open-orders are usually placed at prices slightly above or below the current market price and therefore having a 10 minute delay before an order can be placed or canceled would be perfectly acceptable.  It would prevent people from placing and retracting 'false bids' in an attempt to manipulate the market.So a parallel network could exist where people broadcast half-signed transactions that could be accepted by anyone.  These transactions do not count for the purpose of establishing 'price' information used for issuing new crypto-Gold.   Only bids that go 'unfilled' and are placed in a confirmed block may be used for that purpose.  Only 'speculators' and 'experts' will ever mess with these details and so they will probably operate in volume.  In fact, centralized anonymous exchanges would probably 'back' their exchange by placing volume orders in the block-chain to provide liquidity and reduce spreads.  Conclusion, I think BitShares solves a much bigger problem than creating a 'real-time-exchange'.  These businesses are 'market forces' and thus it would prove the hypothesis.  Let me clarify:  the only way to ultimately convert colored coins to Gold is to go to the issuer.   The issuer would have no way to 'start' a colored coin system anonymously because a colored coin really only has the value of the BTC being used to color it.   Where as crypto-Gold actually has the value on parity with gold and the issuer can easily 'peg' that value anonymously.   There can be any number of issuers and ultimately, anyone who has Gold at home is an 'issuer' that could make money backing the crypto-Gold price for a transaction fee. QED Yes there is less trust involved.1) Anyone else could enter as a backer and make money on "ATM" fees in the same way as this anonymous backer.2) You have crypto-Gold which has value to ANYONE at market value where as colored coins only have value to those who *TRUST THE ISSUER*. Perhaps this explanation will actually help you see *how* my idea works.   Clearly any corporation could buy a vault to hold gold, USD, etc.  This corporation wants to be able to operate anonymously and therefore doesn't want anyone to know who they are or where their vault is.   Instead, they build brand-equity over time by pegging crypto-gold to gold.   They charge a small transaction transaction fee for taking money in and out of their account and they also pay you interest on your account.   In order for their business model to be successful people must come to trust that crypto-gold will indeed track gold.  But that is easy enough for the corporation to do because they are actually holding the gold and the BitShares and thus are fully capitalized.  So they issue crypto-gold and the market observes the price action and realizes that it does indeed track.   Eventually people start trading gold/crypto-GOLD near parity and everyone is making money even though they do not know who the real backer is. Perhaps my refutal to that was lost in the mix... but I believe it was a very good one:
