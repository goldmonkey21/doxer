По моему у него в патче ошибка:Code:ntime = ntile.lower()      // патчntime = ntime.lower()      // скорее всего это имелось ввиду You can use tags - https://github.com/EvgenijM86/emercoin/tagsFor example:git checkout v0.3.2emcI will also update master branch so it would point to last good version. Currently it points to 0.4.0. Edit: changed master to 0.3.2. Ok...1) Can you tell me what version of boost do you use? You can check that out in package manager like synaptic.2) Try compile bitcoin 0.8.6 to see if it works.git clone -b 0.8 https://github.com/bitcoin/bitcoin.gitcd bitcoin/srcmake -f makefile.unix USE_UPNP=-If it does not work then there is some problems in how your libraries are currently installed. In this case I do not want to adjust our code to a broken or non-standard setup. Because if I do it might break on our end. We have tried to fix it in a patch just now. Can you do "git pull" from master branch, try compilation again and tell us how it went?Source is located here - https://github.com/EvgenijM86/emercoin Here is probably what happens:net.cpp declares a function which is defined in stun.cpp. It complains about ambiguous uint64_t type in that function signature. In stun.cpp uint64_t is defined by#include <netinet/in.h>* - If we have that library installed it should be obvious for the compiler which uint64_t to use - the one that comes from stun.cpp.* - If we do not have that library installed, compilers sees a couple of other variants of uint64_t and do not know which one to use.Please, check if you have that file installed. On my system it comes from 2 sources:libc6-dev:amd64: /usr/include/netinet/in.hsyslinux-common: /usr/lib/syslinux/com32/include/netinet/in.hAnd more generally, you should have access to all 4 includes from stun.cpp on your system:#include <sys/socket.h>#include <netinet/in.h>#include <arpa/inet.h>#include <netdb.h>If you do have them, then this is more puzzling than I thought...Edit:You can check that by opening makefile.unix file and changing compilation order, so that    obj/stun.o \is compiled before    obj/net.o \currently it compiled after it, like so:    obj/net.o \...    obj/stun.o \So, if stun.cpp compiles without errors before net.cpp, then it means you have all 4 includes on your system. Well, that is strange. Thank you for reporting this. I will try to compile daemon with this string right now and see how it goes:cd srcmake -f makefile.unix CXXFLAGS="-I/usr/local/BerkeleyDB.4.8/include -L/usr/local/BerkeleyDB.4.8/lib" USE_UPNP=-The only difference from your "make" string is that I am pointing it at libdb installation.Edit: compiled without errors and with some warnings:Code:g++ -c -O2 -pthread -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -g -DBOOST_SPIRIT_THREADSAFE -D_FILE_OFFSET_BITS=64 -I/home/evgenij/programming/c++/emercoin/src -I/home/evgenij/programming/c++/emercoin/src/obj -DUSE_IPV6=1 -I/home/evgenij/programming/c++/emercoin/src/leveldb/include -I/home/evgenij/programming/c++/emercoin/src/leveldb/helpers -DHAVE_BUILD_INFO -fno-stack-protector -fstack-protector-all -Wstack-protector -D_FORTIFY_SOURCE=2 -I/usr/local/BerkeleyDB.4.8/include -L/usr/local/BerkeleyDB.4.8/lib -MMD -MF obj/stun.d -o obj/stun.o stun.cppstun.cpp: In function int stun_handle_packet(int, sockaddr_in*, unsigned char*, size_t, int (*)(stun_attr*, void*), void*):stun.cpp:360:10: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]   if(x < len)          ^stun.cpp:371:13: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]     if (x > len) {             ^stun.cpp: In function int StunRequest2(int, sockaddr_in*, sockaddr_in*):stun.cpp:318:30: warning: reqdata.stun_header::id.stun_trans_id::id[0] is used uninitialized in this function [-Wuninitialized]   req->id.id[0] |= 0x55555555;                              ^stun.cpp:423:17: note: reqdata was declared here   unsigned char reqdata[1024];My g++ version is:g++ (Ubuntu 4.8.2-19ubuntu1) 4.8.2But it should also work with g++ version used on ubuntu lucid. ice00, what kind of environment you are using when compiling v0.4.0? I was using Ubuntu 14.04 when developing this version, with their version of gcc and libraries.As for boost:*) Official release uses boost_1_50_0.tar.bz2 on windows*) On linux it uses whatever version is on Ubuntu Lucid (which is 1.40, if I am not mistaken).*) I was also able to compile it on ubuntu 14.04 with their boost version - 1.54.So, at least 3 different versions should work. What does "linked" mean exactly? Should I just git clone them while inside eloipool directory? Yes, because our host have suddenly restarted our system 4 freaking times during 29-30. This caused mysql to stop loading at all due to data corruption. We have (hopefully) managed to restore a proper backup. Hello, I wanted to ask cgminer community about "efficiency" parameter. For example: if I have efficiency = 8%, then does this mean that I can potentially find 92%/8% = 11.5 more shares in the same time-frame with proper pool and miner settings? Personally I think this parameter is rather useless, because even if I change share because of new blocks, then probability of finding this new share would either:1) not change much (if cgminer remembers what hashes he previously computed for previous share).2) not change at all (if cgminer computation is totally random).But my friend thinks that we should reduce share difficulty of our pool, so that computations of shares almost never interrupted.Note: Efficiency parameter is located in pool management [p] -> Information . welcome ^) That may be, but it has to be after the actual deal was signed by both parties, right? If I create a contract upfront which states that I only accept "X" then, if he signs it - he will have to follow it. Before any signs are placed the property still belongs to me - is it not? If they think they can rob me just for refusing to accept X _before_ the actual deal, then I will accept tender and burn it with the car. Yes, but you know - spears are good for a lot of things, they are not, however, good for sitting on them. To control BitCoin you need a true totalitarian country, and those regimes won't last long. The only reason the current system is relatively stable is because general public find it acceptable.Wow, that's some totalitarian country you live in if you can't exchange your property for what you want. In my case I would rather burn down the house if court ruled it that way (even if I will have go to jail for it).I was talking about avoiding Q-BTC. If governments forces to accept them then I will simply try to avoid the laws of that governments to best of my ability. Your argument is based on government force, not on a free market. The same can happen with banks if government forces it's citizen not to use bank payments. In free market BC can dominate bank system. In your example I would simply try to form it as a gift, well, for some BC of-course, but who can prove that I received them and received them for the house? Why place a deposit in the bank in the first place? For me - it is simply convenient that I can have my money without physical form, and instantly pay for anything over the Internet. I could care less about 2%-5% income a year. Bitcoin replaces any reason to make deposits for me if it becomes widespread and shops will accept them.Taking a Loan is a different thing though, because large amount of money is sometimes needed and needed right now. But where are they going to get that money if nobody have a reason to make deposits?
