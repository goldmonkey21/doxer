So i just noticed this thread (and your pm) as I have not been on the forums for a while. I am not the guy you are looking for I am afraid, though that is my flickr account and I am a technical guy. The 20btcs you are talking about came from http://bitcointalk.org/index.php?topic=588.0 . Hiroe is the one who sent them to me, I do not know Hiroe outside of that single transaction. Hope that helps in someway. Very quick thank you again, 16 bets placed for meÂ   I was thinking of trying the lottery out and this seals the deal. I would like to go for a 16coin bet. My address is 16wv3KGFnK1GGi3ZUVFdxKUTftv1DUQFs3. Thank you TTBit! Anyone have a working OS X binary they wouldn't mind posting? I am still trying to get my build tools figured out on OSX as it is not my primary OS currently. http://www.lowendbox.com/ is a great site that lists cheap vps hosting offers. There are many and performance will vary depending on the host but, it's a cheap way to test it out. I think this type of thing will depend greatly if the provider oversells the vps servers capacity or not. Run "ps", that should list the processes running. Once you find the pid's of the commands above you can issue a "kill" command for the pid.You could also use "top" to see a list of the active processes on the system. Once in top if you hit k and then enter the pid it will kill the process. I think the big secret thing with cuda or opencl clients is that they give one person a decisive advantage over everyone else running only a cpu. Add that with the fact that most users don't know cuda programing (me included) makes for a situation where a cuda client can be valuable to the author... For example artforz has made his own cuda client that has not been released. It has been rumored that he makes up 25% of the generation power on the network. It give him a huge advantage and one I think artforz would like to keep. The down side to opening up a GPU client to the masses is that it completely kills CPU based generation unless you have a lot of cpus.... On my windows client I went from 4500Khash to 29000khashes.I will give this a try here in a few days or so on my 8800gtx hackintosh and see how it runs. What GPU does your mac have in it? I have no cuda or MAC OS X programming knowledge but, I have done some c in BSD and will have a go at the code to see what I might be able to do. Thank you for your efforts! In my closed test network experiment with the client the speeds did seem to be on par with what should have been seen. The difficulty was 1 and I khashed @ a rate of ~28500KHPS. I found that I should be seeing a block roughly 7 minutes with a 95% probability. I was seeing them within this time frame regularly. It seems to me to be working but, I have not gotten to put it to much use on the public network as of yet. I am going to start running it full tilt on the public network now to see what happens. The client posted by puddinpop is a windows client. Probably at this point could use it's own thread and perhaps a mod should split the topic at the point that puddinpop posted the client to avoid further confusion. I have been running the client on windows 7 64bit for a few days on and off.I am currently doing some testing on the client on a closed network of clients. Thus far the client has not done anything outside of generate coins and send some to the authors address. Netstat does not show any extra ports being listened to. I am fairly confident that the client is not doing anything out of the norm for a bitclient (i.e. virus, malware, etc.) and it does pass online anti-virus tests. The client may have a bug that I am trying to verify tonight. I don't want to cause a stir until I am sure and would like very much for some one else verify they are getting the same results as me. I will post more once or if I see the client do the same thing again as I deleted the data files and started over clean. I will know in about another 75blocks (sometime in the middle of the night). In the mean time has anyone else linked a client with this one and let the run from block 0 on a closed test network?[Update] OK no bug here just a matter of the way the client works. Everything a block is generated the "debit" is incremented by 5btc. This debit is sent right then if coins are available. What I was seeing on my test network was that clocks were being generated and taking a long time to mature so that once I have 50btcs generated and matured they would all be debited out of the client because the blocks had already been generated. I would say my test of the client makes me trust it with a fair level of confidence.  Just wanted to send another update here that the client is running just fine for the most part of about 14hrs or so now. I had to stop it once to add a fan to my gpu because it was overheating, Otherwise generation is stable. Also something that I noticed, when I use the -server and -daemon switch the client exits after the command has been sent. For example when I do a getinfo, the info box comes up but, after that the client closes, no crash just exit. The log shows the getdata command and then some operations afterwards, so it doesn't seem like it's bailing out right at the command being sent. Anyone else having this issue? AH but, I wasn't talking about FLOSS at all .  I meant that by leveling the generation rate across all clients everyone has the same chance to generate a block (well that is if everyone's computer was the exact same) hence commie. Where as if someone make a client to make more khashs then everyone else it's more like capitalism. I did realize this is true on both accounts. I'm not by any mean saying switching to GPL is a super great idea I was just wondering what everyone thought about it. As has been pointed out it would do nothing to stop someone from making a private client which is fine. If someone spends the time to optimize a client and use it to there own gain then that fine so long as they don't control the whole generation of coins. I would compare that make your own client to capitalism, where as if we were to force everyone to release everything so the field was completely level would be loosely like communism. For Cuda I think (emphasis on think, not know) the best thing to look for would be the number of Stream Processors, which is like the number of cores. If you are using an old Athlon and your stuck with agp I think this will slow you down abit vs a pci-e bus but, I really don't know. Also you would want to make sure you cpu can keep up with pumping data to your gpu. Like I said in my post one of my cpu's cores is pegged @ 100% usage while the gpu crunches away. A thought has occurred to me that bitcoins client is released under mit which allows for closed source clients that would give someone an advantage over everyone by modifying the client and not releasing the code. If we changed to GPL this would force anyone who created a modified client to release the source code under the terms of the GPL.A few thoughts for discussion here:Do you think switching to GPL would be a good idea?If someone released a closed source client how could we enforce the GPL?Would changing to a GPL stifle development in anyway?Would this make it less likely for new clients to be developed? I will donate for an opensource client. My 8800GTX is currently crunching at a blistering 25000-24000 khashs with one cpu core pegged @ 50%. The hardware is the exact same as above where I posted my results from the mac OSX Cuda Client but, running windows 7 ultimate 64bit. My system is still usable (browsed the web with no noticeable difference) but, windows menus and other aero enabled windows are laggy. Not trying to be "that guy" but, I am a little un-trusting of a closed-source client that sends bitcoins to a random address without knowing what else is under the hood. Then again if it nets me coins and only cost 5 thats not bad as long as that is all it does. Anyone using it generate coins yet? Also how many coins would you want to opensource the client?[EDIT]Wanted to add a note here that I have been running the client for about 8 hrs now and it is stable no crashes. Seems that puddinpop did a good job with the code. I think I can live with the 10% tax for now once I see the coins start rolling in. I was wondering if there was any update to this as I have a c7 cpu and would like to use this to crunch a few extra khashes on the machine. Is the code working properly? What motherboards are you two running? I gave it a little more thought here and wandered back to the time I used to work retail and use credit card machines. Most of them worked by having the card swiped and preforming an initial hold on the account for the amount. The amount was not actually finalized until the "batch" of transactions was run at the end of the day. I was thinking an system like this could work well for pseudo-offline system. You would still need to do an initial validation of some kind, like a bitcoin credit check or if the system for bitcoin reputation comes to be in effect, and then put the transaction into the batch for later processing.  The only problem I see is the any coins moved to a vault would need to be confirmed by the network when moved into the vault and confirmed when taken out of the vault to make sure that someone doesn't just come up with a vault file and fill it with coins. A unix-style pipe instead of a socket would make moving the coins over any link (tty, usb, serial, etc.) or media increasingly easy but, the problem again is the move would need to be confirmed to prevent cheating which requires internet. I'm guessing here but, I think it would be possible to make a new "vault" address in the client and obtain the private key for that address from the wallet file. Somehow bind the address to a vault file and have the client transfer the coins to the "vault" address. The network would try and send the coins to the vault address which is off line. Once you move the vault back online the network should confirm the vault has the coins. Might be able to do something like this with two wallet files but, I think there is a bit of risk involved with what I described.Having a method of doing off-network transactions would be pretty neat, I think we could open bitcoins up to more "everyday" transactions. The transactions could go into a batch and then be processed when internet is available. The only problem I could see is a case when someone overspends the coins they have and leave the receiver high and dry or simply doesn't send the coins at all but, thats probably not a problem so much with bitcoins as it is with peopleÂ   From the thread here: http://bitcointalk.org/index.php?topic=287.0The general idea seems to be that once a BTC is worth more they can change this value.lachesis points out that:I'm not aware of any other transactions fees but, I am not the expert by any means...
