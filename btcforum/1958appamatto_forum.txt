Or rather, *nothing* is known about Satoshi outside of bitcoin, and most I've talked to believe it's a pseudonym.I too was under the impression that Satoshi worked at a university somewhere due to his publishing of the bitcoin details in a paper.  Most non-academic projects don't do this.  When people said Satoshi was just a pseudonym, I was like "No way, there's a paper that lists all of his credentials, etc." and then when I checked I realized the only identifying information in that paper is his email, hosted at a free email provider.  Searches based on that email yield only bitcoin-related results.Ironically, he is now a world renowned cryptologist. I'm working on bitx.  You can follow my (slow and leisurely) progress at the fossil repository (http://bitx.appamatto.com) and my blog (http://appamatto.com).  Once that's done, I'll work on either the bitcoin on bitx implementation or on bitCA, which seems to be the better way of doing DNS and related services.I think theymos/nanotube are working on their proposal as well.  There are probably other proposals that don't require additional block chains or changes to changes to bitcoin proper, but even then it seems a little to early for finished products. I don't think invalidating a name should put it up for bids.  I think the name is just done at that point. Right.  I'm thinking that this could be a huge boon to security and privacy.I'm not sure that it makes sense to talk about "sites" in particular, but I think we're on the same page.One problem with certificates is that sometimes the private keys are secretly leaked to government agencies or "discovered" by other third parties.  I think an important part of this system would be a "kill signal", that is a way for a name to self destruct by signing the order with its private key.This way, whistleblowers who discover a private key would be able to anonymously convey the message that the site's security has been compromised.  There is no reason for their pseudonym or their public key to appear in the system anymore because there is no way to recover from such a private key exposure.  For instance, if a new public key were created and "blessed" by the old one, we couldn't tell if this was an action taken by the authentic person or the imposter. I don't know about step 3.  That is, I wonder if it's sufficient to simply have A's public key and then get the IP address through other means, making sure it's signed by A's key. A search for "distributed certificate authority" yields many academic results.  I wonder if any of these provide the same guarantees that a block chain based approach would? I agree that it is simple.I think a reliable database of pseudonym to public key (or hash of public key, etc.) mappings could solve a variety of problems.For example, i2p has an issue distributing eepsite keys in some trusted manner.  And, we're all aware of problems with DNS.It seems to cover the "irrevocable eternal resource identifier" aspect of DNS but not the "pseudonym to pseudonym transferable virtual property" aspect. I'm not sure why there would necessarily be price inflation given that the marginal increase in btc is relatively small and can in any case be forecast. Your value is not being eroded.  Your coins represent your percentage of work put into the block chain.  That ratio will never be broken. I meant ip multicast and broadcast (not sure if that was clear) I wonder if more thought should be put into the nature of names.  Is providing an abstraction over ip the real intent?What about registering a public key, so that you could later use the name as a pseudonym and show that you're the true owner?With public key registration you could associate arbitrary information like ip addresses, ssl certificates, ... ?Or has public key naming already been solved? That design decisions concerning inflation and other factors are "hard-wired" into the network suggest some inflexibility and the ability of another network to swoop in and cut users a better deal.The only attack I've considered any kind of threat to bitcoin is the presence of a network better than bitcoin.  I think it's likely that the biggest sticking point is the reward-for-work in bitcoin, which is tied to inflation.It's easy convince the predominately libertarian early adopters that a fixed money supply is worth giving a handful of early adopters over a quarter of the total bitcoins that will ever be created.  But bitcoin may have a hard time crossing the chasm if new users get for terahashes what people were getting for megahashes a few months ago.Some of the heretics on irc have mentioned keeping the 50 btc block reward indefinitely, having a steady perma-inflation.  I'd go one step further and say that the number of coins generated in a block should be proportional to the rarity of the block's hash.  In other words, a block with 15 leading zero bits should generate twice the number of coins that a block with 14 leading zero bits in the hash.This would probably be called "hyper-inflation".  Why not keep the reward the same--from the first hash to the last hash?As it is, I feel that we're in a giant pyramid scheme where present petahashes are being offered up so that bitcoins from the genesis block can ever-increase in value. Is this related to estoppel?  Even if the copyright disclaimer is unlawful, it was clearly intended by the copyright holder, and I don't see how a person could seek to benefit by showing that they are in contravention of the law. If the client has block 5 and its balance sheet he can verify both block 6 and block 4 by fast-forwarding or rewinding the new/old transactions on the balance sheet.  Verification in this case means "if the beginning of the chain is verified then so are all the nodes up until the end."The client may end up with multiple long chains, which will either be connected in some way or one will be an attacker's chain.  The client should be able to request older blocks until the point where the chains connect or the attacking chain is overpowered.I think you get too much fragmentation if you only get new blocks, but the idea of "mostly broadcast" may still be a good aim, given that the number of old blocks required to remove all doubt may be quite few. Is multicast/broadcast functioning at all?For information that needs to be retransmitted repeatedly it seems much more efficient than p2p, although I'm not sure what to do when nodes need a retransmit. What is your datacasting concept?One reason why I think bitcoin can't work like this is that a client who only saw new blocks wouldn't be able to know whether the transactions contained within were valid or not.  This seems to require balance sheets... I'm not sure the etiquette about referencing my blog articles on this forum.  Let me know if this is a bad idea.http://blog.appamatto.com/2010/12/base-less-block-chains.htmlI wrote an article about designing a bitcoin-like protocol that allows new clients to determine the proper head-of-chain by receiving only "new" blocks.  In other words, the system would become broadcast-only and there would be no method to request old blocks from peers.I'm still grappling with the idea, but I think that if timestamps are present in the protocol, attacks on new clients should be at least prohibitively difficult.  If timestamps are not present then there is a "history attack" where an attacker rebroadcasts blocks from the entire history of the chain, forking the chain at the last moment.  The history attack is pretty difficult to pull off since old hands won't rebroadcast nodes that aren't new.Broadcast-only-ness allows for some interesting properties including lower network and disk usage, but it can be weak against lost blocks.Naturally this method would require a balance sheet-based implementation of bitcoin. This is interesting.  So the cartel miners could effectively possess more than 50% CPU by "allying" with some normal miners.I think the problem is this:Let's say the cartel has 1/3 CPU, and decides to allow 1/2 of all non-cartel blocks through.  Thus, the cartel network would consist of 2/3 CPU.  What figure should this be compared with to see if the cartel will win?I think the answer is 100%, because the system as a whole allows both cartel blocks and non-cartel blocks.  100% CPU power for the system, 2/3 CPU for the cartel.  What's worse, the cartel's behavior will net it much fewer than the 1/3 of the blocks that it was entitled to because sometimes it will be operating on an incorrect block chain.The cartel is trying to "ally" with some non-cartel blocks.  Amusingly, it is actually the network as a whole that reverse co-opts the cartel by accepting cartel blocks without prejudice. Thanks for the links.  I didn't realize that the wtfpl and the unlicense were actually public domain dedications.  I had thought about using the cc0 previously, the main advantage of which is that it falls back to a permissive license in places where that is necessary.I decided against cc0 because it a much more involved license and I think that disallowing disclaimers of copyright is absurd.  Where are these jurisdictions, really?  And if someone used my public domain software in these jurisdictions, who would they face legal threat from? I think you're mischaracterizing my "attack" on the GPL.  There are clearly licenses that are worse.I don't think you're right about the causes of the GPL.  The GPL is from an era when the BSD system was under legal attack, and there wasn't a developed tradition of public domain or permissive licenses.  Now, there are exceedingly healthy commercially- and community-supported non-copyleft projects, many of which will replace their more restrictive GPL counterparts.I think the two "causes" of the GPL today are 1) the viral requirement of useful GPLed components and 2) the notion that the GPL is a tool for freedom.  I think the second is a faulty notion; it can be argued that there are eras where swords are tools for healing, but thankfully we're long out of harm's way on that one.About the copyleft community: I'm not really going to dissuade anyone who has investment in the GPL.  My goal is really to be a voice for those who hadn't really thought about the issue deeply or didn't notice the viable alternatives but are attempting to produce the least amount of legal threat to their fellow man.
