Heyecan yapanlar sadece piyasanın yenileri değil, aramızda uzun süredir bu işlerle uğraşan fakat artık kafası yorulmuş, karma karışık olanlar, kararsızlık yaşayanlar da vardır elbet. O yüzden arada böyhle mesajlar görmek, böyle sayfalarda değişik fikirleri okumak,  uyarılmak iyidir.  2016 sayımına göre 270.000 nüfuslu 12.000 km karelik bir ada, ben kalabalığa büyük yerlere alışkınım, şöyhle İstanbul gibi 15-20 milyon insan iç içe  olmazsa yaşayamam orda. Hem ben 44 BTC verecem de Vanuatu bana ne verecek, sadece vatandaşlık, hem bakalım metrobüsü var  mı.  Uzun karışık şifreler, telefon doğrulamaları, her şeyde  farklı şifreler, sadece kendi kullandığım bilgisayar, fiziksel wallet tüm bunları yaptım. Daha da beni soyan olursa helal olsun diyecem,  yapacak başka bir şeyim kalmadı.   İşte güzel bir haber,  blockchain ve akıllı sözleşmeler artık ülkemizde de kullanılabilir bir konuma geldi. Film yapım şirketi Anima İstanbul ile ilk blockchain projemiz olarak bilinen Copyrobo' yu bu işbirliğinden ve anlaşmalarından dolayı kutlamak lazım.  Yeni projeler bekliyoruz. Fiziksel ledger wallet kullanıyorum şu ana kadar daha iyi bir yöntem bulamadım,  kağıt cüzdan çok süper bir fikir ama derin temizlik yaparken hanım bulursa  gereksiz bir şey diye yırtıp atabilir, korkuyorum.  Fiziksel wallet en azından elektronik bir alet, usb gibi bir şey bunu atan olmaz es kaza. Bankalar patır patır Ripple ile anlaşma yapıyor neden, çünkü swift sistemi bankaların mecburen üye oldukları, her işlem başına para ödedikleri bir kurumdur zaten bu anlamda yurtdışı para transferlerinde  swift'in  bir alternatifi yoktur yani  bir tekeldir. Blockchain sistemi bankaları da rahatlatacaktır aslında.  Bitcoinin güivenli olması özellikle önemli bir konu çünkü bir bankadan para çalınırsa sigortası var, sigortası zararı karşılar, müşterilerinin parası çalınırsa özellikle müşterinin bir kusuru yoksa yine banka karşılar. Coin dünyasında şu an paramız çalınsa başvurabileceğimiz hiç bir yer yok.  Vladimir Putin gibi ethereumu özellikle açıktan destekleyen birinin kripto paralara yasak koyacağı düşüncesi saçma geldi. Kripto paraya karşı koyamazlar artık.  Yalnız Kripto para piyasası gerçekten çok hızlı büyüyor, her ülke bu konuda bir şeyler planlıyor olmalı.   Bu piyasada çok para dönüyor , yasal olmayan işler de bu ödemeler üzerinden gayet güzel yapılabilir. Putin yasal düzenlemeler yaparak hem piyasayı kontrol edecek, hem  vergisini alacak hem de vatandaşlarını kollayacak. Söylediklerinde abes bir durum yok. This is an old topic but those that come to it might get incorrect information about Timekoin. I've put together a FAQ that answers a lot of questions here and elsewhere on the Internet. This should save a lot of searching and myself answering the same questions repeatedly.  Timekoin FAQ Document Satoshi did a lot of off-forum communication, some of which a lot of us still have in archive. I did contact the author of this article and gave them some clues to check for to see if it is really him. So far, no response, but no surprise after all these years, people have published many stories about finding the real Satoshi. I contact them, offer up some useful info not available on the Internet and usually the investigation falls through as the supposed Satoshi can't answer any questions from the past about interactions with other members here. The real Satoshi could contact any of us directly with a "I'm alive" message if he wanted to, that would clear up confusion quickly. That would mean the e-mail in the account exist unencrypted somewhere since only a password reset was needed to access it. Makes one wonder what would happen if a GMX admin has some free time to snoop around in his locked e-mail account? http://www.forbes.com/sites/kashmirhill/2014/09/08/bitcoin-creator-satoshi-nakamoto-email/ All the hacker needs to do is make a screenshot of the e-mail index from 8/3/2010 to 8/4/2010 , same as the other posted screen shots that only show the date and subject and I can tell everyone right away if account hack is legit. At least if e-mails from that long ago still exist. The hacker has already taken a verbal shot at me online, might as well backup his/her claim.   Thanks everyone, I appreciate the quick replies.   Not looking to buy or sell, just research. Got out of that game a long time ago.   Thanks for the link. I know the difference, but many sites don't make it clear exactly what they do. Ok, thanks, I never saw those options listed on the site, but I guess you have to have an account first to see the rest. Unfortunately, no.   As the subject says, does an exchange exist for Bitcoin in which the user sets the price to sell their bitcoins instead of the website setting and forcing the user to accept their own sell price? I am putting together some research and it seems all the large exchanges don't allow the user this type of freedom when trading.Thanks for any helpful responses.
Where have you been for the last 5 years, nearly every bank in my area can take cash & check deposits directly into the ATM 24 hours a day.   So everyone at MtGox is basically buying credits, for which they will never be able to exchange. Good point, so what exactly is MtGox selling at the moment then?   If people are buying from MtGox at a very low price compared to the market average and then selling them back into the open market for tremendous profit (via another exchange), then that calls into question the other "legitimate" exchanges because it does not fit the economics 101 of supply and demand. If the market is being flooded with cheap bitcoins via MtGox, then the price must go down unless the other exchanges are artificially inflating the value to avoid losing money on their side.That would call into question more than just MtGox honoring trades, but every other exchange out there for price fixing. It would not even need to an Altcoin because it just a different mutation of the original Bitcoin when you get down to the core. There is already a digital currency that does all this, but you won't hear about it outside the bitcoin bubble unfortunately.   The Timekoin Team is proud to announce the New opening of the Timekoin Market.https://timekoin.com/market/Learn about Timekoin at http://timekoin.org/This new site will allow the quick and easy exchange of Timekoins between members for any agreed upon types of payment or barter.The Market will act as a secure escrow for buyers and sellers, along with management of member ratings and disputes directed by the community of members participation.Thanks to all the members that helped to test the Market for the last month before finally going live!Sincerely,-The Timekoin Team http://en.wikipedia.org/wiki/Sha256http://en.wikipedia.org/wiki/Avalanche_effectNo more than 32 zeros as half the bits are flipped to produce the the avalanche effect.It would be like trying to create a device that the more heat you put into it it, the colder it gets.   Mathematically speaking, using the current bitcoin hash algorithm, there will be a point where the difficulty will be impossible to target because of the avalanche effect built into the sha256 algorithm that fights it. When that time comes, what happens if the difficulty is not achievable and no more blocks can be created? All transactions stop in bitcoin because the two systems (transactions and currency creation) are locked together. Trying wiping the entire block chain and starting over from null. There are not really enough active nodes to download the entire chain in less than a week on even the fastest connection because the rates from the nodes is so low.   We are talking about people.   I'm sure the large money connection will pay for a lot of marketing to hype it up to raise value or else buy lots of it to raise the value, then sell at the peak. Probably already going on as we type.   Version 3.x Released for ServerSoftware to run the server has been updated for all platforms of Windows, Raspberry Pi, Mac, Android, & Linux.For those running the earlier 2.x versions, the built-in self upgrade feature should allow you to do a smooth transition from the 2.x to the 3.x release version within the software automatically.Many new features and improvements have been made over the older v2.x series, the changelog.txt will have all the details of what to expect.The hack/exploit bounty still remains unclaimed, so there is still time to register to try for it.  Find the latest server version and other great info at the official website: http://timekoin.org/Thanks Everyone for all the Great Support! I would. I have many communications with him from years ago that only he would know about and has never been made public. If someone came forward claiming to be him, I could easily verify since I know what PC he was using, what part of the world he was living in, etc. before he started to actually try to be anonymous on the net. I can't say if he is alive or dead right now, but he could easily verify being alive at least with me because he would still know how to contact me. I do respect him wanting to be anonymous though. If there ever was a real search for him I probably have enough info to get any team on a really good start to finding him.  But... respect his privacy.  I've actually had the Service Service to my home *twice* now on two unrelated occasions. I am still around, going strong!   The US government loves to make press announcements, but never a public apology. I am still around, going strong!   Check my sig, you'll find one right there.   Timekoin is not a derivative of bitcoin, so these forums would not be the best place to find unbiased info about it. There is a very healthy trade community for it, person to person transactions are common place. As for the exchange question, you would have to ask the people that create the exchanges. They tend to only look around these forums for digital currency to add, but a whole other world exist outside this forum.   One was already created years ago and still going strong today. Not so much an alt-coin, but more of a totally different concept and technology all together. Basically not a clone of bitcoin/litecoin or how its concepts work.You'll find it here -> http://timekoin.org/More info at Wikipedia -> http://en.wikipedia.org/wiki/Timekoin Find the Faucet Here: http://timekoin.org/faucet/To find out more about what Timekoin is, Wikipedia, http://en.wikipedia.org/wiki/Timekoinor justhttp://timekoin.org/ for more information.This is on behalf of the project team to help people new to TK have some currency to play or experiment with.Thanks Everyone!   Agreed, any clones of bitcoin will suffer the technical issues or failures. Any digital currency with a more unique approach will survive the clones, but how many out there are actually unique and not just a copy/paste of the bitcoin code with the title renamed? I only know of one. I see this come up a lot, Bitcoins are not infinitely divisible.0.00000001 is the smallest amount you can spend. If you remove the decimal point it becomes easier to visualize with whole numbers.There is a 2,100,000,000,000,000 max cap for currency. As of this posting, every block found creates 2,500,000,000 currency.64bit unsigned integer can achieve 18,446,744,073,709,551,615 or 9,223,372,036,854,775,807 signed in size.So let's compare the two:18446744073709551615 unsignedvs2100000000000000or9223372036854775807 signedvs2100000000000000As you can see, there is plenty of room in the 64bit space for more currency, not a limitation on storage space for the digits. The 21 million limit is just an arbitrary number chosen out of thin air. Unless the rules of the system are changed again to use more digits, I don't think you can spend a transaction for 0.0000000000000000000000000000000000001 and it get processed by the network.
I am afraid the misunderstanding is on your end.    If the value was 3 or 4 more times, who would actually buy it? And bitcoins are not infinitely divisible. Miners would be hurt the most because it would push them to mining for 0.0000001 transactions which would overrun the fees. From a mathematical standpoint, buying the larger amounts nets investment at the expense of the miners. It's not economics but mathematics that would rule out that scenario. With that much money, you would not need build anything. Just buy all the Bitcoins that people are willing to sell, that alone would be enough to control it because there is a limited number that will ever be produced. The market values you read about have quite a bit of fluff to them since people having to be willing to purchase it for that amount, let alone sell it. Yes I have. Have you?   Won't this open the door to just setting your client to "relay nothing"? So what happens if a large enough group basically sets the client to run in "leech" mode?"When everyone is looking for gold, it's a good time to be in the pick and shovel business." -Mark Twain Back in 2009 when Satoshi still did personal e-mails to members, it was pretty easy with a tracking pixel to pinpoint where he was at the time even though he used a foreign e-mail server. His Mac was using a plain vanilla e-mail client that would load the pixels from the same place for every message he read from me, so if the search is where was he at the time years ago, I can shed some light on that. The question though is he dead, well he might be or he might not be? If he wanted the world to know, it was be easy enough for me to verify since he has the only private e-mail address that we exchanged messages with, so he could just send a "hey I am still alive" message.My guess is that he is either still involved, just under a different name to avoid fans from overwhelming him or just has changed his lifestyle completely and left the world of digital currency behind. Also, he might be dead, in which case it is sad that no one will ever know unless family steps forward. I didn't know this topic still came up, are people still looking for him? He is not dead, but he does like his privacy.   +1, Bitcoin is a set of rules and as long as your follow the rules, no one should be allowed to pass judgement on how others use it. Unless the rules are changed to combat perceived problems, such as the micro-transactions that SD brings up, everyone is complaining about the problem and not offering up any solutions and thus will never solve the perceived problem.There is no such thing as a technical solution to a social problem.   There is no such thing as a technical solution to a social problem. Bitcoin is designed to allow this and thus there is no technical solution for it as long as the rules allow. Maybe, but that is not counting the CPU time and disk I/O time. I know if I haven't run bitcoin for a while and it's a few weeks behind it takes all day just to catch up. I don't believe the design specs for bitcoin will allow this, it just isn't possible to scale it without a complete redesign of how the internals work. Kind of the reason this problem has shown up now while other theoretical problems will come in the near future.   Well, here goes a long spiel.Probably the last that anyone had heard from me before a few days ago was dated September, 2011 according to my profile stats. So it has been a long time of me just lurking around from time to time.I can't remember exactly when, but some story broke on the Internet about my bitcoin collection and shortly afterwards things got crazy.The first thing that happened was my inbox here at the forum exploded with people asking for a loan of anywhere from 10k to 100k bitcoins to start the next big market place. I had a few people message me here that they had been burned by a hacker or some website that had their wallet information and asked for anywhere from 100 to 1k bitcoins as a way to help them recover their loss. I always wanted to help people, but there is no well to tell if these were sincere request or just someone out to make a quick bitcoin scam. Some of those I did help people I did help just to be nice, but word must have gotten around quick.I had to step back from the forums for a while as it was a good place for people to chase me down. All the questions of what I would do with it or how did I get it, was I the one that hacked XYZ website and that's why I have so many, etc. Somewhere in this topic I think, is a another long explanation of how I came into possession of it all. Long story short, I was in bitcoin early when the network was small and basically used a lot of Amazon processing power to load up a ton of bitcoin miners all at once in their clusters (Amazon) using a custom compiled version of the CentOS bitcoind source files. Amazon had a big price difference between running a lot of windows sessions and running a lot of Linux sessions. Turns out, the Linux sessions were running kind of an old version of CentOS as well as I couldn't even get the compiled binaries to run.Well, a lot of money was spent to generate that chunk of bitcoins, but not so I could posses it all, there were plans to use it as a backing for re-loadable credit cards like service that had bitcoin powering it in the background. Needless to say, that project fell out due to (at least in hindsight) very inept investors. The project floundered and then finally as a way to get out, they (investors) wanted to see what they could sell everything for. It had cost a lot of real money to produce that pile of bitcoins, so I ended up buying it for dirt cheap (at least in terms that bitcoins really had no value to them). Maybe after the 7 year NDS I signed expires, the world will know who it was, but for now I can't name anyone or business.Once the market value was shooting up to space, the pile of bitcoins was worth a small fortune in theory at least.A lot of bitcoins were spread around the community to help people at first, but it kind of got out of hand.Ultimately, a large portion ended up being donated to wikileaks.org, so I'm certainly not the person sitting up top a large pile of bitcoins anymore. The rest went to paying off small debts and the very last of it was just recently donated to wikileaks.org again. I never had any intention of trying to crash the bitcoin market with a large sell-off as many theorized I would do. So sleep safe that there is one less person like me in the bitcoin kingdom.  So, no matter what legend has built up, nothing amazing or exciting has happened to the bitcoins I once had. No buying a Country or purchasing Islands of the sort. Just trying to help out where I could instead. The only thing I have left is old screenshots and empty wallet files now.A large portion of my past time has actually been invested in the creation of an alternate digital currency for the last few years because I always thought there was a better way to do it. So that's where I spend all my time now, at timekoin.orgI was great to catch up with everyone though, hopefully the story wasn't too boring. Maybe not as exciting as some had hoped. I still lurk around the forums   Someone did send me a message asking to come out and say hi.  When I get more time later, I'll put up a good long post about what has been going on all this time. As most can imagine, I try to avoid the the spotlight, although my name seems to come up in bitcoin articles from time to time. Overall, just like to keep my privacy. As I said though, when I get more time later I'll type up a nice long "what the heck has been going on" post.   As admin, they would have access to all, including that. Another good point of advice, don't brag about how much you have. When I saw a news story about bitcoin and the value was so high, they mentioned in the story that the person who had the most bitcoins in the world (270K I think) and I wanted badly to e-mail them and say that they were very wrong and that I had 100K over that, but I didn't because I don't want the media banging down my door or turning a watchful eye to thieves or crackers. I disagree with everything you said but offer nothing in return to dispute it in the spirit of your posting history.  I will say though you've certainly come to the wrong place to play pretend lawyer. I brought this up a long time ago, basically I called it a reverse-time attack. You generated a block chain with 2 PCs at the lowest difficult and wait until it over-takes the real block chain and then bring that block chain into the network. To get around the issue, the clients since had a hard-coded block lock put into place with every release. That way if someone did try this, the clients would see that the block chain history didn't match the new "fake" generated chain and refuse using it.The only reason that attack would work is, 1) you get a perfect 1 block / 10 minute generation cycle. This would eventually catch up with the real block generation because it can vary from 10 minutes to an hour sometimes 2) There was nothing in the software to say otherwise until the block chain locks were addedThe effect would be, you would wipe out all transactions and end up owning all the bitcoins generated with that fake block chain. But like I said, something to counter that was put into place long, long ago.   Good to know, glad I asked.  On my workstation, I was experimenting with all the different GPU miners. Some that you CPU mine and GPU mine and the total hash is much less. So far though, the DiabloMiner seems to be best one because I can CPU mine and GPU mine at the same time with a actual net gain with the two at the same time.Thanks for taking the time to answer my question, keep up the great work. While I like the idea of the first post, it seems like the only difference between this type of pool-mining setup and the existing ones is that the BTC generated at the user and then the pool decides how it's divided up, is that correct? It's one solution that sounds like something I saw proposed before last year, but I'll post the holes I've found in it in that topic rather than here. I was wondering when this topic would come up. Actually working on a solution for that care of bitcoin itself. Basically I'm going to use BitCoin to invest back into, well BitCoin.Working on a bitcoin data center as I type  
I read all 27 pages of this topic  Sorry if this is an obvious question,  no one asked as far as I could tell. Once you have the DiabloMiner connected to your bitcoin server, does the server have to be actively mining at the same time with the CPU or can it just sit connected the p2p network with everyone else in the world? I ask since I'm running the bitcoin server and DiabloMiner on the same machine at the same time. Works fine, without BTC being generated anytime soon in the near future, can't tell if it's working as it should.   I think in theory you can, if you spend some BTC on one, the others should update automatically. I'll have to test that to see what happens.   Tough call really. When mining clouds were rare back in my time last year, the cost was not worth it because the value was 1 BTC -> $0.001 almost.  But now, even though they cost much more to produce than the value, the long term investment makes it worth the cost now.I wouldn't look at a mega-rig as a short term lotto, but more like a long-term investment. If it cost $1k to only mine $500 worth of BTC, it doesn't make sense in the short term, but if a year from now that same BTC that you spent $1k to create was now worth $2k in value, then you have a good long term investment.So if you want to play the day-trading like the stock market, buy/sell BTC with the market wave. If you are looking for a more long-term investment, a mega-rig might be the answer if you are willing to take that long term risk. The rig could die early or it could hum all year and produce a nice vacation fund for the family.It's all about risk. Actually I had something better than a lawyer, I had a legal CPA Attorney do it for me. Truthfully, anyone can sue you for anything, but I'm not worried. LOL, how many seconds did it take you google that? Yeah, my sig is in no way connected to that wallet file.   Sure, go right ahead. The initial investors never got the concept really. When I first started, when 1 BTC was basically $0.0001, the idea was to generate/buy as many as possible, then use it for payments. So if someone wanted a credit card that could buy $100 worth of stuff, they would insert X number of bitcoins to get that value loaded on the card. To keep the bank current, the credit card would be backed by Bitcoins at the bank basically. They initially though that 1 BTC would never get above maybe $0.20 per BTC, at least that's what I go from them. So they invested about $12k to either generated or buy bitcoins for the first part of 2010.My part was to simply compile some versions of bitcoin that could run on the Amazon cloud service. They rented a ton of CPU time and basically generated BTC non-stop for a while. At the same time, I was buying from members here (they probably remember me buying a ton from them) and then funnel everything into one massive wallet file. After funds ran out, so did the Amazon CPU time and me bugging members to buy what they had generated from the start.Then things sat in limbo for a while, long while. The project went bust and the people I was working with really still had no idea how BTC worked really. Soon, the project turned into zombie status and the initial investors (remember these aren't technical people in the least) though it was worthless or maybe just a fade that was dieing a quick death. Who am I to argue? That's when I offered a buy out back in Feb of this year and they took it finally.I think after a few more stories make it in the news about the BTC value, they will kick themselves for sure.Either way, I'm keeping my BTC in several secure places and the wallet files I'll make sure never touch my PC for security reasons. I look at it as a retirement fund, when I finally get tired of working the 9 to 5 grind, I can tell my boss to shove it with a smile   Good news for me anyway   , they sold me the project for $5k to recover some of their cost. I now technically own the wallet files and other software I was working on with them at the time. For legal reasons I can't blurt out who the investors were or the banks, companies, etc. they were representing basically (unless I won't to land in court forever), but I think I made a wise investment. It's still going to take a while to get my wife on board as she still doesn't understand the whole BTC concept, but everyone here knows and I know what it means. She was really skeptical about my purchase this week.I'll probably take some of the backup advise here too, why have a few backup copies when you can have many on different media types spread around everywhere (all encrypted of course this time).Thanks for the advise everyone! Hehe  It's just going to sit at the bank for now until the investors decide what to do with it. The irony is, they think the project is a bust, so I've requested to take over ownership of it but never mentioned anything about it's current value because they have never bothered to check since last year. Can you believe all the "smart business" people that told them that BTC was just a waste of time for them? Shows how smart they were. Well, I do actually, but it would end up going to family members. I don't know if I would have enough to setup something as large as the Nobel prize unless it really did turn into a billions of value. Yes, the wallet file sits a (2) CD-R and (1) flash drive (was just curious how long that flash drive would stay good) in a safe deposit box at the local bank.  The wallet file on my PC is not the same one that has all the BTC in it for security reasons.  While it is fun to fantasize about being rich, I know realistically, the BTC would work better as a monthly paycheck than a lotto ticket. Oh, I'm still alive and kicking.  Yeah, still have them, though like was said, it would not be possible to sell them all at once and become an instant millionaire.  No one is going to buy that many at once. I have kept my client running 24/7 since then though, managed to generate a bit more before the collective mining groups took over  Without the massive server farm I had going before, I'm just down to my personal desktop, so it's never gotten over the 371k since.I do keep many, many backups though just in case   The old clients should accept it all the way back to the last snapshot of release, so this being found so quickly and so long after the last release, it should work in theory. Here's a good test of the theory   I'm chucking as much CPU at this as I can.  Yeah, bit of an unfair advantage I guess until everyone upgrades.  My wife's PC already generated 2 of the new blocks (LOL), luck is on her side I guess. Here's what I have:All of these have the updated blocks, all of them had the block chain wiped, reloaded old one, updated all versions to 0.3.10; I hope that is the right number so far?IP Address:12.53.130.10 - (Linux CentOS 5.5)99.59.167.147 - (Linux Mandriva 2010.0)64.186.154.76 - (Windows Server 2003 x64 Enterprise)64.186.155.104 - (Windows Server 2008 x64 Call Center Edition)As you can see, I like variety in OS I guess.  I've opened them all up to as many connections as they can take (with the undocumented connection option now), so I can kill two birds with one stone. Help restore the network and test part of the netcode   I'm working on upgrading my CentOS machines (have to custom compile for it), once I get them updated, they should be able to connect to as many clients as they want/can then. I've put the block number with the file, so you'll know exactly where each stops at.  BitCoinBlocks_Linux_67309.zipBitCoinBlocks_Windows_67300.zipI've leave them be. Glad to know I could help   Cool, works for me!   Yeah, a little confusing  So I don't need to create one, or do I need to take what you guys already have and just throw it up on the FTP?Can you dump block data from a windows machine onto a Linux/Mac machine?[edit] Just saw your post, I'll build one to less than 74,000 then, should at least save you technical people a few minutes of downloading the new chain.   Ok, good, I've relabeled the old block chain on my site, I'll try to get as close to that number as I can. Basically, I'm just loading up two clients, one with the old chain, another with the sorta bad chain at the end. I'm going to let the first client get as close to the number as I can before stopping it. Then snapshot off that block chain. Since it does about 500 at a time, I'll probably be able to get it close to 74,501
I can build a block chain to the desired number using a combo of the old block chain and a client with the latest block chain (minus the bad stuff), what number should I shot for? Not anymore, was shutdown on the last day of the month for July, all I have left are about a 2 dozen servers, but near nothing of what I had before. Oh, yeah, just noticed this topic. I can't remember when those block chains were snapshot, but I'll update it to be more descriptive (like block 64,000, etc.)Good thing I keep those around.  My web server sits on a fiber, so it won't be a big deal everyone starts to download those files at once (at least for the more technical people).[edit] Shutting down all the remaining servers and super-nodes I left running. Hope that helps. I did a quick test, will report back when I try it on more machines.Pentium E5300 Dual-Core 2.6 GHz (2MB cache, FSB 800MHz)Processor info: http://en.wikipedia.org/wiki/Wolfdale_%28microprocessor%29Stock = 2261 khash/s4-way = 1103 khash/s (64 bit)Pentium 4 - 3.0GHz (hyper-threading off) 1MB Cache, FSB 800MHzProcessor info: http://en.wikipedia.org/wiki/NetBurst_%28microarchitecture%29Stock = 1024 khash/s (32 bit)4-way = 658 khash/s (32 bit)Pentium 4 - 2.8GHz (hyper-threading off) 1MB Cache, FSB 800MHzProcessor info: http://en.wikipedia.org/wiki/NetBurst_%28microarchitecture%29Stock = 917 khash/s (64 bit)4-way = 747 khash/s (64 bit)If I didn't know better, I would say the key is the CPU cache size. Seems all the CPU that run slower have 2 MB or less onboard cache, where as the Core i5 starts with at least 3MB of onboard CPU cache. How will you account for latency and time hacking then? I'll bite.  How would you fix the algorithm? Ogg is used everywhere; games, audio players, movies, etc. Maybe not the best example. Depends on how fancy you want to be.If you go beyond a boolean, you could just append flags for any reason or function needed. This would leave it open to more functions rather than stacking a ton of booleans on the function as it's usefulness grows.sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]-tx_id : returns the tx ID of the receiving bitcoin address-dance : returns dance high scores-moon : return current moon phaseSo one would simply put insendtoaddress -tx-_id <bitcoinaddress> <amount> [comment] [comment-to]instead of sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to] true false true true falseif a lot of functions were added to it later. Just add a flag (like true/false) to the function with the default "false" so it works with older uses of the function call.Like sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to] [return transaction ID, default false]Sosendtoaddress 1FtDzyajiHKa9QbXiNxqztB 1.00 "Blah Comment" "Blah From" truereturnssent XYZ....Butsendtoaddress 1FtDzyajiHKa9QbXiNxqztB 1.00 "Blah Comment" "Blah From"returnssentAlso without having to break compatibility.I think it would be a handy addition. So how many independent legal advisors say that the other independent legal advisors are wrong? There are always at least 2 sides to the issue and you don't need to be a legal advisor to decide what works best.When they actually start winning some courts cases (last I checked years ago, they lost), then I'll put more thought into the issue. You are depending on something that no one know exist yet though. That's it's possible to create an army of CPU for less than it will cost to steal those millions. I'm sure botnet operators would fall into that category, but if anyone owns that much CPU power, they would make more money stealing from the existing electronic currency market (think global stock market) than trying to take control of bicoin. Plus you forget that we are still here watching everything, as this is an open source community. If you can get the entire community to remain silent for a global bitcoin conspiracy, then bigger problems are at hand than someone cheating bitcoin.Security through obscurity certainly isn't possible with bitcoin and that's it's strong point. Apples to oranges I'm afraid.That's like asking that we take the SETI data and apply it to Gene folding.BitCoin works off a Secure Hash Algorithm, so we can't throw gene data or radio frequency data into it and build a working chain of proof. You skip a lot of steps.It would be me saying "When people are tired of government, I should be able to take over the world". That's a social problem, not a technical problem.   Then I suggest, going to them and asking for license. Just like SCO will give you license for Unix still for some money. You want to send someone a payment for 10BTC and it puts up a warning "it's going to cost 1010 to send the BTC?"   Nope, no, and not yet. I've tried that myself, the clients just ignore it all.NopeNopeA lot of us have already attempted everything you've listed here. That's why we have a lot of security updates for releases  About the only thing that will make any of that work is having more CPU power than the entire swarm and the currently difficulty. Reverse time chains, slow DoS, fast DoS, swarm manipulation, wormholes, and time travel have all been tried so far. But if you come up with some unique, we'll be glad to try it. I've always liked the Mantis bug tracker, though it's not a GUI friendly/pretty, mainly just a down and dirty text driven model with colors.  http://www.mantisbt.org/ Older CPU that don't support SSE2 shouldn't be excluded from coin generation in my opinion. They can still serve a vital role in block generation; I have many machines that don't support the SSE2 enhancements, but still generate blocks all the time, even if they are only churning 300-400 khash/s Speed isn't really much of an issue since the p2p is for transactions and block data; not large files. Latency is probably a good goal; have a well connected swarm insures transactions are processed quickly and block data is updated quickly so clients don't lag behind the rest of the network.Mainly, he doesn't want home routers to get overloaded by the p2p part of bitcoin.At the same time, those that have bandwidth and CPU to spare can set a high limit (like 1000 or more) that just acts at a super-node for the rest of the nodes to connect through.
I do the see point because a non-SSE2 machine, the client would crash?Depends on which is easier really. If you enable something that is going to break compatibility, the only people who will feel the pain are the non-technical users of the client. From their perspective, it just doesn't work for some reason.I think some builds notes would be better, example (If compiling on a 64bit system, be sure to do this part).Have one branch of source that cross-compiles across multiple operating systems is always tricky business.   Not on 64bit linux, just 32bit and 64bit everything else in between (Linux/Windows)I didn't notice until I checked the generation dates against the release dates of the software.If you don't strip the debug symbols the binary is 8 times it's normal size. As far as I can tell, the supernode is just another node like any other, but has more connections to other nodes (instead of trying to keep around 8 or so). The only thing that offers is redundancy and faster coin spending. It won't speed up confirmations.In the first case, redundancy; just means all the nodes it's connected to will have at least one node that remains connected all the time. As people open and close their bitcoin client, your client is constantly losing and making new connections to other nodes. Being connected to a super node means it's just one less connection for your client to find if it has less than 8.Second case; it also works as a shortcut across the swarm if your client and the client that you are sending coin to, happen to share. So if you are 12 node points away from the person you are sending coin to, there will be a little delay before the transaction broadcast goes through. If both are connected to the super node, then it's less metric distance for the transaction to travel. So it might or might not allow faster transaction time, there are many factors to consider for that part (ping, real world distance, etc.)I think an unconfirmed third point is it helps the network maintain honesty among the nodes in regard to keeping every other node highly connected. Super-nodes are just really clients willing to connect as many nodes that will accept, network together. So it's willing to do a lot of work for the other nodes in a more active role than a passive role.They certainly aren't necessary for BitCoin to work, but they do provide a benefit and every little bit helps. Remember that Certicom's patent claim pertaining to ECDSA is still just a claim. I haven't seen anything that established them ownership of it since they filed back in 1999 and everything freaked out, but if anyone has an links to some hard court cases, that would be great.Otherwise, I wouldn't worry about it because since then, a lot of the world governments and big business already use this. I don't know how well they would stand in a lawsuit against the entire planet? This works for the 64bit builds, strange that it has no affect on the 32bit builds? Should it be disabled for 32bit builds as well? After testing the 32bit and 64bit builds, the problem I can confirm what was already posted here, it just affects the 64bit builds. When I go back and trace what's being produced, it's the 64bit Linux machines (the 64bit windows machines don't appear to have this problem) that aren't producing any coin since the latest releases. All of the 32bit builds (stock or custom) appear to be just fine. I'm starting to wonder if the two are connected now since the hashing seems to get stuck, maybe that's why it gets stuck on a block. Should be simple enough for CentOS, I was going to test it out first to see if those suffered the same issue, thought it seems like all the builds would suffer this issue if the compile flag is what makes the difference. I just tested it out, I get the same results. Repeating values with stock, more random values with the flag modification. Probably needs to be fixed for the next release, though I'm not sure how mine are generating anything then? It takes a loooong time to get up to that many connections (days) because it depends on how many other peers the other clients are looking for an open connection for. There is one behavior that I've noticed.Block sync stalling.When the client (be it Windows or Linux) has been running for a few days, *sometimes* they get stuck in block limbo. What happens is your client keeps trying to solve the current block and loses track of the entire block system. So as time goes by, other blocks are solved and your PC is still stuck on the same block. The problem is, if you stop and restart the client, it just picks up where it left off on the same stuck block. The only way I've seen to fix this is to delete the block chain so that the client will re-download it.I've had to clear out a few block chains for a few servers because of this, I'll notice they are stuck on block 70,000 for example, while the rest of the network is working on block 70,839 for example.That might explain why you go weeks without winning a block with a 24/7 PC going.The server farm I had running before were spitting out blocks all day, but now that I'm just down to a few dozen servers and the difficulty is way up, I barely see about 3 or 4 blocks a day spread across all of them. But I know the 0.3.8 version is working like it should, except for the occasional block freeze. I haven't had any problems with 0.3.8 release, generated some coin on windows and Linux clients (32/64)bit just fine this week. You would then have to rely on "for profit" companies to be the central authority for the new currency and how long would it take to generate the full chain even at a difficulty of 1.00? Maybe we need a big technical chart that documents every single step about how BitCoin works and the next time someone starts a topic about why everything in bitcoin is done wrong, we can point to that chart and say "here's how it works, document how your new process will work in detail and we will compare"  I think that would help to cut down on a lot of assumptions/disputes I see in topics every-time the issue of "this isn't being done right" comes up in this forum.Just saying....   I think it's already set by default not to "generate coins" when it's first installedHow would the connect default work? LOL    Ah I understand then, the answer is botnets can't forge currency because the swarm would not accept it. The only thing they can do is produce "real" currency at the expense of the stolen CPU time. Just like forcing slaves to mine gold will still net you real gold, just at no cost.The only known *practical* attack to bitcoin from a botnet would be to have more CPU than the swarm at your command and to use that CPU power to double-speed currency. So while that could possible fall in into the "forged currency" category, it's not so much to make fake currency as it is spending valid currency twice before anyone notices. Trust no one node, but if enough nodes are saying the same thing, then trust that.   A botnet is a stolen computer already, the concern people have is that it will take over bitcoin in some way. What you are talking about is what we already know. They use the stolen CPU time to generate BTC and then sell it on the market. It's stolen CPU time, we have no control of that. What we do have control over is how much damage it can do to others that are running honest clients.The system was designed with that in mind. That's why it uses a formula that forces anyone that participates in the protocol to behave or else they are ignored. So if anyone is going to game the system, they have to do it by the rules that everyone else is following. Right now, the only rule to game is CPU time. It's either expensive, donated, or stolen.That's the problem with having one PC generate all the coin, that one PC is a central authority of it and can price it anyway he/she likes. To de-centralize it means you need some way to force everyone to play by the rules or else one person will try to bend the rules.I respect that you don't agree with how it works, so I offer up that we be shown a better way that we can't all punch holes in. It's open source software, if there is a better way, it can be used. Currently the rules are why they are because the entire network is designed with "trust no one" but instead "trust everyone collectively". Ah ok, you track by new receive address, I understand now. I forgot you can generate an address on the fly like that with a label. Yes, I certainly want control from a website perspective rather than a client only.So one could generate label "customer_123" for address "<well you know, it's really long>" and which a payment comes in to that one address only for the right amount. It won't matter what send address the customer does/doesn't generate. It must be late, I should have seen that before  That's good to know because it can help integrate with the market sites to do currency conversion so one doesn't have to adjust the BTC prices every day to cope with the market up/down swings.Sent 10BTC for the help.  
Well *snap*, that's what it was. Sometimes I get my virtual machines mixed up, thanks! Sending 10BTC to you!For reference in case anyone else encounters thisCode:WXLIBS= \ -l Xxf86vm \ -Wl,-Bstatic \   -l wx_gtk2ud-2.9 \ -Wl,-Bdynamic \   -l gtk-x11-2.0 -l SM Put up a bounty for the faucet thief......hmm....   I think that's the issue you have though, you think it's inefficient and resource intensive on purpose when really it's not. No one is required to generate coins to use the system. If you click the generate coin list, you are basically volunteering your resources to strengthen the network and in exchange, you *might* get some coin for it. Since coin is in demand to use the system, someone has to generate it. If generation was as easy as "input how many you want, *bam*, you have 1 million now" it would make the entire system pointless. It's a chicken and the egg puzzle except there really isn't a puzzle here. People need bitcoins, they generate them at a fixed rate to make it worth spending the CPU time.There's no reason to think of it that way, anymore than the local barber is collecting hair to clone an army of super-men for world domination. You have to draw the line somewhere. If someone is going to steal electricity, targeting a 30 watt computer doesn't make a lot of sense.I have seen the topic come up here a few times "what if someone seeks to exploit this?" and the answer is the same over and over, it has been designed from the ground up to counter this exact concern. If you want to "game" the system, you need a lot of CPU power. CPU power cost money. The system scales itself to the available CPU power it has so if you bought 10,000 EC2 sessions from Amazon and started a massive bitcoin generating farm, you would never make more money out of it than what you put into it for long because the system would self-adjust against it. If someone throughs a massive botnet at it, the same thing will happen. The system is set for self-feedback, so to try to steal from everyone is to try to steal from yourself at the same time. I finally got around to compiling the 0.3.8 source tonight, but noticed it errors out wxWidgets when it didn't before. I did notice on the wxWidgets website that they have a new 2.9.1 release. Are the new versions of Bitcoin being written against the new 2.9.1 wxWidgets release?This the error I was getting in case anyone was curiousCode:/usr/local/lib/libwx_gtk2ud-2.9.a(monolib_displayx11.o): In function `wxDisplayImplX11::GetModes(wxVideoMode const&) const':/usr/local/wxWidgets-2.9.0/buildgtk/../src/unix/displayx11.cpp:195: undefined reference to `XF86VidModeGetAllModeLines'/usr/local/lib/libwx_gtk2ud-2.9.a(monolib_displayx11.o): In function `wxDisplayImplX11::GetCurrentMode() const':/usr/local/wxWidgets-2.9.0/buildgtk/../src/unix/displayx11.cpp:222: undefined reference to `XF86VidModeGetModeLine'/usr/local/lib/libwx_gtk2ud-2.9.a(monolib_displayx11.o): In function `wxDisplayImplX11::ChangeMode(wxVideoMode const&)':/usr/local/wxWidgets-2.9.0/buildgtk/../src/unix/displayx11.cpp:232: undefined reference to `XF86VidModeGetAllModeLines'/usr/local/wxWidgets-2.9.0/buildgtk/../src/unix/displayx11.cpp:242: undefined reference to `XF86VidModeSwitchToMode'/usr/local/wxWidgets-2.9.0/buildgtk/../src/unix/displayx11.cpp:261: undefined reference to `XF86VidModeSwitchToMode' Per the example, how would that process work with what you suggested? How are you going to predict what address they send payment to you as? I just checked the block averages, since the bump up in difficulty the average has actually be lowered to about the 6/hour target now (where as before it seem to be 10/hour and the difficulty was always climbing)Seeing how the new client is a lot faster now, seems the difficulty finally caught up with the CPU power out there. I wonder if the difficulty will go again in the next week or so.   From and Comment fieldsRight now, if you transfer from one address to another, well that's about all the info you get, client ABC transfered 5BTC to client XYZ.With IP to IP, it would be more like Client ABC transfered 5BTC to Client XYZ, and add extra data like "for a lotto number or stock buy or store purchase, etc."This would allow website operators to accept transactions with custom data that can be used to further process for other things.Example; I run a website where if you send me 10 BTC, I'll e-mail back a copy of an e-book. You could use the client "from address" field to plug in your e-mail so that when the 10BTC comes in, the website will know that it just got a payment and send the e-book to the return e-mail address automatically.Another use is payment documentation. I transfer 100BTC to XYZ person and put in a comment of what it was for "paid 100BTC for a new video card". It depends on your network layout. If you are using the entire public network, then yes you are depending on that time for the data to be processed by everyone else that is running a node. But, you don't have to do it that way. You can build a trusted node (like a server) and have your clients direct connect to it and let it do the fast verification for you.It won't net you 20 confirmations in a few milliseconds, but it will help stop double-spending as long as you remain in control of that node because it knows what is being spent. The whole double-spending issue arises from trust. When you are comparing anonymous seller to anonymous buyer, the only "middle man" for trust is the entire swarm (hence confirmations that neither is cheating)If you know you can trust your own node(s), then it reduces the likely-hood that double-spending will occur within your own trusted network. So if your example applied to an ATM like card for example, the bank (or whoever) would have all of those ATM machines networked to their own private node (or server) which would then further connect to the outside (Internet) for the rest of the transactions. So if you went to an ATM, withdrew 100 BTC (say the entire account only had that much), then moments later went to another ATM elsewhere and tried to withdraw that amount again, somewhere along that trusted chain would spot a double-spend attempt and basically report back no BTC left for that address.The whole verification process is how you put the swarm to work, all those clients are examining if your transaction was valid or not, but you don't have to wait for them to transfer the coin around. You can spend the coin around in circles all day without a single transaction verification. It's only when double-spending occurs does the network correct for itself and fix the balances.Banks already have this exact same problem. They all have their own networks that connect to other bank networks and it's just as easy to double-spend on their ATM as has been demonstrated at black-hat hacker conventions for probably 10+ years now. I remember reading about the issue back in 1997 because a lot of networks will still on dial-up then for banks and the latency issue was part of the attack because everyone had their own *database* that all had to inter-connect.With bitcoin, everyone is the database and banker and guard at the same time, so while it's not perfect, it's actually a lot better than what banks are using. Have you ever noticed at an ATM they have about 20 "network" stickers for all the different banks and setups that the ATM has to be compatible with? Hey cool, you can even see the generation and other transactions in it, nice   When the difficulty changed, the first machine in my group to generate a block was the slowest one running the stock client (800 MHz E-machine) and it hadn't generated anything in over a week itself. So I guess every little bit helps, that's so many are interested in getting this to work on their machine. I think though you are comparing apples to oranges. The coin generation is for currency creation. You don't need to generate any coin to use the bitcoin system. You can purchase it from many market sites or get some donated for free from other sites. The current minting policy is what makes it useful because a digital currency where everyone has unlimited amounts (or large starting amounts) just causes unnecessary starting inflation. The overhead for the currency is by design, otherwise if someone creates an *easier* system, it will be quickly abused. Since you can't make everyone play fair, you create something where it's nearly impossible to cheat by using math. To make cheating expensive instead of "easy" is where this system works. If it's more profitable to generate coin than to cheat it, guess which one everyone will go with? What if it had a flag for "secure/unsecure" transaction type, where one can have a password for static IP to static IP transactions and an unsecure mode that works like the default IP sending the GUI uses?If the address based transactions types could send the comments/from field like the direct IP to IP, that would be another reason not to really use the feature (except for testing)   My only counter is that it will seem that way to a first time user, because they have no bitcoins at all. But there are a possible 3.6 million bitcoins out there plus a member here runs a site that gives away free bitcoins so people can experiment with the system. The amount of actually energy, if you break it down, is only that of the PC itself. When you consider how few watts a processor runs to get a block where each 50 BTC block is worth about $3 USD, that's much more than the electricity cost it took to create it. Right now, you can generate BitCoins and sell them for more than it cost the electricity to run the PC to do it unless your electrical rates are the highest in the world. The only reason no one does is the scale of economics that would be required to make it profitable.The same can be said about gene folding or SETI since a ton of CPU time and electricity often does not reward the individual user of the their client software. It's the collection as a whole that rewards everyone in non-monetary ways (find cure for cancer, find aliens, etc.)Unless electrical rates go up higher than the value of BTC, there will always be people willing to trade out CPU resources for it. Currently, cheap VPS farming has a return on BTC generation, though not very much. The other benefit is that the generation rate tries to remain constant, so it's not always going be hard to generate BTC if less and less people decide to do it, the difficulty goes back down. A very good point, I hadn't thought of that. So if that's true, everyone should generate at about the same rate they did before since the bar was raised for everyone by everyone? Should be bitcoin getreceivedbylabel "Your Address" 0Your label must be in "" if it has a space in it and the next sytax is the minimum number of confirmations to count towards the total.So if that command spits back 10.00.... for example and you changed the last number to 4000 (meaning, only count transactions that have 4000 confirmations or more) then you might get back a 0.000... for example if you have no transactions with that many confirmations. Can't do that with the current state of the software    Way more than a few thousand I believe. I just shutdown a server farm last month of 300+ machines and the difficulty continues to climb, so there are a lot more people using it than what we see reflected at the forums here. If you run a supernode (not recommend unless you have gobs of CPU and bandwidth), you'll get a glimpse of how many machines are out there with the client running, my last count was 3,700 on one of mine. Confusing because I didn't know it was just "amounts" and not transactions. So in that regard it's still buggy because I have a system that I did a bunch of test transactions and yet none of the correct totals show up in the summary. If you run the GUI in server mode, you can throw server commands with it running at the same time to compare output and never match the GUI unless there is more detailed description about what output the function is suppose to give. Does sending 0.1 BTC a million times also create a single transaction? Where is the line when it goes from a single transaction to independent transactions?Can the line be moved down slightly? Any bad side-effects if it was? Ah ok, good to know. When I read over this topic, I saw some "example" outputs that didn't look that much different than what I was use to seeing, but now I see how useful feature really is, so it certainly has my vote.
Aren't the JSON-RPC commands the same as the command line, just ported over the http ? Both would return the same problem I believe. Well I guess it's time it got some attention  Dang, that's two things I have to put my list now, good thing it's open source!   Ah ok, does this new function also list individual transactions from IP to IP transfers? I took a glance at the source to get a rough view of what it's showing, didn't know it got into that much deeper detail. I have to agree with Satoshi, other than the extra field of "credit/debit" how is this different than getreceivedbyaddress & getreceivedbylabel? Can someone explain it to me better?My only beef with *all* those function calls is that direct IP to IP payments are never shown.  As it is right now, if I send a payment via IP to IP, I can't find it with those commands. I can see the balance is right, but I'm not sure where it came from because neither command will show me any info about the transaction. If listtransactions (or getreceivedbyaddress & getreceivedbylabel) could list IP to IP transactions, that would be useful.[edit] I see it will show generated coin, so that is useful actually. Also, the current getreceivedbyaddress & getreceivedbylabel seem to be buggy in which transactions they show to begin with. All I have is a CentOS bitcoind that was compiled with glibc 2.5, so it won't work on the system you listed.All I can say is that it took me all day to figure out the compiling issues for CentOS 5.5.Perhaps I should start offering compiling solutions for various Linux distros with BTC as the cost?   What version of Glibc are you using?Goto the console and type "ldd --version" it should tell you what your OS is using, post it back here. I might have a compile that works with yours. That's a really good idea, just make a queue system with a simple "click to approve" button.I don't know how much traffic the faucet site gets though, might not be practical from a human standpoint, but I don't often see the faucet that far below 500 most of the time. This has been going on for a while I would say. I noticed that when I would donate BTC to it, I would check the site a few minutes later and it would be back down below 500 again very quickly (but not further down since it appears to stop after it reaches below 500)I'm afraid with how the nature of Bitcoin works, even if you narrow it down to IP address, Bitcoin Address, cookies, browser string, etc. someone can still fake/change all of those to drain it.I think your recommendation of 0.50 with it being reduced to the 0.05 when it hits below 500 BTC would work better to deter this kind of thing. Also, a rate per hour limit (because someone with a botnet could have all of them descend on it and empty it even at 0.05 a piece just for kicks)It's obvious from your logs, the guy/gal was just renewing his IP address, generate a new bitcoin address, refresh the page, copy/paste new bitcoin address, send 5 BTC; rinse and repeat. There are builds that remove this limit, mainly for testing right now, I think that's why it's disabled until it can be tweaked a little more. Downloading the x64 DVD right now via BitTorrent, should be able to get a virtual box of this up within the day. Should get a x64 compile then for bitcoind when it's all done, I'm curious myself to see how it runs. $600 is a great deal for pizza I thought?   It should run, I was able to run it on their (cc1.x4xlarge, 23GB) CentOS Cluster even though it's not a x64 build, the x86 still worked for me. I didn't even need to install the full bitcoin, I just uploaded the bitcoind and ran it right from root  It was very expensive, $1.60/hour per "Cluster Compute Quadruple Extra Large" basically.I only ran a 1 hour instance just to see how it performed (too expensive to be practical) and I was checking the debug.log file to see what it was recording for khash/s.I wonder if a x64 build would run faster on that cluster than the x86 build?   Well, you could cheat I guess and copy the full blocks from another machine if you have one (Linux box) to see if it hangs or if it can continue from that point.That is really strange though, if anything the CentOS build downloads blocks faster than anything I've seen yet. I can download the entire block chain in a few minutes with this build. I've compiled an x86 version with the 0.3.8 source, can you try using that one? If you already have it, the only thing I can think of is have it start from the beginning by deleting the blocks and let it start fresh in case something was corrupted in the beginning. Yeah, been moving around folders to try and organize things. I have about a dozen virtual box now of many different distro so as I get time, I'll compile other releases and label them properly. I don't have a x64 build yet because I haven't built a x64 virtual box with Centos 5.5 yet  I did notice it works with CentOS 5.4, so I fired up an Amazon EC2 instance running CentOS 5.4 on 16 cores and loaded it up. After it downloaded blocks, it starting churning away on 16 cores, but only managed about 8,800 khash/s, kind of disappointing for an EC2 instance. I'll pledge 500 BTC for a good animated movie that has a laymen explanation of how things work, maybe a sprinkle of technical stuff about why it's safe/secure/etc.It can't be too technical, people's eyes will glaze over if it starts talking about SHA256 and p2p block chains. I've been running mine since I made the first post about where to download it.Everything seems to be fine and the bitcoind is using 100% doing coin generation at the lowest prioirty from when I checked topCode:knightmb@serverfarm528 32]$ ./bitcoind getinfo{    "balance" : 0.000000000000000,    "blocks" : 72169,    "connections" : 329,    "proxy" : "",    "generate" : true,    "genproclimit" : -1,    "difficulty" : 244.2132230923753}From what I can tell on your output, it seems to be hung at that block for some reason. When you stop the daemon and restart it, does it continue on then?If you want, you can try a direct connect mine with ./bitcoind -server -connect=12.53.130.10 to see if it's a build thing. I appreciate your concern; the current release version already limits connections to 8, this one won't establish hundreds of connections to a single client or node, it's just modified to allow hundreds of connections back to it from independent clients. I figured since I have the CPU and bandwidth horsepower, why not put it to good use for Bitcoin? I've posted the binary up here (32 bit only - bitcoind):Click HereThere are two versions, one built from stock code, the other modified to accept up to 1,000 nodes (hence the super node name)Will probably tackle the GUI client build another day, this one wore me out. Donate some BTC to my sig if you are feeling generous   Oh, but there's more!  Even after I did that, I couldn't get it to compile due to linking errors. I was able to get a solid compile of bitcoind though, this is the extra steps it took.After compiling and installing the BerkeleyDB4.7, you need to add it's include path to the makefile.unix Add -I"/usr/local/BerkeleyDB.4.7/include"Then you need to copy all the libraries from "/usr/local/BerkeleyDB.4.7/lib" to "/usr/lib"BUT WAIT, there's MORE!  Yes, and if that was not annoying enough, now it will fail to compile because of an OpenSSL error, Grrrrr..Now you must copy libcrypto.a and libssl.a from "/usr/local/ssl/lib" to "/usr/lib"Yes, those can be linked, but I got tired of chasing down compiler errors, was easier to just copy them.  After all of that, then you should be able to compile a bitcoind binary.I'm testing it now, seems to be working just fine. Downloading blocks and such. When it finishes, I'll experiment with some coin generation and coin transfer.I'm still caught on the GUI client compile, currently hangs atCode:/usr/bin/ld: cannot find -lSMIf anyone is good with Google, let me know.  
Ok, conquered the DB issue after pestering an Oracle developer all day  When you compile DB 4.7.25, you have to use an extra config command or else the compile will be missing those vital header files (why???)Anyway, here is what it wasCode:../dist/configure --enable-cxxmakeWhen you compile the source, this fixes the DB compiling related errors. I just saw that myself, I haven't had time to dig through all the links to see what the process is since the Administrators don't have a direct "contact me" button anywhere.   Interesting info, so other than some double-spending issues, as long as the block chain isn't separated for more than 100 or so blocks (or 16+ hours), it should be able to merge back to together without too many issues. So coin generation would probably be the only victim (if no double-spending cheats took place), or more technically, coin generation would be assigned to someone else that was generating at the same time as those that split off.If there a hard coded limit on split delay? Meaning if I had a small network split from the public network, spent some coin around, came back a few days later and got them sync up to the public network (other than coin generation if it happened) transactions should be fine? I'm probably going to load up a virtual machine of CentOS 5.5 and work with that. I've really barfed up the server I was experimenting on trying make it build the binary, LOL. Oh you mean official binaries in package form hosted by the Ubuntu folks? Just for kicks, tried to compile with DB4.8 got the same error, LOL (the line number was slightly different, but at the same class)Didn't get this on other Distros, might be a CentOS related error, but not sure why. I've built the client and daemon for Ubuntu 9.04 (should work in later versions ?)Not a package per say, but you can just download the current Linux release and just overwrite the binaries. Not perfect, but it will get a working version for you that way. Why not break it down to continent?   Yeah, the bitcoind build gets around any errors for those, but I still get stuck at the DB error.   I've been able to get around all of those, I'm actually stuck at the DB4.7 stuff.I build it directly from the source and during the compile I get an error:Code:db_cxx.h:1083: error: expected class-name before { tokenI checked the header file, I think there is a syntax error, but not sure.Any suggestions?This is the block of code it stalls at, the class is defined at the top of the file, so I'm not sure why it hangs at that error without digging through all the Berkeley DB code. I don't want to go to a newer version of the DB if it's going to mess with everyone's BitCoin database that uses this build.Code:// Almost any error in the DB library throws a DbException.// Every exception should be considered an abnormality// (e.g. bug, misuse of DB, file system error).//class _exported DbException : public __DB_STD(exception){public: virtual ~DbException() throw(); DbException(int err); DbException(const char *description); DbException(const char *description, int err); DbException(const char *prefix, const char *description, int err); int get_errno() const; virtual const char *what() const throw(); DbEnv *get_env() const; void set_env(DbEnv *dbenv); DbException(const DbException &); DbException &operator = (const DbException &);private: void describe(const char *prefix, const char *description); char *what_; int err_;                   // errno DbEnv *dbenv_;}; Ok, got around the encryption issue (guess it's never going to be part of the Cent OS library since they don't use that part of openssl), legal issues aside, just left with the DB issues during compile, so I'll need to compile a db4.7 version and hopefully we'll have a test build here soon. Apparently, even after copying over the header file; those libraries are disabled, grrrr.Guess I'll have to hack one together   My first obstacle is the missing ecdsa.h (Elliptic Curve Digital Signature Algorithm) file. It's listed in the man pages for CentOS, but missing from the package, WTF?Anyway, I guess I can copy it from somewhere else, hopefully I'll have some binaries for us all soon. Cool, actually a double-wham to the attack then because it's worth is better defined by how much CPU time it took to create it, thanks for pointing that out. Connect two PC together with the -connect=XXX.XXX.XXX.XXX command line to both machines with a fresh install, and both will start generating blocks from the genesis block and start building up the network again. Get enough PC going, you'll be able to keep the 1 per 10 minutes generation up to a constant level since the difficulty will always be a 1.000After a while, you would have a perfect block chain from to finish in which those two PCs own all the coin and with the constant generation rate, overtake the flux rates that are seen out in the public network (where one block takes 8,000 seconds to find sometimes, your little network is doing a constant block every 300 seconds, eventually it would catch up and surpass the real chain) Cool, we could both use a build then   Which version? I haven't tried to build any yet, but after building on a few different distro so far, kind of got the process down pat.  I've got a CentOS 5.5 machine I could experiment with. Exactly, you start at 244 for example and a few machines won't ever generate enough blocks to overtake the correct chain since it's being powered by thousands of clients now. It's located in the code like this. Basically, a block is picked (in this case, the last one was 70567) and the client checks against that point forward. So if you attempt to modify the chain along the way (as what I was doing) at some point, it wouldn't match up properly and the current clients would reject it as fake.The only attack would be to generate from the last snap-shop, but with the difficulty so high from that point, CPU time becomes too expensive.Code:    // Check that the block chain matches the known block chain up to a checkpoint    if (pindexPrev->nHeight+1 == 11111 && hash != uint256("0x0000000069e244f73d78e8fd29ba2fd2ed618bd6fa2ee92559f542fdb26e7c1d"))        return error("AcceptBlock() : rejected by checkpoint lockin at 11111");    if (pindexPrev->nHeight+1 == 33333 && hash != uint256("0x000000002dd5588a74784eaa7ab0507a18ad16a236e7b1ce69f00d7ddfb5d0a6"))        return error("AcceptBlock() : rejected by checkpoint lockin at 33333");    if (pindexPrev->nHeight+1 == 68555 && hash != uint256("0x00000000001e1b4903550a0b96e9a9405c8a95f387162e4944e8d9fbe501cd6a"))        return error("AcceptBlock() : rejected by checkpoint lockin at 68555");    if (pindexPrev->nHeight+1 == 70567 && hash != uint256("0x00000000006a49b14bcf27462068f1264c961f11fa2e0eddd2be0791e1d4124a"))        return error("AcceptBlock() : rejected by checkpoint lockin at 70567"); Yeah, the nice 19 is still half down from 0, so even though the nice level is 19, there are still -19 levels beyond that of prioirty. So while 19 is as low as it gets, your task running at 0 are not at the top of the priority queue.
That's what I was looking for. It's locked along the way with hard-coded hash values, that makes this vector of attack null.Glad someone already figured this out long ago and locked it in the code.It was a fun exercise in code review at least.   I think there was a post a while back that said the block chain was locked to say example:65,000 blocks in the new release client, but I haven't been able to find that post and didn't find anything in the source that suggested it.That would be a way to defeat this reverse time attack up to the point of the block snapshot. I'm not sure, I'm guessing no; if my experiment was any indication since the "real" network wiped out the "fake" network once they synced up.Think of like this, what would happen if you went back in time a few months with your client the way it is now and connected it to the network? Would everyone not see your client as "the longest chain, most up to date" and sync off of that? After testing this all day, this might be a real *theoretical* attack vector.But I'm not an alarmist, this is what it would take for it to work.Currently, everyone's client is trying to maintain a "1 block per 10 minutes" average and adjust the difficulty up and down based on how quickly blocks are being generated. The reason the attack *might* be possible is due to the fluctuation in block generation. Basically, it's chaos theory in action and this can be exploited.Example:Here are some recent block generation statsCode:   756 seconds to find block 71953  1485 seconds to find block 71952   252 seconds to find block 71951   592 seconds to find block 71950   226 seconds to find block 71949   310 seconds to find block 71948Average = 10.08 minutes per blockWhat my *corrupt* network will be doing is producing a perfect 10 block per minute chain, eventually (months) it will catch up with the real block chain and have a perfect start to finish block chain that is longer than the current block chain being used by all clients. I then take these *corrupt* clients and fuse them into the public network where they have a chain that is significantly longer than what is out there, but the math is perfect from block 1 to the end and by default all the clients will accept this chain, and then they spread it to the next and next, and just like a virus, this new block chain wipes out everyone.The key part is, as controlling the original PCs that made all those blocks, you end up controlling all the BTC in the system.This is a very slow attack and instead of attacking with brute force of thousands of servers, you "kill softly" with only a few PCs maintaining a perfect block cadence production over time.Thus an attack on *time* instead of CPU via chaos. The Trojan is the few PC that are growing the new corrupt network replacement.I'm going to check the current block chain to see if such an attack is likely, I'll report back my further findings.In the mean time, I'm not going to panic, I don't expect anyone else to either. I have a definitive answer for you all.I built a test network on 5 computers, each running the client stock (fresh install) and had them all network to each other. They generated blocks all day (it's easy when the difficulty is 1.000), and after some transactions between them all (built up to 50 blocks doing this), I then connected them back to the "outside" world and as soon as they got in sync with the network, all the generated coin and transactions were wiped out and replaced by what is current on the network now.So to answer your question, if the network is split and merges days/weeks/years later, whoever has the longest block chain (most CPU time) will win and the previous block chain will be wiped. When I tested that, the other clients would ignore the one that decided to generate 1000 BTC a block for example. It would be a very slow attack, but basically you grow a block chain with a small private network that is actually churning out blocks every 10 minutes (clients tweaked to go it exactly so there is never a change in difficulty) then after a lot of time (months), you'll have a organic chain that will eventually catch up with the real one and surpass it since the real chain flux around on block creation.What you are doing is cheating the time within the real block chain to eventually surpass it with a chain that always has perfect expansion. It follows the rules of the protocol and thus when finally introduced to the clients would appear to be a perfectly valid chain from start to finish, except you would literally have 99% of all the bitcoins from your private network under your control. 0.01 for doing a transaction at your PC I would imagine, came from someone else I think. I was able to build a dev box with Mandriva 2009 & 2010 and a few tweaks were needed to get a successful build.Mandriva 2009 box gives you builds with Glibc 2.9 (good for those on older distros)Mandriva 2010 box gives you builds with Glibc 2.10 (good for those on last years distros)Think of these as "find & replace" for the default build instructions contained build-unix.txt file that comes with the source.Mandriva 2009 & 2010 Dependencies (packages for easy install)makegcclibgtk+2.0_0-devellibopenssl0.9.8-devellibopenssl0.9.8-static-devellibdb4.7-devellibdb4.7-static-develBoost 1.4 & wxWidgets 2.9.0 instructions work fine from the build-unix.txt file.You will need to make one modification to the "makefile.unix" included in the source.-- Add -I"/usr/include/db4"to the end of the INCLUDEPATHS section at the very top so that it reads something like:Code:INCLUDEPATHS= \ -I"/usr/local/include/wx-2.9" \ -I"/usr/local/lib/wx/include/gtk2-unicode-debug-static-2.9" \ -I"/usr/include/db4"Afterwards, you should get a solid compile. Works on both the 32bit and 64bit Mandriva 2009 & 2010 releases. I wanted this to be somewhere searchable so that it could be found by anyone that runs into issues using a Mandriva dev box to build the program from source.Enjoy! I would say everyone connected to everyone (first option) because the one big node that has 1,000 other clients connected through it is great for redundancy, but also gives a good central point of attack. It's easier to attack a single node than to try and attack them all. I've been running some experiments with some isolated BitCoin clients to test for bugs or security issues. So far so good, haven't found anything worthy of discussion here, but I did come across a thought experiment, I figured I would put it out for discussion.I understand how the core of BitCoin prevents cheating, basically you take the network combined CPU power to generate a chain that rely on math principles to prevent someone from trying to cheat due to that person needing more *corrupt* CPU power than *honest* CPU power out on the network making a direct attack against the block chain too expensive or difficult.Has anyone thought about what happen if instead of attacking the block chain or math principles that build via CPU time and instead attacked the time itself as a way to produce a *corrupt* chain that could be fitted into the existing clients without needing to defeat all the CPU time it took to produce it? Instead of trying to throw as much CPU power at building a corrupt chain, you instead focus on cheating time to build a corrupt chain?Would an attack like that really be something to worry about? I can already tell you, it has almost no impact on the CPU, it will shave off some khash/s, but the big difference is bandwidth and memory.When running the program by itself (8 connection limit), you'll use between 16 and 28 MB of RAM for the program, 300MB a month for bandwidth (24/7 operation basically)When you run *nearly* unlimited connections, the memory usage jumps up to about 128MB of RAM, bandwidth usage also jumps way up as well to where you are using 100MB in a day instead of a month.Truthfully though, for a "super node" as you've now coined it   it's not really that hard spec wise for any server to handle, my old celeron server could easily handle this kind of load if it was shaved down to just a few thousand connections. Exactly why a good count would be difficult as it currently is setup. I could have hundreds of clients behind a node and the outside world (Internet) would never know from what I know about how everything works. The connection limit is just a suggestion, you can connect more than 8 clients even without a custom compile. The limit was setup to prevent a home PC from making thousands of connections and overloading "generic" home routers that can't handle that kind of connection state table. Think of the 8 limit as more of a soft-limit for sanity reasons for the typical user of the program. Maybe not official, but I compile my own BitCoind to run unlimited connections (well, in theory I set the limit for 65535)As of now, I have about 7,100 connections going, so I would assume *at least* that many nodes are out there now. I'm running an experiment to give everyone a more definitive answer.I have two fresh PC each running the BitCoin client (new install, no blocks, transactions, etc) and they are only network to each other. I'm having them generate coin against each other.I think that if such a large network split did happen, it would be from the client standpoint (basically someone would compile a client that uses a different bootstrap method, so in essence you would have a "new" bitcoin chain that would forever be separate from everyone else). Are you looking to save up to buy other things or just need some BTC to experiment with? Not easily because it would entail finding out what "blocks" everyone else has. Since everyone is working off the current chain, if you did find a client with "another" chain, it would either be silly short or hacker longer. It is possible to run an experiment just to see what happens. It would take 4 separate clients though running at the same time (probably help to have 4 different PC to do this)Basically, take a fresh install of 2 PC, have them only connect to each other and let them generate blocks starting at 1, build up some coin, transfer between the two in a few transactions, then shut them down. Do the same thing on 2 different PC, build some coin for longer (more blocks), transfer some coin around, shut them down. Then fire up all 4 at the same time and have all 4 connected to each other and see what happens when one pair had a longer block chain than another.My guess is the longer block chain will win and the lesser of the pair would lose all of their history/coins.So if this was on a much larger scale (east vs. west), then whoever had the longest block chain would win once the networks started to merge back together.Thinking about that thought experiment, one could run their own internal micro-payment system for fun   Since I didn't find a forum post or wiki on this (I probably should add to the wiki), I've compiled a static help file, figured it would be useful for everyone here doing a lot of work with bitcoind. Some are obvious, but other's didn't have a full description.getaddressesbylabel <label>Returns the list of addresses with the given label.getbalanceReturns the server's available balance.getblockcountReturns the number of blocks in the longest block chaingetblocknumberReturns the block number of the latest block in the longest block chain.getconnectioncountReturns the number of connections to other nodesgetdifficultyReturns the proof-of-work difficulty as a multiple of the minimum difficulty.getgenerateReturns if the server is generating coins. Returns true or false.getinfoReturns the server balance, blocks, connections, proxy, generate, genproclimit, & difficultygetlabel <bitcoinaddress>Returns the label associated with the given address.getnewaddress [label]Returns a new bitcoin address for receiving payments.If [label] is specified (recommended), it is added to the address book so payments received with the address will be labeled.getreceivedbyaddress <bitcoinaddress> [minconf=1]Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.getreceivedbylabel <label> [minconf=1]Returns the total amount received by addresses with <label> in transactions with at least [minconf] confirmations.helpReturns list of available commands.listreceivedbyaddress [minconf=1] [includeempty=false][minconf] is the minimum number of confirmations before payments are included.[includeempty] whether to include addresses that haven't received any payments.Returns an array of objects containing:"address" : receiving address"label" : the label of the receiving address"amount" : total amount received by the address"confirmations" : number of confirmations of the most recent transaction includedlistreceivedbylabel [minconf=1] [includeempty=false][minconf] is the minimum number of confirmations before payments are included.[includeempty] whether to include labels that haven't received any payments.Returns an array of objects containing:"label" : the label of the receiving addresses"amount" : total amount received by addresses with this label"confirmations" : number of confirmations of the most recent transaction includedsendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]<amount> is a real and is rounded to the nearest 0.01setgenerate <generate> [genproclimit]<generate> is true or false to turn generation on or off.Generation is limited to [genproclimit] processors, -1 is unlimited.setlabel <bitcoinaddress> <label>Sets the label associated with the given address.stopKills the bitcoind process
Is it a AMD only optimization perhaps? I can tell you from personal experience, you are better off buying them in the market than generating them now due to the growth of the network clients and the current difficulty level makes buying server time no longer economical. Perhaps if a stable OpenCL client comes out  I've got 7 year old celeron machines generating blocks, so speed isn't really king for coin generation as much as just luck and having a lot of systems to try   Similar to like a phone card for those pre-paid phones. You get a card for $15, $25, etc. amounts. Wal-mart *activates* the card by swiping it like a credit card, then those jumbled random numbers on the back are active to transfer X amount of BitCoins to whichever address you specify.This allows you to buy the cards with cash (no credit/debit trail), but the only issue is really, how many BitCoins do I get for $1.00 for example? That's where the tricky part lies, I'm going to have to poll as many market sites as (they) will allow me to (talking with others about it) to get the conversion rate. So while it's possible that if you buy a $10 card and redeem it that day for more bitcoins than you would have got the day before, the key will be to make sure people understand that when they buy it. So they can buy it has sort of a investment or spending currency if they like.It's certainly going to be easier to sell them that way to the giants like Wal-mart than to convince them to take BitCoins as payment. As time goes on though and things expand, who knows what the future may hold. About the closest you'll find so far is me, as part of the greater Nashville, TN area. Instead of wasting with them (they do frustrate me sometimes), why not create a new article at a more "friendly" place likehttp://en.citizendium.org/wiki/Welcome_to_Citizendium Actually you guys kind of stumbled upon part of the project I'm working on with a bank. Basically, (as was said with paypal, credit cards, etc.) you have to pay a loss to get BitCoins in and out of conversion. Part of what I'm working on is what you guys describe, go buy a BitCoin "card" at a store, redeem it online to have the BitCoins transfered to your account to purchase with, pay bills, etc. Instead of wasting with them (they do frustrate me sometimes), why not create a new article at a more "friendly" place likehttp://en.citizendium.org/wiki/Welcome_to_Citizendium I would post up the compile log in the Development & Technical section, might get more help there. I've started the undelete request here:http://en.wikipedia.org/wiki/Wikipedia:Requests_for_undeletion#BitcoinIf anyone wants to participate, just edit my undelete request and add more reasons why you think it wasn't fair to delete the article. Can you put it on the main site in a box somewhere, kind of a like a mini-dashboard?   Darn, it means the next release, the difficulty is going to have to increase to 1000 or so to keep up, LOL   You should see the face my wife makes when she sees me typing it  First thing she said "What hell are you guys talking about"   If someone started a new chain on the "production" network; it would have to be longer than the current chain. So given how much CPU time it took to generate that one, I don't see anyone trying to start a new chain anytime soon. Awesome, I'll have to give it a try myself then.   Oh, ok, that makes more sense now. Didn't know that was being compiled on Ubuntu 10.04, I was thinking of everything from a Ubuntu 9.04 point of view.Well for me, the libboost1.37-dev was all it needed on a Ubuntu 9.04 box to get a 64bit compile. Seems I'll just need to keep a bunch of virutal box for each one to avoid distro confusion when compiling   I take it that you've already tested the hash limit before performance starts to suffer against the stock code? I'm just curious myself. Basically a specialized bitcoind that the buyer sends a payment to and when everything is good, the buyer sends a special "all clear" message to that server that then knows to "release" what it has to whoever it's suppose to go to.Programming wise, should be possible with direct IP payments for example, where the "From" and "Comment" fields can be used to "reserve" the BTC until later.One could send a transaction and in the comment field put something like "Escrow=<public hash of seller> Amount=1000.00 Release=<some encrypted string>".When the buyer gets the stuff and he/she is happy, they send a 0.01 payment to the same escrow server "Escrow=<public hash of seller> Amount=1000.00 Release=<some encrypted string>" and the server sees the match, knows it's ok to send payment to that address, for that amount, etc.Very doable from a programming standpoint. Find more info about this here: https://www.bitcoin.org/smf/index.php?topic=643.0 I have a 64bit compile of the linux client bitcoin up here that I just finished. All the debug symbols are stripped as well so the file isn't 60+ megabytes in size.Test at your own risk (like me right now)64bit Build Only - Client only (bitcoin)http://knightmb.dyndns.org/files/bitcoin/bitcoin.tar.gz64bit Build Only - Daemon only (bitcoind)http://knightmb.dyndns.org/files/bitcoin/bitcoind.tar.gzCompiled on a Ubuntu 9.04 box with Glibc 2.9 (so those running 2.9, 2.10, 2.11 should work with this)[edit]New version has come out since then, so those links are valid not anymore.
That part I highlighted is what got me. You can't install all the libboost packages with that command (I tried to cheat with a * also), but part of my issue is I took it too literal like install *everything* that had to do with libboost, LOL.Really, all that was needed was the libboost1.37-dev package and that made all the compile errors go away. Everything else worked out just fine as far as compiling your own wxWidgets, compiling Boost 1.4, etc.So that last command should simply besudo apt-get install libboost1.37-devOn a side note, I compiled mine on a Ubuntu 64bit system, so the finished program came out 64bit aware. I'm testing it out on some 64bit systems to see how well things go. Victory at last, finally installed enough files to compile, LOL.But then, I just noticed a 32bit build on Ubuntu 9.04 was just put up, haha. I can only imagine the pain you went through to get these builds because I'm trying to build the program on a Ubuntu 9.04 box and so far I can't seem to find all the dependencies to compile no matter how much I keep installing packages and compiling source, LOL. Is there a blanket command with apt-get to install everything that has to do with libboost without it error out on package conflicts? I tried to cheat with a "apt-get install libboost*" but it just complains that it's not possible due to conflicts (which I understand since I can't install 2 versions of the same thing at the same time). That's what I'm hoping for as well, between compiling from the website then downloading another hundred megabytes worth of files anyway, hehe. As far as I know, but I finally got past the wxWidgets problem (typo in a command while installing, grrr)I've finally landed at the libboost-dev-all package to install, but it's not found in the Ubuntu repository for some reason? I guess I'll just install anything/everything that has to do with boost-dev    Yeah, I'm following those to the letter, but I think that's my issue is, there might be a step missing because when compiling bitcoin, the errors point towards something else missing in the wx2.9 stuff (maybe an additional step) necessary. I think I'm close to figuring it out, if I do, I'll be sure to post it and hopefully have the text updated for future people to avoid any frustration   I've built a Ubuntu 9.04 box and the irony is, when it finally came time to compile, I get the same errors I got on my Mandriva box.So I'm stuck at the wxWidgets again. I guess I'm not understanding what my wxWidgets issue is. I've downloaded the 2.9 source directly from the website, compiled and installed without any errors. When it comes time to compile bitcoin, it just throws up a ton of wxWidget errors, too long to really paste here.Has anyone done a successful build of Bitcoin in Linux, if so I'm curious to which Distro you were using? Thanks for the help, I did finally get past those errors, got hung up on the wxWidgets even though it's installed exactly as the instructions showed, I don't know enough about wxWidgets to troubleshoot the error.But I'm building a Ubuntu box on the same setup (well older version) of what the program is being compiled on for release here in hopes it will speed things up for testing rather than troubleshooting different distro builds. I'm going to take the easier route, found a virtual box of Ubuntu 9.04, so I'm going to fire one up, go through the instructions again and see if I can compile a version that isn't using the latest glibc library for those of us on old distros   That seems to solved the problem, but now it hangs on the wxWidgets 2.9 with a screen full of "undefined reference" errors in the for the displayx11.cpp files.  I think I might have an easier time compiling on the same Distro that he uses in a virtual box rather than have hunting down all these errors. I know I've seen this topic a half-dozen times (can't compile), but after spending hours hunting down source and compiling every piece of software listed in the build-unix.txt, correcting path errors in the build files, etc.  I still can't get the program compiled on my Mandriva 2010.0 box, LOL.The error it hangs at is:Code:/usr/bin/ld: cannot find -lboost_systemcollect2: ld returned 1 exit statusmake: *** [bitcoin] Error 1The program is there, but I'm not familiar enough with how the boost software works to fix the error. If anyone has any feedback or ideas it would be greatly appreciated. I would like to catch up with everyone else on the Linux client front, but I won't be able to use the new version until the next release that supports Linux builds not using bleeding edge software   Quite simply to level the playing field for coin generation and to help maintain block generation at a stable rate. If everyone was limited to just 100 khash/s by the client, someone would just compile a client that does not have the limit and load it up on a server farm where they could generate 10,000 khash/s per machine. It would put the coin generation supply in the hands of who ever had a large amount of money to invest in servers and discourage everyone else from trying to mint coin. If we could trust that clients would only act as transaction nodes and that everyone would get a fair shot at coin generation then no one would care if the client was generating at 5 khash/s all the time.So in a perfect world, no one would care that they can generate 2 or 3 times faster than someone else, but we don't live in a perfect world.   I was going to compile a GLIBC_2.10 version until I noticed that I had to keep installing more and more to get through the check errors, LOL. Looks like I just need to fire up a Virtual Box with all the dev packages loaded to do this in a virtual machine to make life easier. I would agree, would help those of us not on the bleeding edge of distro packages.   Ah, mine is linked to 2.10.1, I'll bring my system up to bleeding edge to see if that solves it  [edit] Well turns out I can't package wise as they top out at 2.10 for now That's good to know, might just need to update mine, checking to see what versions I have currently installed. Still a no go on the Linux build though, this is the console error I get. I checked to make sure the file was there, but the versions don't match I guess?64bit Client Error, will try out 32bit client and see if the error is similar.Code:./bitcoin: /lib64/libc.so.6: version `GLIBC_2.11' not found (required by ./bitcoin)The machine I tested this on uses nothing but the stock builds, no modified builds were used prior.Same error for 32bit clientCode:./bitcoin: /lib/libc.so.6: version `GLIBC_2.11' not found (required by ./bitcoin)Linux - Mandriva 2010.0 [64bit and 32bit] OS systems setup Tested the Windows build across XP, 2003, Vista, 7 (both 32 and 64bit builds), no issues installing or running client. So far so good, looking forward to the Linux client.   I think changes have been committed now.
Both can work, but a members forum would help to keep out the noise; otherwise everyone will end up messaging the lead developer with every possible thing they here in the news and end up taking his/her time to filter it out on whether it's really a risk or not. Since we mostly communicate by forum here, the closest would be a member group that has access to a special forum here just for that issue that the public can't normally see. I'm fairly certain the simple machines forum supports that feature? In this forum, I don't see why not. Basically, the implementation bug means that the client wasn't following it's own rules. Someone may have found a way to double-spend coin for example that the Client doesn't catch because of how it processes the rules to counter this kind of action. Yes, I've tested on Windows XP, 2003, and 7 all went through just fine. You'll enjoy the speed increase as well.  [err, wait I guess, new version about to spawn] I think you'll be ok, it blew up on me too. Run the older version, you should still see all your coins. Backup first for the next Linux release   So far, the new build (stock) has given a 100% speed increase on my Celeron Machines that couldn't run those custom builds before. I'll compare the new release to the older *optimized* builds to see what the speed difference is just out of curiosity.   I appreciate the quickness of this security update, but unfortunately none of the Linux builds work (32bit or 64 bit) because the file is missing. I'm assuming if I go find the file it will work, not sure what luck others will have though using the new build.ErrorCode:./bitcoin: error while loading shared libraries: libjpeg.so.62: cannot open shared object file: No such file or directory Well it's good for me, I can change images around as needed. Your optimizations have actually made a bunch of old Celeron machines I had able to do almost 500 khash/s now when they could barely squeak by 100 khash/s before. I need to send some more BTC to you so that it covers the *acceleration* tax now   [payment sent] Well this certainly blows away my Linux machines now. I hope these kind of optimizations make it into the Linux builds on day.   As far as I know, the client will keep track of it properly, you just won't be able to spend it because the lowest the GUI allows is 0.01 so far. Yeah, works well. I'll let it run on a few servers for a while to see how stable it is.At this rate, we'll all double the difficult again just because we keep getting clients that double up over and over on the khash/s   These builds now out-pace my linux machines on similar hardware, very impressive! LOL, no I was the one who sent about 3,080 times that much   Yeah, a block is being solved every 10 minutes or less, it shouldn't take 2 hours unless the client has somehow lost connection to the rest of the network. The longest I've seen on a windows client was under a 1 minute to start updating blocks. The latest client downloads about 500 at a time before verifying and moving on to the next 500 batch.I have to agree, 15 minutes of waiting does seem a bit excessive, especially since 8 connections is just the max, not usually the requirement for it to work. It's possible the clients it was connected to were slow or were having issues and you had to wait until your computer moved to other clients that weren't so slow. It's tough to make a sliding scale where one range doesn't overlap another unless you make a huge chart, so for the math to make more sense I changed the numbers around a little at the end. Yeah, I noticed a lot of those sales were going to the same e-mail address over and over   I'll be glad to offer up services. Contact me by e-mail or message system here.==== Range ========     Fee1 BTC - 10.99 BTC ;;           0.25 BTC11 BTC - 50.99 BTC ;;         0.50 BTC51 BTC - 100.99 BTC ;;       1.00 BTC101 BTC - 500.99 BTC ;;     2.00 BTC501 BTC - 1000.99 BTC ;;   4.00 BTC1001 BTC - 3200 BTC ;;      8.00 BTC3200+ BTC ;;                      0.5% of amount (half of 1%) Same for me, I had a set budget by the investors and doing another month of servers at the current difficulty just isn't economical anymore when I can buy it from the market/members here for much less now. On top of that, the amount gathered should be more than enough to start with. If things take off, then it just means everyone's BTC will be worth more since I'll have to raid all the market sites again.   It would certainly be hard by both luck and CPU/storage power to do this.If you found a collision and a private key, that would do you no good since you would have to peg an account out of the541,638,008,296,341,754,635,824,011,376,225,346,986,572,413,939,634,062,667,808,768 possible combinations of people using accounts.So look at it two-fold. I find a collision in the hash and I find the private key. Now I have to hope my odds are that someone else is using that hash. Since there are more possible hash account numbers than every person every born on this planet and was each using a million addresses, the attack by it's own nature, while interesting, just isn't really feasible on a large scale. Same experience for me, plus I've generated coin with these builds, never had any trouble transferring it around or spending it, so the experimental builds are following the Bit Coin protocol properly like the rest of the *release* clients out there.
Machines from about a dozen different hosting companies around the US here. Basically, each machine rented for between $19 to 50 a month, so this is the last month for their rental and the next month we won't be renewing the rental. I did try some Amazon cloud machines, but they ended up being nearly the same speed as the other servers we were renting for the price. I could rent a Amazon instance for about a $1 / hour to churn 10,000 khash/s but then I could rent a server from another hosting company for an entire month for $19.99 and it could churn close to 7,000 khash/s so using Amazon didn't make economical sense; an entire day of hashing was the same price as an entire month of hashing at another hosting service.There were some special machines that were rented from some hosting centers in GA that had a lot of cores and mainly we used idle time (since it was cheaper, it would really burn up the khash at night when the server load was nearly non-existent)And then course, just go out and buy the Bit Coin through the market place and members here   (thanks to everyone willing to part with their BTC for USD)Overall, the server farms only churned out about 1/3 of the total, the other 2/3 was bought over the last few months from members and the market websites. Some members here even gave me a large chunk at no cost simply because they were early adopters and didn't know what else to do with large amounts they had generated early on. So it paid off for me to try and contact all the early adopters of Bit Coin. A side point, it's now a lot more economical to buy them off the market/members than it is to generate them. So as this month ends, all the server time that was being used will be slowly fazed out (as it has been for 1 week now) and the difficulty still continues to remain high so interest in Bit Coin continues to remain high around the world from what I'm seeing.In case anyone was curious, the servers were made up of about -330- 64bit ( 8 )-core Xeon processor systems that all ranged from Linux to Windows along with another 20 special systems that ranged from 8 to 64 core systems running various flavors and windows and Linux. After the end of this month, it will just fall back to a half dozen 8-core servers to keep the daemons running for testing and keeping the BitCoin network going of course  A month of running all of those servers 24/7 produced a lot of coin of course, but it's been a better process just to purchase it (and faster, less maintenance) and now with the difficulty much higher than it was last month, it's more economical just to buy it from the market sites. So unless the difficulty falls back down below single digits, I'll be glad to not have to worry about monitoring that many servers in the future.   The same could be said about any currency or object, but to come to the forum to ask for advice, expect to get plenty of advice. The test network is there to test and if anything it would be the best place to start. You would want to move up to more production testing later on once you are certain that the test is doing what you want it to do and NOT what you want it to do.You can't test for something looking for a certain result and end up getting 20 other results that you didn't expect and have no idea why they are being produced until each was examined later on.You could always build you own network with the -connect=xxx.xxx.xxx.xxx option to make a private network of actual release version BitCoin clients and try to blow it up that way.   I would say no to all questions because quantum computing is not like a magic converter. If you have a working quantum computer, you won't be able to feed in BitCoin hashes and spit out Private Keys. I think it would fall under the hashing collision topics here more than trying to factor large integers. While the media makes quantum computers seem like they will operate like a 1 Trillion MHz processor, they actually operate in a specialized way that is kind of hard to explain in terms of computer science. As far as I can tell, nothing else has been done. Seems to only work on a few select Mac at the moment and even then appears to be a little unstable. You won't lose your balance, but it will have to start over. It already starts over each time a new block is found, so at most you'll lose a few minutes spent on the previous block. All possible coin should have been sent.On a note, NoAgendaMarket, I sent yours to the address you had in your signature since there wasn't any address in your ticket entry.If anyone thinks I missed sending you the split of the winnings, just let me know. Winning  Number was 217 and well, someone missed it by one number, but that's ok, because it just means everyone won!  There were 189 tickets, so the jackpot was 339 BTC divided by all 189 tickets giving each ticket 1.79365079 BTC or for rounding purposes, it will be 1.79 BTC and the remainder after everyone gets their share will be given back to the Bit Faucet site.I'll start sending back Coin right now, so everyone should expect it to arrive shortly. I'm doing the entries as they came in, so don't be surprised if you get several payments for all the times you entered. I'll attend if my schedule works out, would be interesting to see what topics are chat about.   When you think about the number of possible hashes and hash collision; it only becomes a problem if the collision you find (if by accident or on purpose) actually matches someones account. If everyone person on the planet had a BitCoin address, your odds that a collision is going to be someone's account is still so small as to make the use of it impractical.When you can target a specific BitCoin address with the collision, then it becomes a problem. Otherwise, you're likely to end up with an account that has only 1BTC in it or no account at all. Download Page Here: http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.3/ I've never seen that on mine, it blows up silently. I think it's because I have the "error reporting service" disabled so that the box never comes on my servers. I thought the SSE2 mode would just be for those those with processors that support it, so far the release client runs just fine on older PI, PII, PIII machines, just very slow on the khash/s part. For example, a PIII 933MHz Linux machine can muster about 125 khash/s, some old 1.1GHz Celerons I have can reach 172 khash/sI wouldn't want to exclude those that have older processors from at least trying to generate coin, hehe. I've got some older machines (for the windows client and linux clients) to test with that don't support SSE2. Mainly if you try to run them, the program just crashes when I tried some of the experimental builds here, but I'll be glad to test some future official builds to see if the "detect SSE2" part works or the program goes belly up. The difficulty never went down after his *attack* was done, so I have just as much evidence that I'm the one who raised the difficulty rate as he did. My opinion is that the influx of new users is what raised the difficulty and he was just using that as a cover to get himself attention in some way.You'll find a more detailed opinion on this page https://www.bitcoin.org/smf/index.php?topic=431.60 near the bottom, look for my long post. The noon deadline has passed, I'm certain we will have a winner today! (You or everyone, hehe) I've run into perhaps a client issue, I'm not sure.When someone sends a payment from BitCoin address to BitCoin address, you'll always have a return address if you need to refund for example.When someone sends a payment by IP address, if they leave the from field blank, BitCoin fills in the BitCoin address, but if they fill in anything else well you have no idea where the payment came from.Case in point, while running a small lotto in the Marketplace forum area, I had someone send some Coin and ticket picks, but they forgot to include the return address and had some other comments written in the "from" field. So I'm not sure how to find how what address it came from. I've tried digging through the log files, but didn't find anything relevant.If you send payment direct from IP to IP, the BitCoin address is recorded somewhere right?If not, then a feature request would be way to find out (maybe when you double-click the transaction, it brings up a summary screen, maybe include that in the summary screen)Feedback welcome or if someone knows where this info is and I'm not finding it.   I've updated the jackpot and picked numbers. Just 3 more hours until ticket entry closes.I have a good feeling someone is *bound* to win this now!!On a side note, someone recently bought a lot tickets and didn't leave an address of where to send all the winnings (should they win), so if you are that person message me.   It's a good thing all those phantom super-clusters went off line a few weeks ago or who knows how high the difficulty would have jumped to?   I just sent you a wad of coin  
So the very first 50BTC is what you are after, what if that person had other BitCoins generated into it since then, how do you know which is which? Well if you dump in alot, that's more division, right now I think there are 87 tickets. Each person would get back 2.7 BTC, but if you dump in say another 100 tickets, that would be barely 1.2BTC each, so one could spend 100BTC and make 120 BTC if no one wins. There's the risk that if you dump in a lot, someone will win the whole jackpot and you'll lose everything you put in. So if someone wants to risk it, that's up to them. Since things are really picking up with my other projects, I won't have time to run another lotto, so here's the fun part.If no one wins the jackpot tomorrow, then *everyone* wins. I'll take the jackpot and split it up among every single ticket that was bought. Currently that means everyone that spent 1 BTC for a ticket, will end up getting about 2.7(give or take haven't done the exact math yet) BTC back as a winner per ticket.So if you bought 1 ticket or 20 tickets, you'll get back a portion the full jackpot for each ticket. So one person wins big or everyone wins small tomorrow!The best of luck to you all! Yes, you send around 0/unconfirmed coins forever from what I've found out in my testing. The only issue is, should those be fake, everyone that the fake coin was sent will have their balance adjusted to subtract the fake coin.If it's someone you trust (best friend, family, good business partner) then yeah, spend it.If it's someone you've never done business with, I would wait before spending just in case. Here's me showing my age  I created a batch file and put it in the same folder at BitCoin.exeJust create a file, like bitcoin.batEdit the file and paste inCode:echo off:10echo Starting BitCoin Crazy Unstable But Oh So Fast!start /wait bitcoin.exedate /ttime /tping -n 1 -w 5000 1.1.1.1goto 10Save the file and use it to start BitCoin. If the program crashes, it will log to console when and restart the client. This only works in the Windows Client GUI, won't work for services.I figured I would add this if it's helpful to anyone. Yeah, I easily see 10,000 khash/s on some of my lower end 8 core servers. This should give just about anyone a major speed boost. I was thinking about Virtual Box when I wrote that   They do physically, but if you use a virtual machine, you can set environments to have 3 for example. Windows will work with 3 cores or 4 cores just fine, it doesn't care how many it has. Task Manager and Yes, options in Bit Coin allows you to control how many cores it's using. Thanks for thinking about those still on the 32bit chips   Wow, this is the biggest jump I've ever seen. Nearly a 250% increase in speed from the stock version, amazing.  Now let's see how stable it is   Yeah, runs every bit as fast as the Intel tweaked ones from what I could tell in testing, plus the program is half the size compiled.   The ANDS aren't meant to prove anything. They are milestones for a plan that give a probable difficulty in reach each milestone in anecdotal form. Meaning, if my goal was to buy up the world's gold supply. The plan would be as simple as step 1, buy all the gold, step 2, I have all the gold. But we know there would be a lot of steps in between to achieve that goal.This topic had a 5 step plan for the goal on how to profit from a Bit Coin attack using a Bot Network and filling in the in-between stuff just further documents the difficulty in it, that's all.  But I know what you mean and I agree, the botnet guys are making enough money not to really care about a Bit Coin scam at the moment. Yeah, I thought the private key had to be in the mix somewhere. It kind of adds another randomness though, you have to find the hash that collides with another public key and at the same time, the private key has to be weak enough to break. I'm not saying it's impossible, but it introduces 2 variables into the reverse collision finding.Basically, one would build a rainbow table of weak private keys and then have to compare those to public hashes and then have to hope that someone out there has a hash that happens to be a part of that attack. Not impossible of course, but how feasible even if computers were 100 times faster in 10 years?[edit] ok, re-read what you wrote, the public key is generated from the private key, not independently. So just finding a weak public key is the issue. What they often don't mention though is *collision generating* still takes a lot of CPU time.If I figure out that Public Key 123456 generates Hash ABCDandPublic Key 654321 also generates Hash ABCDI'm still left without the Private Key.But from what you are saying, all I need is Public Key 654321 and I can spend coin pretending to be Public Key 123456. Very nice. *another reason why I love open source*As I understand it then, and please correct me if I'm wrongSince the hash of the public key is smaller than the actual public key itself, one need only find a collision that matches the hash and when that collision is found you'll know the public/private key combo. Then you simply spend coin using the known ones and the other clients will think it's a valid transfer because the clients are only concerned that your hash matches the hash of the victim and the transaction is recorded for all time.Currently the hash is 35 characters long, alpha-numeric26 (upper case) +26 (lower case) +10 (numbers) = 62 possible per characterSo we have 541,638,008,296,341,754,635,824,011,376,225,346,986,572,413,939,634,062,667,808,768 possible combinations.So I think we have about half of much work to do compared to going brute force against the main private/public key. Never hurts to plan for the future   I like it too, it's straight to the point and doesn't blame/assume things about the market. It just presents what is there, the reader can decide for him/her self how good/bad things are going.   I think I know what he means, but I was certain that the odds of doing it a bit too random to make an attack out of it. Oh I was wondering about that, I actually sent the 0.01 back, hehe. It's open source software, better to discuss it now than try to keep it a secret for someone else to discover and they may not be willing to share any details.
That's what I was expecting too, but I was using napkin math, glad you took the time to work out the real numbers. Either someone has stopped the search for SETI or Gene Finding to start making Bit Coins or a lot of people have installed the client on their PC and have it churning 24/7 to mine coins. I guess since all the downloads come from sourceforge, I wonder how many downloads have taken place in the last few months? I know I've downloaded the client hundreds of times now to install it   Optimizations mainly. When the program is being compiled on Windows, certainly optimizations make the program more efficient.On Linux, we have both 32bit and 64bit builds to take advantage of the 64bit arch of the system. On windows, there was only a 32bit build. The blocks per hour try to remain steady, the difficulty just goes down. Basically he's saying "I made it hard for everyone because my machine(s) were winning every time", now that the machines are shut off, "you all should be winning the blocks everytime".So the rate remains constant, but everyone should start generating more blocks (perhaps a few per day instead of 1 every 2 weeks like before). Whatever the market was that day, should be able to look up the history since he has a nice graph on it now. https://www.bitcoinmarket.com/ Given that 70,000 blocks = roughly 3.5 million bit coins. Having 85k would give him about 2.4% of the market. I know a lot of the market exchange sites for Bit Coin have at least that or more BTC for the trade volume. I would be curious myself   Yes, and the next release will speed that many times over, I've tested both the Windows and Linux client, major speed increase on block updates in them. Your not slow, it's just cryptic talk really. Basically, people are worried he is going to mess with the market. Mainly, they thought he had a 1,000 CPU farm churning out Bit Coins like he was printing money. Which going by his own words, he was leading everyone to believe. At the same time though, many stories about Bit Coin were spreading across the Internet, so traffic to the site increased, many people downloaded the client and set their PC to start "generating coin" so to speak.Since Bit Coin regulates coin production based on CPU power, all these new people running the client were adding more CPU power to the pool. Thus, the difficulty of each block generation (50 BTC) in this case started to increase rapidly. He used this situation to offer up no proof of nothing more than he had a server farm out there somewhere churning Bit Coins. At the same time, everyone is hoping on board Bit Coin and naturally increasing the difficulty of block generation.So, people would cross correlate that since he said he had a server farm making coins and the difficulty had jumped up so rapidly, they assumed he was telling the truth.The breakdown though is given the short amount of time he claimed to have generated 85K of Bit Coin went against of the logic of just how many BTC can actually be generated. According to his own tweets, he was producing 85K in under a few days. By logic, he can't because it would take an 11 day straight coin generating server farm to do this, plus no one else would be able to generate any coin. I was generating plenty during the time he claims to have his server farm up and running, so on that front he was lying I believe.He now claims that he shut down that server farm long ago and that he has all he needs. Fair enough, if that's true, then by block 70,560 the difficulty of BTC coin generation will take a nose dive.On another front, he mentions how much he spent using cloud computing to generate all the BTC. I use cloud computing myself and I know how much it cost to use that much CPU power and it's certainly not the few hundred dollars he claims. So, again, I believe he was caught in another lie.And finally the third reason, and one I don't ever mention, is because some members at this forum have way more CPU resources than he claim to have and they know what the generation rates for them was before and after his claims. His CPU power doesn't pan out against real world experience or else he had the worlds slowest 1,000 core setup.I have to disagree, but only for one reason. He wanted a large amount of BTC and the easiest way was to take advantage of the situation when Bit Coin had a lot of press and he knew the difficulty of all these new people joining would increase and thus make it much harder to generate BTC. Using this, he puts out a claim that he has a massive server farm running somewhere and how he's out to show that BTC can be bought out with enough money. At first, it seems logical to people, so they feel the current BTC they have will probably be worthless. He buys up all the BTC he can at fire sale prices and then ends up with a lot of BTC when it's done.What he does with it, I'll leave that to him. But to go through all of that for only 85K BTC is really just a drop in bucket compared to how much some people have right now.Only he knows the truth, but in the end after some time, we will at least know if his methods were false or not. What he does with his real or made up amounts of BTC is his own business and I'm not concerned about that. I'm only concerned when I see someone trying to use scare tactics to take advantage of a market. I compare it to someone claiming they have invented a device that can turn water into gold for only $9.99, the gold market plummets, someone buys all the gold at cheap prices, then later people realize that the original water to gold machine was just a lie. The price goes back up, someone gets very rich   They limit to just the top half of the world? That's lame of them, go figure.   Once block 70560 comes around, we will know if the other part (Nenolod's) plans were a lie as well. The way around it is to choose the "gift" option, then if the other party has a paypal account there is no fee. Are these things suppose to be easy? People don't operate botnets because they are hard, but because it makes them money for the amount effort they are going to put into it. I read in the news from time to time about botnet operators getting busted. They weren't doing it for the *rush* of the challenge, but to make a living.2 months of dev work is like not getting paid for 2 months. The investment would have to be worth it to someone with that much free time. Plus there is a movement out there to root out botnets. So all your work could go up in a electron should someone shut you down or wipe our/take control of your botnet.Risk vs Reward, right now there really isn't a reward for a Botnet operator. Some of us are already like that, I'm running optimized clients that were posted by some members that have a 50% speed increase for a while now on a lot of PCs.   No one mentioned anything about the Linux client, but I've tested it on mine, runs 500 blocks / second during download, everything else works great, no issues to report so far. Updated with all *swap* request so far. This should certainly put the odds of a winner more into everyone's favor come next week. I would still make it 50 BTC though, just split it up between the 2nd, 3rd, 4th place runner ups, etc. So the first place PC gets 25, the 2nd place PC gets 12, 3rd place PC gets 7, 4th place PC gets 3, etc. etc. Leave everything exactly as it is, except have the difficulty adjusted every 1,000 blocks instead of every 2,016 blocks just to make it twice as responsive to server farms joining the network and then when light CPUs are running the network.And a splash screen! For windows client anyway, the Linux client always seems to pop up right away. If he used it for personal use, then sure he could keep it to him/her self. But I think this being open source software, he couldn't legally do that.There are a lot of gray areas about that would be beyond the scope of this topic I'm guessing. That's a third option I hadn't considered, thanks for pointing that out. Yes, sorry, I left that part out, the Linux servers (same hardware) always generate higher khash/s than the windows machines, at least mine do. Your mileage may vary. Yeah, your right, I didn't notice that.Well for simplicity reasons, let me know which one to swap in. I'll do the same for anyone else that chose the same number both times. You can't exactly split the winnings with yourself if the number drawn was the same that you chose in both lottos.  So in the spirit of Bit Coin, fair enough for everyone that participates.  
Yeah, my Linux 64bit systems still have the leg up on my windows servers, even with this optimization that is made that speeds them up by 50%, seems Linux still rules the roost for coin generation speed.Most of my coin generation comes from my Linux servers more than my windows servers, it's about a 1 to 4 ratio, for every 4 blocks made by my Linux servers, 1 will be made by one of the windows servers. Yeah, it's easy to get a thousand IPs even if they are just on loan if you really wanted to sap the donation page dry. Might be easier just to take that address owner and send 0.01 to you; check to see if the address matches up. Numbers picked list (Owners hidden for privacy)Current Lotto Entries023053083223232233301302303304305307308309310311312315316318319320321322323324325326327328329330331332334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399402403404405406407408409483553583653683753853883983Second Lotto Entries042060068091150159181188193214288306317453468543555560591599637678744750905987First Lotto Entries003006007011012020023025030055109141161218230235271273300313314333 - 333401455460500511512523524555557585619675683777783832888914953954955956 Lottos are fun, especially if it doesn't cost much to play.I'm going to duplicate my states pick three lotto. It's easy and straight forward, plus I'll use the results from the actual state lotto for fairness. I'm not going to take a percentage of any winnings, so winner takes all (including all mine if you win).Rules:Cost to Enter: 1 BTCWhat do you pick? Any number between 000 and 999; 000 counts as a number, so does 009, 099, etcYou can enter as many times as you like for 1 BTC each, so you can pick multiple numbersThe maximum (but not minimum) jackpot will always be 500 BTC, the reason for this; it prevents someone from just buying all the numbers for a guaranteed win. So you make it not feasible to try and game the system.Any extra BTC left over after a winner is put into the next jackpot. So if 600 BTC sits in the "bank" (server in this case) and someone wins pick 3, they get 500 BTC and the remaining 100 BTC starts the next pick 3 winner jackpotIf no one wins, the jackpot will be used to start another new pick 3 and another date (probably just a few days into the future) will be used to pick the next winning number.There can be multiple winners, so then the winnings are split up (this also further helps to prevent someone from buying every possible number for a guaranteed win)Your 1 BTC and pick number are sent directly to a static IP address: 64.186.155.104 -- This is a server generating BTC every day 24/7/365. Anything it generates on it's own (50 BTC) will also be added to the jackpot for the winner.Please include either your BTC address or IP Address (if you have a static) along with the number you picked, otherwise I won't know where to send the winner the BTCWinning numbers (evening drawing) will be taken from my states official website here so you can check for yourself: http://www.tnlottery.com/If you can pick up the local broadcast stations here, you can see the drawing live on TV as well.No last minute submissions. Our timezone here is (-6:00 CST). No more submissions will be accepted *after* noon (12:00PM -6:00 CST) on the day of the drawing. If you send a coin to the server after that time, I'll return it. If you send a coin with no return address or way to know *who* sent it, it just goes into the winning pot for the next drawing.Questions are welcome, I'll be glad to answer them here.Winner will be whoever got the lucky pick 3 match with the evening state drawing.Good luck to you all !!I'll make another after post up a list of all the numbers that were *picked* by those that entered for further verification (just the numbers, not who for privacy reasons)All participates from the previous two lottos, you are being moved to this one, so you have a chance to win for free. If you want to purchase additional tickets or new to this one, you still submit a single 1BTC for extra entry to get ticket in. Winning number was 608, find it here http://www.tnlottery.com/winningnumbers/default.aspx#cash3It appears we have no winner again.So, the next lotto, I'm going to take those tickets from this and previous lotto here and combine them into one big one. So if you got a ticket before this time or last, you'll have another chance to win for FREE this time.I figured this will get a winner quicker, otherwise, this could go on for months   The speed comes at a price, if you visit the developer area, there are several members who have released highly optimized/customized compiled binary for BitCoin client using the source that will get you that speed increase, but the application can crash randomly so you might not generate anything overnight if you aren't watching it 24/7 I still don't believe it though, mainly from a logistics standpoint. I won't argue if he has 85K BTC but you can go back in time on all the blocks here http://nullvoid.org/bitcoin/statistix.php and with a good spreadsheet and knowledge of how fast they are created (creation times are all there), he would have to created every *single* block (meaning not a single person was getting one) for 11 days straight 24/7Further evidence is since he claims to have turned it off, the difficulty still has not changed. So either the interest in Bit Coin has grown to a level that the difficulty will naturally remain that high or someone else has filled in his place for block generation with another large server farm setup. 85K BTC is like sitting on over $4,200 USD which unless he had free server time, would have cost him nearly $33,000 USD for the 11 day sprint (with no competition from anyone else mind you) if he was using the Amazon Cloud Computing like he claimed.And to top it off, say he did spend the $$$ to place a 1,000 core server farm at his fingertips, that's still small in comparison to the total amount of CPU out there generating Bit Coins, so he would be lucky to get 1 in every 10 blocks that way, further making it take over 110 days to generate that much BTC at a cost of nearly a half-million dollars of CPU time.The numbers don't add up for his feat in my opinion unless he had a 100,000 core server farm setup for free. I would place my bets on that he was just blowing smoke. It would take a botnet larger than the current CPU pool (which might be possible), but it takes 100% CPU to make it happen, even if it's running on idle CPU time.So first, someone will have to take the source code AND compile a version that will remain hidden AND produce bogus blocks AND be able to be remotely controlled AND be able to restart itself after a system reboot/shutdown AND coordinate this properly to have *all* bots online at the same time AND be able to funnel those fake blocks to a central fake client AND be compile another client that will accept those fake blocks AND it will have to be setup to only work as private/local nodes AND you'll need another compile for a client that will connect to the public network AND the fake network to start loading up the fake blocks AND, AND, AND...I think getting the botnet will be the easiest part of this attack before one could move forward with it.   Either way, it's an amazing improvement over the older version! Great work!I ran two side by side (using the current release, and your new faster one) and in the time it took the newer one to download (twice) after a wipe, the original was still only about a few thousand blocks into it's download.   Blocks download just as fast in the wild (about 3 Mbps), so a big thumbs up, this will certainly get new users up and running much quicker. That's because he never had them to begin with. Mainly because there are some members on this forum that have triple his claimed resources and they know how much he should be really generating if he did have that setup going for that long. The first part of the 70k downloaded in about 20 minutes, the rest of the remaining 2000 blocks in about 7 minutes, so only 27 minutes from 0 to 100%, very nice! Is there a safety reason to stop within the last 2000 blocks or can it be tweaked to stop at remaining 500 blocks for example?In case anyone was curious, average download speed was around 3 Mbps for each burst of download. So far, awesome increase for the Windows client. Doing about 500 blocks / second using a private node. After the timer is done, I'll try it on a wild node out on the Internet to see if the speed is just as good. Awesome, got some extra slow machines to wipe/test with then. Will be curious to see what it does on faster machines as well.   Past the noon deadline, so all the numbers are locked in. Good luck to the winner! Are these for use with the test network you have setup or the current public network? Today is the day of the drawing, the best of luck to everyone as the Jackpot keeps growing. I have a good feeling that we will have a big winner today. How long do listings stay up? Certificate spent, thanks everyone!
The devs need not fret over this request, I'm sure someone could whip one up and submit it to them, but I figured I would throw it out there. Just like I have betters things to do than entertain people's ego.   Send me a link to an item at the site and I'll see what happens when I try to buy it. Wow, you came to the Lion's den?  Here's why I don't believe your story. You tweet how many BTC you are generating. We know that each block generates 50 BTC, we know the history of when blocks were generated, it's easy to go back and lookup their history.So, I don't believe for a second that you've generated an amount that's nearly 85K BTC due how many possible blocks were generated since you started, the amount of cores you claim to have generating (if you had that many cores, they must all be 200 MHz cores).So the only way to get that amount would be to buy them. That's more plausible to me, but I know your setup wouldn't generate the amount that people here believed you generated in such a short time. Yeah, I wish I could to, that way it wouldn't expire in a week.  You can only imagine how much stuff I had to buy just to earn $33 in e-bay bucks   I'm not referring to an animated splash screen, it could be a simple "loading" box, just so I know not to click the icon again thinking that I missed, start up a second instance that will close because it detected another instance was still running.   My experience is similar, the first release was rock solid like the original client, the other releases, while still faster, randomly crash after minutes/hours/days  so it's kind of random.So it's a trade off between stability and speed. The faster it gets, the less stable it seems.  Of course, I have mine on a batch to restart if there is a crash and to count how many times the program crashed during the day for example. So far up to about 2 crashes a day. I do as well, but some windows machines I've noticed that they sometimes seem to be doing the disk I/O first before the GUI comes up. Mainly if the program has been running for a while, you exit the client, then come back a few minutes/hours/etc later and start the client again, it does that. Mainly for the average user. I've noticed sometimes Bit Coin can take a while to start before you even see the GUI, which I know it's just doing some disk I/O stuff, catching up with the network, etc.I figured it would be helpful if the first thing that poped up was a BitCoin splash screen with "loading...." or something written on it so the average Bit Coin user won't start it twice or three times by accident.   My list of trusted traders:z310SmokeTooMuchhttps://www.bitcoinmarket.com/The MadHatter Yeah, I might have to start borrowing numbers from other state or country lotteries. Anyone got a suggestion? I could just rotate it around until someone finally wins (if no one wins this time)Surprisingly, no one wants to play the 0.01BTC lotto so far, prize must be too low for that one   No need to when the state lotto can do it, the results are on the website, removes me from the equation for tampering. Even though I get what you are saying, even if I did it, someone could check the math, etc. I just wanted to make it simple and using the state lotto is easy, plus they keep a long history on their website of past numbers that won.I do appreciate the suggestion though.*number picks and jackpot total updated as well* I'll give this one a run, the last build would crash randomly after a few hours   Number picks and jackpot total updated. Awesome, gives a 41% speed boost over the stock binary.My experience so far.Stock = StockLast x64 Build = 28% speed increase over stockThis x64 Build = 41% speed increase over stockNice stuff! This server just generated another 50 BTC, so now the prize winnings will work different. Basically, 5 BTC to all winners (even if two people pick the same number) Awesome! Numbers picked list (Owners hidden for privacy)003007011012020023025030042060068091109141150159161181188193214271288300306314317333453468511543555560591599637678744750777905987 New lotto, new tickets just like the state lotto. I thought about just leaving it and continue on, but I looked over the last months winning numbers and even with the list of choices, no one would have won all month, which surprised me given how random the choices look. This being my first lotto, I would hate for it to go on for months with no winner because no one will want to play if no one is winning. That's why I set the next drawing in a few days, and if we still don't have any winners, I might just start using the daily drawing because someone has gotta win at some point or else no one will want to play (or they will just start playing the penny lotto instead since they can buy a ton more numbers for cheaper) Lottos are fun, especially if it doesn't cost much to play. This one is a penny lotto. So those new to BitCoin and visit the https://freebitcoins.appspot.com/ website can give it a few tries.I'm going to duplicate my states pick three lotto. It's easy and straight forward, plus I'll use the results from the actual state lotto for fairness. I'm not going to take a percentage of any winnings, so winner takes all (including all mine if you win).Rules:Cost to Enter: 0.01 BTCWhat do you pick? Any number between 000 and 999; 000 counts as a number, so does 009, 099, etcYou can enter as many times as you like for 0.01 BTC each, so you can pick multiple numbersThe maximum (but not minimum) jackpot will always be 5 BTC, the reason for this; it prevents someone from just buying all the numbers for a guaranteed win. So you make it not feasible to try and game the system.Any extra BTC left over after a winner is put into the next jackpot. So if 6 BTC sits in the "bank" (server in this case) and someone wins pick 3, they get 5 BTC and the remaining 1 BTC starts the next pick 3 winner jackpotIf no one wins, the jackpot will be used to start another new pick 3 and another date (probably just a few days into the future) will be used to pick the next winning number.There can be multiple winners, so then the winnings will not be split up. Basically 2 people can win, each collecting 5 BTCYour 0.01 BTC and pick number are sent directly to a static IP address: 64.186.154.76 -- This is a server generating BTC every day 24/7/365. Anything it generates on it's own (50 BTC) will also be added to the jackpot for the winner.Please include either your BTC address or IP Address (if you have a static) along with the number you picked, otherwise I won't know where to send the winner the BTCWinning numbers (evening drawing) will be taken from my states official website here so you can check for yourself: http://www.tnlottery.com/If you can pick up the local broadcast stations here, you can see the drawing live on TV as well.No last minute submissions. Our timezone here is (-6:00 CST). No more submissions will be accepted *after* noon (12:00PM -6:00 CST) on the day of the drawing. If you send a coin to the server after that time, I'll return it. If you send a coin with no return address or way to know *who* sent it, it just goes into the winning pot for the next drawing.Questions are welcome, I'll be glad to answer them here.Winner will be whoever got the lucky pick 3 match with the evening state drawing.Good luck to you all !!Due to the fact that someone could submit a lot of numbers at once at this price, I won't be listing all the *picked* numbers. Feel free to list them voluntarily if you like. But when the day of the drawing takes place, I will make certain to double check the logs to make sure all winners get their prize.If the server generates a 50 BTC amount, then that opens up the ability to have multiple winners get the full 5 BTC prize without having to split it up. If that happens, I'll be sure to update the topic as well. Lottos are fun, especially if it doesn't cost much to play.I'm going to duplicate my states pick three lotto. It's easy and straight forward, plus I'll use the results from the actual state lotto for fairness. I'm not going to take a percentage of any winnings, so winner takes all (including all mine if you win).Rules:Cost to Enter: 1 BTCWhat do you pick? Any number between 000 and 999; 000 counts as a number, so does 009, 099, etcYou can enter as many times as you like for 1 BTC each, so you can pick multiple numbersThe maximum (but not minimum) jackpot will always be 500 BTC, the reason for this; it prevents someone from just buying all the numbers for a guaranteed win. So you make it not feasible to try and game the system.Any extra BTC left over after a winner is put into the next jackpot. So if 600 BTC sits in the "bank" (server in this case) and someone wins pick 3, they get 500 BTC and the remaining 100 BTC starts the next pick 3 winner jackpotIf no one wins, the jackpot will be used to start another new pick 3 and another date (probably just a few days into the future) will be used to pick the next winning number.There can be multiple winners, so then the winnings are split up (this also further helps to prevent someone from buying every possible number for a guaranteed win)Your 1 BTC and pick number are sent directly to a static IP address: 64.186.155.104 -- This is a server generating BTC every day 24/7/365. Anything it generates on it's own (50 BTC) will also be added to the jackpot for the winner.Please include either your BTC address or IP Address (if you have a static) along with the number you picked, otherwise I won't know where to send the winner the BTCWinning numbers (evening drawing) will be taken from my states official website here so you can check for yourself: http://www.tnlottery.com/If you can pick up the local broadcast stations here, you can see the drawing live on TV as well.No last minute submissions. Our timezone here is (-6:00 CST). No more submissions will be accepted *after* noon (12:00PM -6:00 CST) on the day of the drawing. If you send a coin to the server after that time, I'll return it. If you send a coin with no return address or way to know *who* sent it, it just goes into the winning pot for the next drawing.Questions are welcome, I'll be glad to answer them here.Winner will be whoever got the lucky pick 3 match with the evening state drawing.Good luck to you all !!I'll make another after post up a list of all the numbers that were *picked* by those that entered for further verification (just the numbers, not who for privacy reasons)
I'll start another topic that will start a new one and this jackpot will be used to start the next lotto. At the same time, I start a separate lotto that is pick 3, but using a smaller jackpot, so those that get 0.05 BC from the free BC site can participate. Yes it will, dang, I thought I saw 680 in that list, so I went back over the BitCoin logs to double check every number, but no one picked 680  Someone was close with 683, that's why I thought someone had won. Ok, I just watched them draw the winning number, congratulations to the winner with number 680!!! Yes, very rough estimate for the all the 21 million coins, so I remember seeing somewhere about how long it would take to generate them all. It put it at least a century into the future, so 350+MB might be small potato 100 years from now for both desktop and mobile devices. New Adopters can be solved with preloaded blocks in the install like I have for download here http://knightmb.dyndns.org/files/bitcoin/Mobile clients would just be "terminals" to servers that are already running the full software that keeps up with the full block chain. No different than a credit card processing gateway.Many solutions to these have already been discussed and others are working on them as I type. Take a size reading at a certain block size, wait a few blocks, check the size again, and then some linear math to take a guess at how big it would get. I did that in another thread somewhere on this board, basically came up with a number like 348MB once every coin was generated. Yes, about 10 so far. The other "regular" clients acknowledge test Coin transfer between the two, so far it appears good. I also have a packet sniffer running on my test machine and it's basically doing what the other clients do, nothing out of the ordinary so far. It's now past noon time, so I'm going to shut out the server from taking anymore entries so no one submits one by accident, I'm excited about today's drawing, look forward to a big winner(s) today! ROFL Gotta spend BC to make BC    I GOT DOUBLE MY MONEY BACK FROM HIM AFTER I SENT 0.00000001 AND GOT 0.00000002 !!!!!1111    Today is the day, no more entries after noon (-6:00 CST) today, good luck to you all with this evenings drawing. The client makes at least 8 connections, kind of random. One would need to control all of those entry points. Not impossible of course, but one rogue client is one thing, but a bunch of good clients, how to do you formulate attacking all of them? For 32bit clients, this makes a huge speed increase (if your PC supports it)I was using a little netbook to test with, it could manage about 185 khash/s but his compile does 238 khash/s so over a 28% increase (what I saw in the 64 bit clients), so another thumbs up for this build. (Exe size is smaller too   ) I think he should really present to this devs to get credit for it and some BC because I'm going to send some to him for raising my khash/s up and beyond the already insane levels that I have.   Point well taken, but the CUDA never materialized, this one actually does what he said it does. So if it is a scam, it sure is taking a lot of effort.   Tested it a Celeron machine (1.1 GHz)Good point, I'll see what the others do. Yes, straight from the download link on the previous page for x86.I looked through the error log a little, didn't spot anything that stood out. Does that apply for the x86 one also, since that's what I was using to test the 32bit build he had?[edit] I just checked, it was good for the 32bit   Testing with the 32bit client, your build 32bit client build crashes sad to say on a stock system (Windows XP) anyway. Going to later test on Vista, 7, etc and report back.
Nice job, this is just my initial testing, but the 64 bit compile speeds up hashing by over 28% so far over the 32 bit counterpart.So for example, my 8-core system does (600 khash/s per core =  4800 khash/s) for normally, but now averages 5700 khash/sI'll certainly be sending some bitcoins your way   For those that get the DLL error and don't want to install the full dev environment, you need to download the Visual C++ 2010 Redistributable x64 located http://www.microsoft.com/downloads/details.aspx?FamilyID=BD512D9E-43C8-4655-81BF-9350143D5867&displaylang=en No missing DLL errors when you try to start it? I'll guinea pig, I'm running it on a test system that has no balance yet, well trying to run, it won't start. I keep getting a "MSVCR100.dll" not found error when trying to start it. I copied the file over from another system into the system32 folder, but the program still can't find it for some reason. Do we need the full Microsoft dev environment installed to test it? I've got a spare server using a 8-core 64-bit Intel - 64 bit Windows 2003 server. I'd be curious if there is a difference from the stock, the machine currently does about 5000khash/s, I'd be curious if the 64bit native build would be better. Yeah, at least from the GUI standpoint, if someone doesn't put in what BC address sent it to you, so I don't see a way to refund it.I haven't looked through the headless server version to see how the data is handled for that.Basically, someone would have to pay through direct IP and make sure they put in the from field, the BC address or else it's no different than a stranger in the street stuffing $20 in your pocket as you walk by and you never see that person again and don't know who it was. Maybe off topic, but I am working with a local bank to produce pre-charged cards (like Visa for example) that can be refilled with Bit Coins. So maybe one day you will be able to. If Satoshi disappeared today? Then those that worked with him and wanted to put in the effort to run the project would be the natural selection logically. Otherwise, it just rolls down until someone wants to take charge. If that failed, I would considered heading the project myself if no one else was left that wanted to. Fair enough  Screen shot attached. Yes, all the source code is available, anyone can compile the client or modify it, fork it, etc. Just as the subject says.I have a $33.11 USD e-bay certificate that I can use for any item on e-bay. So instead of spending it on myself, I want someone to spend it with BTC.   How to do this?Go to ebay.com, pick out something within that price range, send me the BTC equivalent as defined by current market price (check https://www.bitcoinmarket.com/ ) for USD to BTC and I'll have the item shipped directly to you. For good faith, I'll only ask for half of the BTC amount and once you get the item, you can pay the other half.I only have one certificate, so first come, first serve.Feel free to message me with any questions. *jackpot and picked numbers updated* Thanks, I'll add those to the list here shortly. Seems the network provider is having issues, as it's really slow to connect to the server(s) right now for me.[edit] Updated jackpot and picked numbers. Yes, actually I was thinking that also. Since most can only get 0.05 from the faucet website, I thought about making a 5 BTC prize lotto, where 0.01 is the entry fee for the ticket. The problem is, I don't know if I could handle the amount of entries since someone could easily chuck in 100 entries for only 1 BTC. Would probably take some website automation for that. If that is the same person, then he's been using the same username for a long time, which will make it very easy to track him down. Yeah, but the server it's connected to is suppose to. I think you are saying that the attacker controls both his own nodes, network, super-computers, and the server that the client is connected to. If the attacker has control over all that, then the attacker might as well have control of the computer that is running the client for the simplified payment verification. The only catch to that is even if he has a bunch of fake computers to confirm his fake transaction, it won't fit the transaction block properly because it uses previous transaction to build off of. So the other clients would have a problem of the "known" transaction blocks and the "new ones" which don't fit properly.I don't think they would accept it, but any devs willing to comment are certainly welcome. Yeah, I'll start double-up (like 213 - 213 side by side) the ones that have multiple people picking it. That's one thing I didn't like about our own state lotto pick 3, lots of people would play (it was a $500 prize only) but you had no idea what numbers every else picked, so you often had multiple winners splitting the prize and each not getting very much when they won, LOL. It's cool, I've updated topic as well with the new jackpot balance and the picked numbers.In case anyone was curious, two people can pick the same number, but if that number wins, both people have to split the winnings.
*Updated number picks and jackpot amount at the top* Send to IP: 64.186.154.76Be sure to include the numbers picked and the address to send the winnings to it you win. The direct IP allows you to use the "from" and "message" fields.Thanks for playing and the best of luck to you! Made some further price adjustments on what's left (since the BTC keeps going up in value) and marked out the others that have been sold. Why not use the already existing metric system, 1 = bitcoin10 = decabitsor 0.1 = decibits0.01 = centibits0.001 = millibitsorSpell bitcoin with some strange/different spelling that people can visually know means the bitcoin currency so they don't confuse it with computer bitsbitsc (decibitsc, kilobitsc, etc.)orbitc (decibitc or kilobitc, etc.) The server generated another 50 BTC (what luck for you all   ) Updated jackpot. Current Numbers Picked (Owner hidden for privacy reasons)003006007011012020023025030055109141161218230235271273300313314333 - 333401455460500511512523524555557585619675683777783832888914953954955956Updated the topic subject with the new jackpot balance. *sends 1 BTC so he can go play the Pick 3 lotto* Here -> http://bitcointalk.org/index.php?topic=468.0  Lottos are fun, especially if it doesn't cost much to play.I'm going to duplicate my states pick three lotto. It's easy and straight forward, plus I'll use the results from the actual state lotto for fairness. On top of that, I'm going to throw my own BTC into it to get people's interest. I'm not going to take a percentage of any winnings, so winner takes all (including all mine if you win).Rules:Cost to Enter: 1 BTCWhat do you pick? Any number between 000 and 999; 000 counts as a number, so does 009, 099, etcYou can enter as many times as you like for 1 BTC each, so you can pick multiple numbersThe maximum (but not minimum) jackpot will always be 500 BTC, the reason for this; it prevents someone from just buying all the numbers for a guaranteed win. So you make it not feasible to try and game the system.Any extra BTC left over after a winner is put into the next jackpot. So if 600 BTC sits in the "bank" (server in this case) and someone wins pick 3, they get 500 BTC and the remaining 100 BTC starts the next pick 3 winner jackpotIf no one wins, the jackpot will be used to start another new pick 3 and another date (probably just a few days into the future) will be used to pick the next winning number.There can be multiple winners, so then the winnings are split up (this also further helps to prevent someone from buying every possible number for a guaranteed win)Your 1 BTC and pick number are sent directly to a static IP address: 64.186.155.104 -- This is an 8-core server generating BTC (around 6000 khash/s) every day 24/7/365. Anything it generates on it's own (50 BTC) will also be added to the jackpot for the winner. I've reset it's balance to 0, so it's basically now going to be the jackpot holding machine. Please include either your BTC address or IP Address (if you have a static) along with the number you picked, otherwise I won't know where to send the winner the BTCWinning numbers (evening drawing) will be taken from my states official website here so you can check for yourself: http://www.tnlottery.com/If you can pick up the local broadcast stations here, you can see the drawing live on TV as well.When the lotto jackpot runs out of the money, no more lotto. So if we have a bunch of winners in a row, I'll have to decide if I want to chuck my BTC into the jackpot to start it again if it's unable to maintain itself from too many lucky winners (or people with time machines)No last minute submissions. Our timezone here is (-6:00 CST). No more submissions will be accepted *after* noon (12:00PM -6:00 CST) on the day of the drawing. If you send a coin to the server after that time, I'll return it. If you send a coin with no return address or way to know *who* sent it, it just goes into the winning pot for the next drawing.Questions are welcome, I'll be glad to answer them here.I've just transfered 100 BTC to get it started.Winner will be whoever got the lucky pick 3 match with the evening state drawing on 7/21/2010 (This Wednesday)Good luck to you all !! (kisses his 100 BTC goodbye to the winner   )I'll make another after post up a list of all the numbers that were *picked* by those that entered for further verification (just the numbers, not who for privacy reasons) Ok, I was certain that you couldn't transfer BTC around in a circle to pick up fees that were more than the cycle of transition (basically BTC coming out of thin air rather than being generated)So if this guy was intercepting greater than 25,000BTC currency being traded around, it must be from someone else and even then, you can only transfer it around so many times before you run out.I think that further cements that this Nenolod guy is just blowing smoke. Does the fee come out of thin air or is it taken to from the transaction so that it cost 25,009 to send 25,000 BTC? They can, but the odds that you'll get useful exploit code that just happens to be that collision are still insanely high. I'll share (2) IPs64.186.154.76and64.186.155.104 What amount does one have to send to incur a transaction fee though? I've send some large amounts around myself and never saw a fee? Anyone know where the changelist is, I'm curious to what was fixed/changed/etc.  I don't think the block download brings your computer to a halt, it's more like the program isn't going to burn up 100 megabits to get the blocks. It runs very light on bandwidth and so do the other peers you are connected to get the blocks.That's why I created those package block downloads, to save time. It's quicker to download a small 32 MB file from my fiber connection than to wait a while for the p2p network to send it to you. I'm 100% certain that he isn't really generating that much and I'll leave it at that. If the machine is setup to only connect to their node, that could work since it would be kind of a central spending point that would quickly be able to tell if someone was trying to double-spend the coin.As for different networks and nodes, like Bob's Escrow is different from Jane's Escrow, the added delay would make a theoretical attack possible, but no one is going to get rich ripping off vending machines. That might be a good experiment to try on the test network to see what happens. I think it both machines are going through the same node, then trying to double speed should be stopped at the first node if they both are connected to it first. I"m not part of the development team, but my take on it is that you'll just be replacing the randomness with another randomness. Right now, even though the difficulty is very high, blocks are still being generated in under 3 to 5 minutes. So if this new system was in place, you would still be waiting for a block just as long as you would now. I don't usually disclose how many PCs I have in the BTC network for sanity reasons, but let me say that I have systems that can barely manage 90 khash/s and a few that are chruning out 19,2000 khash/s and one beast doing 38,400 khash/s. They don't win any more blocks than the much slower PCs does. One of my 900MHz PCs solved a block under 100 seconds by pure chance alone after the difficulty was increased. The other super clusters are still 0 after the difficulty went up earlier today.I'm afraid your solution would give my super clusters a big advantage because then it becomes they will always have the lowest hashed block if it's a CPU vs CPU thing. I live near the East coast of the US and I've sent Bit Coins to friends on the West Coast, seems to be fairly instant as long as both clients are well connected to the network.
My bad, I'll restrict the 32 core systems to doing the main bitcoin generation next time instead of seeing what would happen at the beginning of a test network   Testing the new release candidate. This resolves the minimize on close accidentally doing a minimize to tray. No X server crashes either, nice! Now only if we could get that tray thing to work again   Interesting, I could still be alive then.  *gramps sitting in rocking chair*  "I remember back in the old days when we didn't have 200 core computers in our cell phones to create these blocks" to which the great-great-great grand kids reply "Yeah, he's loony; everyone knows there is no such thing as a single core computer...."   It does, but it's using calculations based on the swarm. I think it would need something new to predict what an individual computer will do. LOL, I can see the frontpage with the FBI hauling out high power voltage lines rigged to a server farm with the guy yelling "Don't unplug them, I still need 20 more confirmations for the last 50 that was generated!!" Ah ok, cool. I continue to be astounded by how much thought was put into this system to keep it balanced, nice job! As long as it doesn't become self aware (as computers often do) and then it will know what I've been spending my Bit Coins on.   The Windows Client had it's own static IP with port 8333 open for it, I could see from the gateway device that it was connecting out to other peers and other peers were connecting back in. But after the 8, it's like it quit connecting out to peers and after a while the incoming peers stopped as well since it appeared to only be concerned with the peers on the LAN vs the WAN. The behavior of the Linux client is different though I've noticed, even if 50 people are connected to it, it will still seek outbound connections to other peers and inbound peers continue to trickle in as well.While this will only be a problem for people like me that have hundreds of PCs at their disposal, the reverse is, one could setup PC(s) to connect to a single client 8 or more times and then after a while, the poor windows client would suck itself into it's own matrix world where it thinks it's on the network solving blocks, but it's really trapped back in time.This is just a theoretical attack of course, I'm not going to lose any sleep over it, but I figured I would throw it out there for the future. The easiest way to negate this would be to put in some self-checking code for IPs. Basically, have to check that is has 8 connections or more that are NOT from the LAN/Same IP Address/etc when it's running as a dual node/client mode. So if the difficulty was increased so high that it took a day to find a winning block, that means the lucky winner would have to wait 120 day before they could spend it or about 4 months if everyone else was averaging about the same speed? Seems like at the high end of the difficulty, there is an issue with coin generation vs. being able to put it into circulation by spending. Wouldn't the long delay cause a lot of generated coin to be lost because anything could happen to the PC that won in a long amount of time if the winner had to really wait that long? They might un-install the program or the computer get eaten by a virus or power surge well before then. I've adjusted the prices for inflation, as well as what has been sold. The value goes up every day, so I'm trying to keep the prices fair to those that want to buy. Sorry to those that bought when the price was higher, that's just the way the market goes.   How about a compromise, have it show the current "difficulty" in either a number or scale function. People love visual stuff. When the scale is lower, expect it to rain, when the scale is high (or higher number) don't get your hopes up.   Yeah, I've noticed the "10 second blocks" are gone, replaced with 419 and 741 second block generation with no more in the last 20 minutes. That should keep those server farms on hold for a while  Now, correct me if I'm wrong, but now that block generation is taking a lot longer, doesn't that mean that the lucky person who got the block is going to take a lot longer to be verified by the network that he/she was the winner before they could ever spend it? Anyone notice, that for Windows Clients anyway, when you connect a bunch of other clients to it manually (through the -connect option) that if you go over 8, the windows client ends up cutting out the "outside world" connections and stick with the original 8 or more internal machines thinking that it's the entire network?I never noticed this since I use a Linux client to funnel all my PCs to the outside world, but I tried it with a Windows client and noticed that at first, it had about 10 connections, then after adding another 50 clients internally that connect directly to it, the number would eventually drop down to just "internal clients" only.When this happens, the block count doesn't increment anymore, basically the Windows client has separated itself from "the network" and all the other clients all think that they are the entire network now. If I do a "netstat -a -n" on the windows client, I can see it's only connected to the Internal clients and the IRC bootstrap channel and basically doesn't to connect to anyone else on the outside world. You know it's happening because the block count starts to fall behind of what is really going on outside of your local network (Internet for the rest of the world)It's kind of a self-collapsing loop? Doesn't seem to affect Linux clients though, they will happily connect to and be connected to about as many as it can handle. I could see this is kind of a DoS on windows clients if someone was evil enough. If I'm reading the source code correctly, it should go up and down based on how much CPU is being thrown at it. So if someone rented a super computer to drive up the difficulty for a week, then it vanished, the difficulty should float back down. I think at this point, raw CPU power is being surged over by luck. There is a topic here where a guy wrote a website script to display stats on how fast blocks are being generated. Most of them are being built in as little as 2 or 3 minutes, sometimes 10 to 30 seconds. I've noticed lot of a my old PCs are winning blocks now (these machines can barely muster 90 khash/s) It's like they always say, "To make a billion dollars, you have to start with 4 billion dollars first"   That's cool, but is the time right on block discovery? My PC army discovered 2 of the last 10 blocks and it took them a lot longer than a few seconds?[edit] Seems right now, I missed the block by 1 when counting backwards. So cool, blocks are discovered pretty fast. So people don't need mega-fast multi-core systems to win the discovery lotto   That's why I'm glad we have people like you here to participate in the discussion as well. A room full of "yes men" is a dangerous thing.   The person making the offer and the person accepting could have been the same person all along to try and inflate the value. It's Disk related for sure.I had a server that was about 5 years old, but had one of those 10,000RPM SCSI arrays in it. CPU wise, it was about close to a PIV @ 2GHz (single core) with low FSB speed, etc. But when it started to download blocks, it was getting them faster than any PC I had seen before. The disk array was lit up like a Christmas display and it finished off 65k blocks in under a minute. So I knew then it was not so much the CPU or RAM, but the disk speed (or caching perhaps?) that seems to make the difference in that "first time" block download.
Agreed, I had a 933MHz PIII generate (2) blocks when I have other machines running multiple cores that don't generate anything. It's mainly luck of the draw with those that have faster systems having a bit better luck.I setup a new system for the farm a few hours ago and it got a block within the first hour, I was stunned, it wasn't even that fast, like 135 khash/s old PC. I'm sure the same was said back when 40, 64, 128, and 256 bit encryption was coming out. SHA512 is part of SHA2, I remember when everyone was talking about how insecure SHA1 was with that significant *flaw* and how we all need to move to SHA2 because it was well defined, well supported, and well analyzed; sound familiar?I'm not betting anything for the simple fact that unless you can see into the future, we work with what we have in front of us. We can debate all day that in the future computers will be a million times faster or that some math genius is going to discover a flaw in the system that would bring everything down. I'm well aware of many peer reviewed papers and tech journals, even blogs about encryption. Not everything in existence, as I don't have the time for all of it, but enough practical experience to be able to visualize what it would really take to do what you propose.10 years is a good a guess as my 1 million years. SHA1 still has not been broken, but you can brute force/exploit flaws on a super-computer in under 60 hours if you have $35 million to throw at it.Overall, I hear what you say and if BitCoin jumped in the SHA3 realm, I would sleep just as well at night as I did with it using the older SHA2 realm of technology.I'm not trying to nitpick your post, just offering up my opinion and I certainly respect yours. I think we can both agree that if the encryption is bumped up another notch in the future, it would be a good thing for the system and community as a whole. For the same reason they didn't use SHA1024 or SHA2048 or SHA4048 or SHA1000000000000000000000000000000000There are lots of theoretical attacks that can be done against it, but if a program or new math proof can half the amount of time it takes to crack it, are we really worried about the encryption taking 100 billion years to crack but now with this new attack (insert math,attack,flaw) it's only going to take only 1 billion years to crack? How about a million years? Even one-hundred thousand years?When they can crack SHA256 in under 10 minutes, I'll be worried, but until then, time is on your side. Some joker probably put in a bid for 1000BTC for 10000USD, looks like it's already been removed, last I checked 0.0365USD to BTC Yeah, you are right, works just fine. *smacks forehead for not counting cores ahead of time*, so scrap the prioirty bug then, I'll go back and edit my post. Works just fine on Windows 2000, XP, Vista, and 7 LOL, I think you are right. I've got waaaayy too many PCs around me and it's difficult to keep track of which is single core, dual core, quad, 8 core, etc. I'll test it again on the single proc PC and see what happens. What is the most that you would want to buy at once? You mean the confirmation column on the very left? Screen shot of mine for reference. I already have 1848 confirmations for the one at the bottom if that's what you mean? On the Linux client (64 bit), the "minimize on close" will still minimize to tray (causing X server hang after a short while by spawning multiple tray icons).But, the priority of the threads all seem to be "nice" properly I think. The ones using all the CPU time are nice to 19, so the others that are 0 and 2 aren't using any CPU time so the system seems to be responsive.Code:[knightmb@KnightMB ~]$ ps -eflL | grep bitcoin0 S knightmb 13676 13591 13676  0    9  80   0 - 113704 poll_s 14:52 pts/1   00:00:02 ./bitcoin1 S knightmb 13676 13591 13681  0    9  80   0 - 113704 hrtime 14:52 pts/1   00:00:00 ./bitcoin1 S knightmb 13676 13591 13682  0    9  80   0 - 113704 hrtime 14:52 pts/1   00:00:00 ./bitcoin1 S knightmb 13676 13591 13683  0    9  80   0 - 113704 hrtime 14:52 pts/1   00:00:00 ./bitcoin1 S knightmb 13676 13591 13685  0    9  80   0 - 113704 hrtime 14:52 pts/1   00:00:00 ./bitcoin1 S knightmb 13676 13591 13686  0    9  80   0 - 113704 hrtime 14:52 pts/1   00:00:00 ./bitcoin1 S knightmb 13676 13591 13687  0    9  82   2 - 113704 hrtime 14:52 pts/1   00:00:00 ./bitcoin1 R knightmb 13676 13591 13689 70    9  99  19 - 113704 -     14:52 pts/1    00:09:34 ./bitcoin1 R knightmb 13676 13591 13714 71    9  99  19 - 113704 -     14:53 pts/1    00:09:39 ./bitcoin1 R knightmb 13676 13591 13924 72    9  99  19 - 113704 -     14:53 pts/1    00:08:19 ./bitcoin1 R knightmb 13676 13591 13314 73    9  99  19 - 113704 -     14:53 pts/1    00:08:19 ./bitcoin1 R knightmb 13676 13591 13114 74    9  99  19 - 113704 -     14:53 pts/1    00:08:19 ./bitcoin1 R knightmb 13676 13591 13984 75    9  99  19 - 113704 -     14:53 pts/1    00:09:19 ./bitcoin1 R knightmb 13676 13591 13214 76    9  99  19 - 113704 -     14:53 pts/1    00:09:09 ./bitcoin1 R knightmb 13676 13591 13917 77    9  99  19 - 113704 -     14:53 pts/1    00:08:12 ./bitcoin1 R knightmb 13676 13591 13919 78    9  99  19 - 113704 -     14:53 pts/1    00:08:39 ./bitcoin1 R knightmb 13676 13591 13934 79    9  99  19 - 113704 -     14:53 pts/1    00:08:51 ./bitcoin1 R knightmb 13676 13591 13114 80    9  99  19 - 113704 -     14:53 pts/1    00:08:39 ./bitcoin1 R knightmb 13676 13591 13624 81    9  99  19 - 113704 -     14:53 pts/1    00:09:11 ./bitcoin1 R knightmb 13676 13591 13224 82    9  99  19 - 113704 -     14:53 pts/1    00:08:39 ./bitcoin1 R knightmb 13676 13591 13374 83    9  99  19 - 113704 -     14:53 pts/1    00:08:55 ./bitcoin1 R knightmb 13676 13591 13261 84    9  99  19 - 113704 -     14:53 pts/1    00:09:43 ./bitcoin1 R knightmb 13676 13591 13171 85    9  99  19 - 113704 -     14:53 pts/1    00:08:55 ./bitcoin1 R knightmb 13676 13591 13741 86    9  99  19 - 113704 -     14:53 pts/1    00:08:23 ./bitcoin1 R knightmb 13676 13591 13371 87    9  99  19 - 113704 -     14:53 pts/1    00:09:42 ./bitcoin1 R knightmb 13676 13591 13690 88    9  99  19 - 113704 -     14:53 pts/1    00:08:39 ./bitcoin1 R knightmb 13676 13591 13234 89    9  99  19 - 113704 -     14:53 pts/1    00:08:33 ./bitcoin1 R knightmb 13676 13591 13703 90    9  99  19 - 113704 -     14:53 pts/1    00:08:38 ./bitcoin1 R knightmb 13676 13591 13991 91    9  99  19 - 113704 -     14:53 pts/1    00:08:39 ./bitcoinI'm not exactly sure what the "Start BitCoin on window system startup" is suppose to do?On library errors, you get a /usr/lib/libstdc++.so.6 'GLIBCXX_3.4.11' not found on older linux clients (one was only a year old). I checked the file, it's just linked to libstdc++.so.10 but I don't know if that's a high enough version or not. On Windows, the priority of the Coin Generation is still net for normal. If you run BitCoin in Generate Coin mode, then load up something to eat up all the CPU (like CPU hog for example: http://www.microtask.ca/cpuhog.html) you'll see that both BitCoin and CPU hog share the CPU 50/50 instead of CPU Hog taking all the CPU and BitCoin running only on idle/low process. The khash/s is also reduced in half, so further evidence that the threads are not running in a lower than normal prioirty.I should have counted the cores ahead of time   , confirmed NOT to be a bug when testing Windows 2000, XP, Vista 32/64, Windows 7/ 32-64 I'll keep this list updated as they sell to avoid message confusion.   Heat related probably. Your CPU is idle most of the time, so it's running cool. When you break out the hash, the CPU is running full speed and generates more heat. As it generates more heat, it will start to slow down slightly unless you have some kind of crazy fan setup or liquid cooling.That's my guess anyway.   You are using Windows I can tell, but what version, arch (32 or 64 bit) ,etc? I have piles of RAM that just sit around and while I normally just sell it on e-bay or craigslist, I figured this time, I'll sell it for Bit Coins.The Bit Coin will also pay for the shipping (I'm going to use the exchange rate at the bitcoinmarket.com as a guide), so I'm limited to just the 48 continuous USA for the moment since International shipping would be too much to try and cover unless someone has a lot to pay with.Here's what I have, all of it tested and working. Anything I ship, will be in a packaged pad and sent via prioirty mail. So you should get it within 1 to 3 business days, depending on where you live in the US. I'm using the mail to keep cost low, so don't ask for overnight shipping via Fed Ex or anything  For Laptops2 QTY (512MB) PC2-5300S chips, both manufactured by Hynix 75 BTC / eachPC1 QTY (1 GB) PC2-5300U (Manufactured by Hynix) - 250 BTC(1 GB) PC2-5300U (Manufactured by Hynix) - 1250 BTC *sold*(1 GB) PC2-5300U (Manufactured by Hynix) - 1250 BTC *sold*1 QTY (256 MB) PC2-4200U (Manufactured by Samsung) 100 BTC1 QTY (512 MB) PC2-5300U (Manufactured by ProMOS) 150 BTC(512 MB) PC2-5300U (Manufactured by ProMOS) 625 BTC *sold*2 QTY - (1 GB) PC2-4200U (Manufactured by Hynix) 125 BTC / each *sold*(1 GB) PC2-4200U (Manufactured by Hynix) 650 BTC / each *sold*1 QTY(256 MB) PC3200U - DDR400MHz-CL3 (Manufactured by ProMOS) 55 BTC *sold*4 QTY - (128MB RAMBUS 800MHz Non-ECC - Manufactured by PNY) 150 BTC / eachShipping (Using delivery confirmation postal, cost varies from $3 to $5 for this service or 37.5 to 62.5 BTC)Message me or e-mail if you are interested. I figured this would help further make the BTC useful if you can trade out our hard earn CPU time for more RAM for the PC   Oh I see, it just shows the "latest" address that was generated, very cool. Well, isn't that cool. Learn more surprises everyday.   Up to 337 now  I'm not a shadow interest group/government/blah/whatever either, just here to help the community. So even though the total khash/s of all the combined PC is around 350,000 khash/s last I checked doesn't mean I win a block every 10 minutes, the luck factor still plays a large part in it. That's why I have so much respect for how they set this up.   Hmm, I just noticed that too. Didn't know it was changing every time you restart the PC. Guess I need to update my sig again  I agree though, a feature to lock in an address is useful for donations, etc. Would be a very useful feature, I agree. Thanks for the coin, I checked my server and saw a donation out of nowhere, hehe. They do, but the PC has to verify each along the way. On slower computers, this could take hours. The zips already have a snapshot of verified blocks to save you some time downloading and verifying each block. Your PC will still have to catch up to the network, but this will give it a head start so new users can be up and running more quickly if they find that it's taking a long time to get started. It's only benefit is for new installs. I did this because I find myself installing the client on a lot of computers and having some pre-downloaded blocks saves time and gets the client up and running, generating some coin quicker.  Lastly, if it's useful for you or helps to save time, consider donating some coin to the cause in my sig   The 2 decimal point limit is just the client. It's 21,000,000.00000000 that the system can support.So 0.00000001 is a unit just like 21000000 is.  So if you remove the decimal point, you have 2,100,000,000,000,000 units possible in the entire system or 2.1 quadrillion units possible. So if you think about it without the decimal point, the number is actually much larger than it seems. This is the actual size the system supports. It only goes to 2 decimal points in the client currently. Ask yourself, are there 2.1 quadrillion dollars in circulation in the USA or even all the countries of the world currency combined?
