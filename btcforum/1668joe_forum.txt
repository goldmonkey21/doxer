You can call me Ben.First, let's understand transaction fees.Transaction fees encourage miners to donate CPU to the network, which is a good thing because the premise behind bitcoin is that if we have a large network then attackers can't control more than 50% of the network. To understand this, assume that there were no transaction fees (and no 50 BTC reward). Then the miners would disappear.Now that we understand what fees are for, let's explore alternatives. One alternative is inflation beyond 21 million coins. Right now, miners pay themselves 50 new coins per block. Why? Because the original bitcoin client has this allowance built into it, and all bitcoin users agree to accept these new coins. In several years this scheme will have the block reward dry up.Once the reward gets small and transaction fee income goes down as people get savvy, miners will disappear and the network will be in serious trouble.Miners will, however, have the option (and they have the option right now, too) to change the 21 million rule, and reward themselves whatever they want for each new block. No change to the official bitcoin client is required, because most mining is done by mining pools which can make the change to their own modified clients.But wait. Won't miners just reward themselves insane numbers of bitcoins? No, because the general bitcoin public will modify their clients to detect these unfair coins and reject all coins generated on that branch. This places downward pressure on the reward choice. In essence, a market process will take place as individual miners weigh how many BTC they want to reward themselves per block with how much they can get away with without driving bitcoin users (and, therefore, bitcoin miners) to the branch point before the unfair reward block. We need to put together a think tank to figure out where we go once the coins reach close to 21 million. Transaction fees will not work because large sites will form that have a huge bitcoin bank account, and money will be sent between users of the site instead of actual transactions on the bitcoin network. The only solution is to lift the 21 million cap. Remember, the 21 million cap is not set in stone. At the end of the day, the rules are set by miners. We have a handful of mining pools that collectively control over 50% of mining activity easily. Miners have the option to agree on a percentage rate of increase beyond 21 million. If the percent rate is too high, the confidence in the currency goes down and so does its value. If the rate is too low then miners are not paid enough to support the network.These are just starting points of discussion but weshould get this out in the open sooner instead of later. The mining pools are going to be a powerful force in the monetary policy of the bitcoin network in the future. A microbitcoin is way too small now and will always be too small. Even after the bitcoin markets arrive at the true value for bitcoins, the micro coin will still be less than 3 US cents. On the other hand a millibitcoin is a larger unit-- one thousandth of today's bitcoin-- and therefore it will settle between 30 US cents and 30 US dollars, which is a much better ballpark for people to deal with that are used to dealing with dollars and cents. These numbers are based on bitcoin world GDP penetration between 0.1% and 10%.Plus, when it comes to the general public everyone knows what milli means, whereas hardly anyone knows what micro means. Constance,Please know that cashcow does not support fractional coin withdrawals.If a player attempts to withdraw, move, or transfer a bitcoin amount of XXX.XX then nothing will happen. To solve this problem, enter only a whole bitcoin amount without a decimal point or period. Entering a whole amount followed by a .00 will also not work.If a player has a fractional balance that they wish to move to a different account, cashcow asks that they please deposit the complementary amount of bit cents to bring the balance to a full bitcoin, then transfer or withdraw 1 whole bitcoin.It is always safe to deposit fractional amounts.We are eager to hear back whether this was the reason for your difficulty and these instructions solved the problem.We are looking to add support for the decimal point in the near future, including decreasing the minimum roulette bet from B1 to B0.1 or B0.01. Poker is also coming soon to cashcow and freenode IRC.Thank you for using cashcow. jorgen, Thank you for being a valued Cashcow customer at cashcow.no-ip.org. During the past 2 weeks a withdrawal was unsuccessful because we did not leave enough bitcoins in our bitcoin client to pay the win.Cashcow generally maintains a balance of at least 5000 BTC in the bitcoin client that the site uses to make instant payouts. However, several weeks ago we moved most of the funds to a different wallet on a different computer, but did not move them back.This issue has now been rectified.The cashcow casino account that made the unsuccessful withdrawal has been credited with the amount of the withdrawal. That user will now be able to attempt the withdrawal again.Cashcow Casino apologizes for the delay in attention to this matter.We are aware that the cashcow1234@hushmail.com address is no longer working. We are in the process of setting up a new email address with a different email provider and will update the site to reflect this. In the mean time, this forum is the best way to contact us. Thank you for your patience.chadqberry,Thank you for playing at Cashcow Casino. Our records do not indicate any unsuccessful withdrawals matching your description. We see numerous withdrawals after May 19, all of which were successful. We think you may have entered your own cashcow receiving address as the address to send your withdrawal to. When a user withdraws money to their own cashcow receiving address, the funds will go back to a Posted state and will not be Available until 2 confirmations occur. That kind of withdrawal will not show up on your Bitcoin client software, and you will not be able to withdraw it again until those 2 confirmations occur.Please return to your cashcow account and verify that all of your coins are there as you expect to be there. To make a withdrawal to your own Bitcoin client, carefully copy and paste the address from your bitcoin client software into the "foreign receiving address" text box; enter your withdrawal amount in the "Send [ ] BTC" text box, then click Send.Please contact us in this forum either in this thread or a private message if this is still an issue.Thanksjoe Im revising this estimate to mid-May 2011 for poker in IRC (irc.freenode.net) and June for poker at the cashcow website. The high price of bitcoins is due to an expectation of future value. Remember that if we know the price of something will double next week, then it will actually double today, then not change next week.The value of any item-- gold, stocks, bonds, currencies-- is always equal to the limit (calculus) of the expected value at time X in the future, in today's dollars, as X goes to infinity. Example: Gold is worth 1000$/oz today. A worker at a gold mine leaks information to his friend that there is a HUGE gold deposit equal to all the gold previously thought to exist (so supply will double). But it will take 2 years to mine all of this gold. Result: gold price immediately drops to 500$. It does not take 2 years to slowly drop down to 500$.Proof:We know that gold is trading at 1000$/oz prior to the information leak. Therefore, lim x->inf (EV(x)) = 1000.We expect that 5000 years from now (x = 5000 years) value will be 1/2 of what the market previously expected. (Note: 5000 years was picked as an arbitrarily long time, beyond which the market has no additional expectations, good or bad, about the value of gold)With no information past 5000 years, the new graph of EV(x) is equal to half of the old graph, for all values > 5000 years, since the only new information we have is that supply will be double the old expectation once all gold is mined.Therefore, lim EV(x) = half of the previous limit = 500, which is equal to the gold price. The solution for sending coins to people is at http://bitcointalk.org/index.php?topic=3427.0I envision adding a "wallet" tab to the client, which lists every bitcoin bundle in wallet.dat, and if you double click any bundle you can: (1) copy the private key for that bundle so you can email it to someone, (2) split out a different amount, (3) combine with another bundle, (4) reissue. Very similar to that other digital currency ecache. Because it would be harder.With the private key idea the invitation message would be:Hey friend! Here is 5 bitcoins: SDF8SFGD56F76DGS987FDGSDF9S76DFSFD7SD0F97FD097SFDGREY65T3TYU6CXB5N623VBDownload the bitcoin client at bitcoin.org to redeem your coinsWith your proposed idea the message would be:Hey friend! Try bitcoin! I've sent you 5 bitcoins on bitcoinfacebook.com. Download bitcoin at bitcoin.org, then go to bitcoinfacebook.com and enter this invitation code: 34JHG25KJ54HAka more steps for the person that is just starting with bitcoin. The goal behind the constitution was that it would be self-evident that it forms the right government. It clearly had flaws; the proof is found by looking at the current state of government.We can truthfully say that, looking at the set of all documents that a person could sit down and write, there exists one document that describes a self-evident (known to be correct) government. If we had this document, it wouldn't matter if dead people wrote it 250 years ago. Is a law really a law if you can see into the future and know it will be declared unconstitutional in 10, 20, 100 years? All of these gay laws are unconstitutional under the 4th amendment (search and seizure aka privacy) and the enumeration of powers article.Anyways, I do not think mt gox is freezing the funds just to obey the law. Because they are already breaking the law by not collecting and verifying names and addresses of every customer. Agree. Mtgox did worse than paypal. While paypal's funds freezing scams usually begin with reversed credit card transactions that put paypal at a loss that they need to recover, in this case here, mtgox has not had any liberty reserve or coins pulled away from itself, but continues with a funds freeze anyway. Especially foolish since this community is comprised of many people that absolutely despise paypal's model and instead value economic privacy and freedom. Demurrage is exactly the same thing as increasing the money supply. There are no special economic results that will occur under demurrage that will not happen under regular money supply inflation.Demurrage is simply expressing the amount of bitcoins you have as a fraction of the total supply instead of hard units. The only time it is good to switch is if you know ahead of time that the game show host will in fact open a door other than your own that does not contain the bitcoins. On the other hand if the host announces to you that he will do it only after you picked your door, it's better to stay with your door. Why? Because if the host wants to beat you then he will only pick a door if you picked the right door to begin with, in an effort to get you off the right door. We could update bitcoin client with the following modifications:- if 2 double-spend transactions received within 20 seconds of each other ==> ordering unknown. Accept blocks with either transaction, and build on top of the longest chain. (Current implementation) - if 2 double-spend transactions received more than 20 seconds apart ==> ordering known. Reject all blocks that include the later, non-original transaction(s). Do not build on top of the rejected block.- stop rejecting blocks containing double-spend transactions if the block receives 6 confirmations (to prevent a permanent chain fork)- clients should relay double spend transactions to alert the recipients that there was a double spend attempt.If we do this, then fast payments will be possible using the method laid out by the original poster. Yes, but only the public/private keypair of a temporary bitcoin address that your client loads with the amount of bitcoins you want to send to the person. Once you send it, your client should forget about it and not move additional coins into it.The private key transactions would allow you to send bitcoins as text: through facebook, message board private messages, snail mail, basically any medium of communication. Bitcoinmail.com is not similar to this idea. Satoshi may have made a small oversight in suggesting this could be done without changing the protocol. He suggested we add BitDNS (or BitWhatever) as the root/branch/leaf/something of the merkle tree. However this will not work because the current BitCoin protocol requires clients to verify that every leaf of the bitcoin chain is a valid bitcoin transaction. A hash value is not a valid bitcoin transaction, so this move would break legacy clients confused by the merkle makeup of the newer blocks.In any event, I have a good understanding of a handful of ways to do the multiple chains.The question you are asking about is not related to the BitDNS discussion. To erase spent transactions would not require any type of change in structure of the merkle tree. Each client can get away with forgetting most merkle leaf transaction data. Here is what it has to remember:- The hash of all blocks- All prior transactions that contributed to the availability of your own wallet funds- The block header data for all blocks to which those transactions belong- The merkle tree non-leaf hashes for those blocks- All merkle leaf transactions that are siblings to the above transactions in the merkle tree of the block to which they belong.Now, we must assume all clients are forgetting things by this same algorithm, so when a client spends money he has to spell out all the supporting transaction data over the network to convince other nodes and the recipient that it's legitimate.Over time as coins become more circulated the supporting data that needs to be sent to the network for every new transaction will become large. So this should be weighed against the status quo where all clients store all data. Other solutions have been made up for tackling the data storage problem separately from bitcoin. You want to send bitcoins to a Facebook friend who also has bitcoin, but you don't want to ask them for an address and wait for their response. You want to send the coins now.Add a functionality to Bitcoin to support the following use case:1. Alice wants to send 20 BTC to Bob.2. Alice asks her Bitcoin client for a public/private keypair for a new temporary Bitcoin address, which Alice's client will load with only 20 BTC.3. Alice sends the keypair to Bob through email.Alice is finished.Some time passes...4. Bob receives the email and enters the public/private key into the client.5. Bob's client sends the money into one of Bob's own addresses.6. Bob can consider the money received when that send-to-self receives a sufficient number of confirmations.To me, this sounds like a very basic and important functionality. This gives you the ability to "speak" bitcoins, and whoever receives your message will be able to cash them. You no longer have to ask recipients for their bitcoin address and wait for their reply. Also, this change does not require any changes to the protocol.I am (slowly) working on adding this functionality to the client that i checked out from github.Ideas/Thoughts? The TOS is unenforceable. A company cannot shift liability arbitrarily to an uninvolved individual who may not be aware that the card was obtained fraudulently. This is another unfortunate example of a company, like Paypal, that responds to fraud against itself by committing fraud against its own customers.The TOS language was not strong enough to be enforceable. If Amazon really wanted to get away with this, they would have to admit prominently that the Gift Card actually has zero value. A reasonable person expects a gift card to function like company paper. That's all I wanted out of you. An admission that you're back on your feet, and you're just here to talk about your day to day life. You lie again, I'll kick your teeth in. You have shelter, you have food, you have government checks. Try to climb your way up the ladder to a decent job so you can pull yourself out of a bad spot. Your endless "bad coincidences" are impossible. That's why I let this thread go on this long before I laid you out. A lot of these guys come from wealthy communities and never encountered beggars or con artists before, which is why this thread went on so long. As long as the community understands that you're just here to talk about your life and for the attention, and you're not here for "food money", it's OK.
Con artist. I see these lies every day. Can an admin please get this guy off the forum? Tired of this thread keeps popping up and people keep feeding him with money and pity he doesn't deserve. Yes. If the government requires ISPs to only transmit authenticated / approved packets (i.e. "deep packet inspection") to only government approved destinations, then we have something to worry about. At that point, there would be no way around it and the government could shut down bitcoin easily.I'm personally worried because in recent news we have both parties supporting a measure requiring ISPs to retain records for a specified number of years. I agree with RHorning on the 3 main problems:1. Create parallel currency for doing DNS2. Fork the chains but merge the mining effort to allow miners already working on bitcoin to complete DNS blocks with no additional work.3. Allow BitDNS miners to be rewarded in bitcoins or any non-voluntary reward systemHere are the solutions to each problem:1. This is trivial. Start a new chain with a new genesis block and with the network operating on a different port.2. This was addressed by Satoshi in an earlier post and clarified today in IRC by tcatm. The way bitcoin currently works is we search for a nonce such that, when hashed together with the work (prevhash + merkle tree containing bitcoin transactions) we get a hash with a lot of zeros in front (this makes the difficulty).The idea is that we create a father merkle tree that contains the work for an arbitrary number of parallel currencies. So miners will use the hash of this tree instead of using the tree of just the bitcoin transactions. Essentially we created a large tree that contains the transactions for many different currencies.The miner then presents the solution to each parallel currency's network by revealing the specific leaf of the father tree that contains the data specific to that currency, and the rest proceeds as it currently does.3. The upkeep of the BitDNS network should be paid for either by every domain name owner paying a sort of rent to miners that produce BitDNS blocks, or through DNS transaction fees. Whenever a BitDNS transaction occurs, the recipient will be required to supply a Bitcoin address. Each miner on the BitDNS network will set a block solving fee they feel comfortable with. When a miner works on solving a BitDNS block, he will check the main bitcoin network to verify that domain owners have paid sufficient rent or transaction fees to miners of previous blocks. Any domains that have not paid, the miner will be entitled to make themselves owners of it.With all of these questions answered, now we can start on the execution and write the code. Fees will not work because they are easily circumvented by pooling and doing back-end bookkeeping, such as mybitcoin already does now. What will really happen--and this would be more fair than transaction fees--is miners will collectively decide to continue generating (and accepting) new coins past the 21 million limit set by Satoshi.At first this seems like it is breaking a core principle of bitcoin, but it is completely within the spirit of bitcoin. The new dynamic inflation rate will be reached based on the agreement of 51% of CPU power. If miners set the inflation too high, the currency on that high-inflation chain will lose credibility, thus the return for miners will lose real value. If miners set the inflation too low, you have the original problem of insufficient mining activity. So the end result will be a fair inflation rate that coin users can live with and miners will work for.It deserves a discussion on what happens when the chain branches:Let's say I branch the chain today to provide a bigger reward for new blocks, say 100 BTC. Then you'll have 2 chains: the main chain and the new chain. At this point, all coins in current and future existence will fall into 3 categories:(1) valid on both chains (default, all previous coins are valid on both chains)(2) valid on only the main chain (coins generated on main chain, 50 BTC reward) and(3) valid on only the new chain (coins generated on new chain, 100 BTC reward).The price of BTC is currently 0.40 USD. The price for type (1) coins will remain at 0.40. The SUM of the price for type (2) and type (3) chains will equal 0.40 USD. The difference in prices in type (2) and (3) coins will determine which chain the market eventually accepts.So... for right now, we don't need to do anything. But when the major mining software makers decide to allow different block rewards other than the 50 BTC, 25 BTC ladder set up by Satoshi, then we will have to reprogram the regular clients to deal with branched chains gracefully and communicate to the user which branches their coins belong to. Rfugger, could you help clear up a misunderstanding I am having about Ripplepay? When I read your post a few days ago, I jumped to the conclusion that Ripplepay software would form a decentralized trust network. I suggested that we cut out development time by using Ripplepay for all the heavy lifting of keeping track of debts across a trust network for Bitcoin Account Hubs. On looking into Ripplepay more closely, it looks like it is not decentralized; instead, it is a centralized website that keeps track of a decentralized trust network. For our purposes, we need no central point of failure. The theory behind the ripplepay trust network still does, however, provide the basis for what we need to do.Is there any decentralized implementation for a Ripplepay network? this is not my problem I was just advocating for the person who was having a problem.I did the 3 minutes of research, and the answer is that wxWidgets is upset about the locale of the machine. dishwara should evaluate their regional/language settings in windows 7 and make sure they are set correctly. Try changing to english/us and run again, and see if the problem goes away. Is anyone else getting this error?This error is coming from the wxWidgets library which I cant find on svn. Can someone look into this it should take no longer than 3 minutes to find the bug Is it easier to just use ripple as the hub network? Ripple will give us an API that we can use to send/receive money to other hubs. The only thing left for us to do is about 300 lines of code for a small API library to facilitate the idea of multiple users on each hub, the sending of invoices, and user confirmations of invoices:- sendInvoice(fromUser, toUser, toHubDNS)- sendPayment(fromUser, toUser, toHubDNS)- payInvoice(invoiceID)- getReceivedInvoices()- getReceivedBy(user)- getPaymentStatusOfSentInvoice(invoiceID)- synchronizeRippleAccountsWithBitcoin()The store's POS or the website's universal bitcoin payment button backend code is then built around the above API calls. The customer's bank account website also uses the same API on the back end.I envision the following scenario:Users' account numbers are of the form davout@hub.mybitcoin.com or joe_1@hub.mtgox.com. People's hub will be like their bank, so people will be comfortable with this email style account number. The part after the at sign is the DNS name of the hub's server.So I go to amazon.com, click their universal bitcoin button, and tell amazon to charge my account at joe_1@hub.mtgox.com for my 25 BTC purchase. Amazon will ask hub.mtgox.com to send 25 BTC from its joe_1 account. Mtgox will text me on my phone for confirmation. When I confirm mtgox will send a ripplepay IOU to amazon's hub. Now amazon can start shipping my order. A couple suggestions for the mobile app - cash register communication protocal:1. Bluetooth support to eliminate entering of codes2. If bluetooth is not available, then the customer's phone should generate a random number to give to the clerk instead of the other way around. The clerk is better prepared to enter codes (on an actual keyboard) than the customer on their phone's touch screen.3. Account numbers. If the customer can remember a 10-digit account number they have on the Account Hub network, then they can recite it to the clerk at the POS. When they enter it into the cash register, the customer's android phone will wake up and ask for confirmation. This would eliminate the need for the customer to waste time getting in to the app. App would wake up instead.4. For customers without android phones, solution #3 means that the AH network could make a regular call to the customer for confirmation.Regarding Ripple Pay and the hub network, a couple quick ideas on how to implement the hub client:1. Start with a standard Ripple Pay client2. Modify it to be knowledgeable about incoming bitcoin transactions via the json api with bitcoin, and to be able to send bitcoin transactions.3. When Hub A (customer's hub) needs to send money immediately to Hub C (store's hub), and there is a trust path through Hub B, then:i. Hub A transmits the IOU through the normal ripple pay channels (not bitcoin)ii. Hub C is now satisfied that it holds a RipplePay IOU against Hub B so Hub C can approve the transaction at the cash register.iii. Each hub constantly checks and resolves all RipplePay obligations via bitcoin payments to its peers. Likewise, when a hub receives a bitcoin payment from a peer and it reaches the 6 confirmation level, it updates the obligation through RipplePay as being paid.IMPORTANT: A hub's outgoing bitcoin payments must be re-sent if they used money from recent incoming payments that were reversed by the sender! Remember, the whole idea behind ripple pay is to push debt through a trust chain. If upstream does not send you the money, you still must send your payments downstream.This is just a start Im sure theres a lot more improvements that can be made to get RipplePay working with bitcoin. For example leveraging the fact that all bitcoin transactions are publicly available so everyone will know if a particular hub on the ripplepay network cheats. The system does not need to liberate lost coins.First, there's no solution because there's no way to know they're actually lost. A bank could be holding some coins as collateral for hundreds of years and never touch them.Secondly, there is no reason to do it. It just doesn't matter whether coins get lost. The price of the coins will naturally rise as the market realizes there are fewer coins that will "budge" to higher demand.Thirdly, the U.S. likewise does not care about lost coins. If a federal reserve note (dollar bill) get mutilated or destroyed beyond recognition, the government never does anything to redistribute that lost dollar. Do you want to kill the landlord? I will pledge $300. Others on the forum will hopefully join in with offers too.Post his name so we can verify he is alive now, then the bounty will pay out to your bitcoin address if he dies in the next month due to an accident or act of violence, confirmed by a newspaper or police report/crime log. It probably would have been best if you restrained yourself and remained out of this thread. The more this thread gets bumped to the top, the worse it will be for privacy shark.No, I did not receive my domain name. For over a month until I posted this thread I was unable to change its IP address or transfer it to a different provider.How many times do I have to repeat the facts of this for people to understand what this thread is and what it isn't?1. Privacy Shark committed fraud by knowingly accepting money for a service they knew was unreliable2. I lost money because of it. See original post.3. It is likely others will lose money too.Why aren't they yelling fraud? Maybe they haven't tried to do anything with those names yet. Maybe privacy shark's email server "likes" theirs. It looks like those domain names were probably registered by only a few people?Also, there is sadly no competition to my knowledge for what privacy shark offers. If someone knows another service that registers domains and takes bitcoins, I would love to know. I would appreciate it if you set aside any personal or professional relationship with privacy shark and took an unbiased look at the issue here. Privacy Shark's actions were clearly fraudulent, albeit a minor form of fraud caused by gross negligence. Privacy Shark had knowledge and history that email transmission was unreliable, yet continued to accept new business. Additionally, privacy shark once again demonstrated its procedural blame of all players except itself when faced with a problem from a paying customer. It is responsible for me to alert others to the fact that privacy shark had been committing fraud and should be avoided by others to avoid risk of loss. It is extremely irresponsible of privacy shark to deflect all blame away from itself, even outright deny the existence of any problem.While I look forward to one day visiting your BC town, I am confident that your lack of sound logic and understanding are a rare exception among the people in Nanaimo, and your town would turn against you, and rather see you as the slanderer. There are serious communication issues that will likely cause someone to lose money again. I look forward to privacy shark implementing changes to prevent these problems from happening to others.Yes, you did. Since you presumably run your own mail server, there is not even a mechanism by which an email could possibly be dropped en route.The PMs themselves work. You found my PM yesterday and sent me a reply. You are referring to a notification system whereby the bitcoin forum sends an email to you when you receive a PM. I venture to suggest that the lack of PM notifications to your email is related to the main problem of not receiving emails from customers.Please avoid posts like this by preventing the same mistakes from happening multiple times with multiple customers. When this happened before nothing was done to correct the problem except blame the customer and everyone else, as you are doing again here.If we are to believe your claim that you were not receiving emails, it would have been appropriate for you to investigate the configuration of your mail server then, to find out why.It is disappointing that you continue to deny there is any problem with your email, and then close your door to other methods of reaching you.I did.No, I spelled it correctly. I sent multiple emails, and I double- and triple- checked the spelling on each, as any reasonable person would after not receiving responses. Probably the 8 places of granularity that bitcoin already supports would be sufficient. That is 0.00000001. The set of all strings is infinite but it can be mapped onto all the bitcoins by using a hash function. I want to elaborate on a system I alluded to in an earlier post on page 14, that seems to be simpler than most of the other proposals put forth but that no one posted any feedback on.Under this system, there are no changes to the protocol, except for the work sharing mechanism Satoshi briefly described (that no one else seems to understand completely) whereby clients can do work on multiple networks without choosing one over the other.To implement this system:1. Fork the network2. Map the entire set of all strings (DNS names) onto the coinbase using a hash function (SHA).Now, the rights to map any given DNS name to an IP address is awarded to whomever owns the coin associated with its hash on the forked network. Note that #2 is possible because every bitcoin is already both distinguishable and traceable in the current system.This eliminates the need for any new complicated transactions, and eliminates the possibility of introducing any new loopholes or exploits that are not already present in the current bitcoin system. To transfer ownership of a DNS name, simply send the coin associated with its hash, on the forked network.I also think this can be generalized to all classes of problems where a finite (or infinite) set of items needs to be assigned to people. In other words it should be possible to arbitrarily create forked coinbases for tracking the ownership of different sorts of things.Any ideas or criticisms for this? Cash Cow Casino - Bitcoin's Premier Gaming Entertainmenthttp://cashcow.no-ip.org/Games:Single-zero rouletteMore games will be added upon request.How to deposit:1. Go to site2. Enter the desired username and password for your new account.3. Deposit funds to the bitcoin address provided at the top of your main page.4. Wait for 1 confirmation from the Bitcoin networkHow to play:1. In site, move funds from your Checking Account to Casino Account2. Click on the gold Bitcoin to launch RouletteHow to withdraw:1. In site, move funds back to your Checking Account2. On main page, enter withdraw amount and bitcoin address.3. Funds are sent immediately.Additional FAQ provided on siteEnjoy! Why are we scared of association with wikileaks? I hate wikileaks and its founder, but the currency is designed to persist in the face of institutional attempts to get rid of it. And wikileaks is in the news. So I hope they DO use it. They are a perfect candidate of an organization that should use bitcoin. If your business is legal, you're using paypal and accepting credit cards. We need to throw away this dream of bitcoin taking over paypal for the white market. I hope we get a good share of the white market, but the main usage of bitcoins will be in gray and black markets.And whether the reader agrees with that prediction or not, there is no such thing as bad publicity in any case. This is definitely a good thing for bitcoin.Let the public get mad about bitcoin.Regarding the article, I do not think it misrepresents the goals of bitcoin. Its goal really is to be decentralized and unable to be taken down. It does not imply that wikileaks was the catalyst for its creation, but that it fits the bill. I signed up for a domain name with them about a month ago. A week later, sent an email requesting the domain to be DNS'd to a different IP. No response. Messaged their account here on the bitcoin forums, no response. Still no action. Cost me 99 BTC for the 1 month of a VPS I bought waiting for the DNS name to work. Plus the BTC I gave to these criminals for the domain name in the first place.I am not the only one having problems with nobody home at privacy shark. There are other complaints on Privacy Shark, see this thread: http://bitcointalk.org/index.php?topic=577.msg6105When someone posts on bitcoin.org with problems with their service, sometimes they suddenly wake up and deflect blame back on to the customer, the customer's email provider, anything except themselves.Avoid privacy shark. What is Bitcoin? A decentralized way to keep track of ownership of a fixed quantity of things.The DNS problem is a specific example of a more general functionality: keeping track of ownership of a fixed quantity of things, where each member of the set is distinguishable.It turns out that bitcoins are already distinguishable. They are well ordered, mathematically speaking, so a number can be assigned to every bitcoin, for example 0 to 21 million.So, for a DNS functionality, this is all we need to do:1. create a second coinbase, possibly forked from the main coinbase (bitcoin)2. interpret each coin in the second coinbase as a well-defined interval of the sha256 hash space of all DNS names.Ownership of DNS names is therefore determined by which coins in the second coinbase you own.Some months ago I was opposed to adding DNS stuff to the existing bitcoin network protocol and client, because I argued bitcoin should stay true to its limited purpose. However, thinking more about this now I support inclusion of additional coinbases / tracking systems in the main network. The reason for doing this is so as not to water down CPU power into multiple networks. We want one strong network, so the network should be versatile.In fact, maybe anyone should be able to create a new coinbase on the main network, and specify rules such as quantity and distribution rate. In the case of DNS, everyone will just have to agree that a particular coinbase is to be interpreted as the DNS rights to different parts of the sha256 hash space for the DNS names.I agree with the idea put forth by da2ce7, which he says is derived from an idea put forth by Satoshi. I think it is compatible with my idea of allowing arbitrary creation of new coinbases on the same network.I cannot find the nanotube+theymos proposal so i cannot comment on it.
Depending on how fun it is i may be interested in doing the coding work! Is it for your new site bccapital? Thanks Since mtgox also runs the market, risk can be avoided by prioritizing the clearing of transactions such that buys to satisfy a margin call always go first; and credit is only extended if there is enough collateral for an ask that is already in the system.The other thing that will finally come into play here is interest rates, so mtgox account holders will now get paid an interest rate for their positive balance. Users who configure a mandatory transaction fee can simply ignore blocks that have spam transactions that do not meet the configured minimum fee. So no, other participants will not have to pay with their disk space.Of course, if the chain on top of an ignored block becomes 6 longer than the chain one's own client is working on, the client should "stop fighting it" and jump back over to the longer chain with the spam block that had no transaction fees. The study is right but the link to the tea party is wrong.The study is right because, if all other factors are held constant (i.e., government spending), then a reduction in taxes means the government will necessarily be climbing into debt faster, taking out more loans against the fed. This creates a devaluation of the government's debt and, therefore, of the U.S. dollar, which is currently backed roughly 80% by U.S. debt, the other 20% being gold.However, if the tea party really takes control, they would work not only to cut taxes but also to cut government spending. So the cash flow from government revenue to pay off outstanding debt is not expected to change one way or another without more specific and reliable information from tea party leaders on their plan with respect to the debt. If anything, a smaller government will be more trusted to retain control over its citizenry and pay off its debts in the long run. There has been a request for a single consolidated text file that has release notes on all prior released versions and current version of bitcoin.Do we have such a file? Are there release notes for each version somewhere? I noticed that the 0.1.x rar files in sourceforge had release notes, but it looks like it stopped with the 0.2.x versions and later. Holders of a deflating currency are experiencing an increase in wealth just by holding the currency. The wealth is coming from users of inferior currencies, who have not yet switched over to the deflating currency, because if users of other currencies behaved rationally by using the deflating currency, then the deflating currency's price would adjust upward until deflation is no longer expected.By using an inferior currency, those people are essentially donating wealth as an inflation tax, either to their government that is watering down the currency or to the users of superior currencies. So, they have an incentive to invest in things they might not invest in, just so they can be alleviated from the inflation tax.So the answer is yes; price deflation discourages investment. But we must understand that it is more accurate to say that the inflation tax encourages investment, because the investment that would go on with a zero-inflation currency is the baseline.Naturally, the next question is whether it is beneficial to coerce people to invest by penalizing them for holding the currency. The argument for this is that it provides the incentive for people to take on the risk of investment. The argument against this is that it takes away the free will of people by imposing a tax. In my opinion capitalism is the most natural law after anarchism.When you agree that anything people find or create should be their property unless superseded by a contract or existing ownership, then capitalism necessarily follows.If you leave off the last part and just say anything people find or create should be their property, you have anarchism: in essence, it is saying, whatever you have is yours until someone else takes it; then it is theirs. The core bitcoin network should remain how it is. The core network should not be concerned with helping ordinary end users run lightweight clients. The core network should always remain as simple and lean as possible, staying within the theory laid out in the white paper, nothing more, except for fixing real bugs and security holes if they are discovered.As was said in an earlier post, the balance sheet functionality can be layered on top of the existing core network. Clients in balance sheet mode can connect to each other on a second network to exchange information that relates blocks to the balance sheet. Older, ordinary clients will not need to know that this other network exists. What does it take for a client to reject an incoming block from the network? If we know this we can work backwards and find out why he wants to reject every new block. There must be a transaction in the main chain 1699 or prior that his client disagrees with.In any case, all the 1000s of bitcoins he generated were generated into a chain branch that only he was participating on, so they are worthless on the main chain. He would be generating 50 every 5 minutes being the only participant on that branch. The other curiosity is why he stood at 1698; this should have eventually started going up by 1 every 5 minutes when he recalculated difficulty. 1. Go to a different computer2. Download and install bitcoin from bitcoin.org3. Run bitcoin4. Wait for block count to reach the latest current block count5. Stop bitcoin6. Copy wallet.dat from old computer with the 13000 bitcoins over to the new computer's installation's wallet.dat file.7. Restart bitcoin8. Problem should be solved now and your 13000 bitcoin balance should be displayed. There must be a way to do away with real world time. It is an anonymity risk to give up your computer clock's time, and it shouldn't be necessary to get a transaction or block confirmed on the bitcoin network. If nodes want to compute some time deltas against their own clocks, that's fine, but again, no one should have to fess up to their computer's absolute clock time in order for the system to work right. If someone rejects a block that most of the network accepts, won't the rejecting nodes eventually give up on the rejecting branch and move to the longer branch that accepted it? The same problem would happen if someone double spends a coin, and nodes disagree on which one came in first. The majority will make a longer chain and the minority nodes will have no choice but to jump over.The same argument goes for difficulty. I don't understand why difficulty is centralized. Again, each node should independently determine what the difficulty is, and reject blocks that don't meet the mark for that difficulty. As long as most nodes reach the same conclusion for difficulty, all nodes will eventually jump over the the chain of the majority. I was surprised I never noticed this paragraph until I re-read the passage recently. Bitcoin should absolutely not be sending the computer's time to the network. Nor should it depend on the clock being set properly. Each node can keep track of when they see transactions come through. If they want to reject a block because it contains a transaction they saw too long ago, then they are free to reject it; no reason for the nodes to compare each other's clocks. If it's too old they will all reject it, which is what we want. So you can get your money faster, and because I have seen other bitcoin services only require 1 confirmation, I decreased the wait time for deposits from 2 confirmations to 1 confirmation because lately the network has been taking 10 to 20 minutes and even longer per block. Deposit and withdrawal system is fully automated and withdrawals are still instant.Good luck in the casino! No, it is not timing out. The fopen call quickly throws the exception. In my php error log, if an exception happens several times in a row the time for all exceptions are within a second or two. And the site does not hang when these failures happen.The default timeout, as configured in my default_socket_timeout, is 60 seconds, which is certainly not being reached.No, I am not generating coins. I have always had coin generation turned off throughout the history of this problem.Yes, I am using PHP5. The timeout is not set so it should be using the default 60 seconds. Let me know if I should try entering something for timeout any way. I am using the PHP jsonRPCClient to connect to my bitcoin 0.3.11beta client, which I am running on Windows with bitcoin -server. I use calls such as getreceivedbyaddress, and occasionally sendtoaddress. I am noticing the following error occur intermittently:PHP Warning: fopen(http://...@127.0.0.1:.../): failed to open stream: HTTP request failed!To overcome this in the PHP code, I simply placed all json calls inside of try statements, then inside while loops that kept trying until there was no exception. The behavior appeared to be 50/50 success/fail, so half the time it only took 1 loop, 1/4 of the time it took 2 loops, etcetera. In any case, the while loops allowed me to pull the result out of the call that I needed.The problem was reduced significantly after an upgrade to the latest version, but it still happened maybe once out of 10 or 15 times.More recently, the problem occurred for the first time on a sendtoaddress call: fopen threw the exception, so my code tried again, and got a success. The result was a double-spend. The bitcoin server obviously processed the first one that gave me an exception. I did some research and it looks like PHP's fopen call will return an exception if it doesn't like the HTTP that comes back to it.In short, there is an incompatibility with PHP's fopen and the bitcoin client (JSON server), and I suspect this is a bitcoin issue because I have not found any reports of similar intermittent problems out of PHP's fopen function.The important part of this bug is it is completely intermittent, at least with the getreceivedbyaddress and sendtoaddress functions. With all other factors held constant, simply resubmitting the JSON request makes PHP happy, even though the server processed the first request and PHP did not like the response. This is how paypal goes. Avoid paypal.As a seller (non-bitcoin-related) I had $1500 pulled back from my account with no recourse since it was an electronic good (software).The only way to even have a chance against paypal chargebacks is to (1) ship something to the confirmed address of the buyer and show paypal the tracking number. And even then, all the forums are saying paypal will rule in favor of the buyer/scammer if they charged it back from the credit card they used to fund their paypal account. (2) Wait 180 days from date of incoming transaction.Paypal is nothing more than a credit card and ACH processor with a front to make it look like you have actual money in your account. They push all of their risk onto the seller. If paypal doesn't get paid by the buyer because of a chargeback or complaint, they yank it back from the seller.A paypal representative admitted to me over the phone that you can not rely on your paypal balance until 180 days have elapsed since its receipt.The Bitcoin Market is safe-- but paypal is not. The correct thing to do in light of this is open up a Liberty Reserve or other type of account which Bitcoin Market supports.Also I am sure that established Bitcoin Market accounts with good history that use paypal are safe. What has the world come to where laws now tell us what we can do (and everything else is illegal) instead of the old days where laws told us what we can't do (and everything else was legal)? Configure your incoming email server to only accept emails with 5 BTC (0.25 USD) attached. If the mail is spam, the addressee keeps the 5 BTC and the sender's email address is blocked. If it's not spam, the addressee must return the 5 BTC in order to receive future emails from the sender.
